<apex:page controller="SiteConfigureController"  standardStylesheets="false" sidebar="false" showHeader="false" action="{!checkAndInitializeCart}" cache="false" docType="html-5.0">

    <style>
        .modal-open .modal{background: rgba(0, 0, 0, 0.6);}
        .configureSiteContainer{padding:0px !important;}
        .highlightEligbleSites{background-color:#FAE7D8 !important};
        .rightPanelTitle{
            margin-top:0.5%;
            width:310px;
        }
        #apltConfElisiteID .modal-body {
            padding-left: 20px;
            padding-right: 20px;
        }
        
        .fiberCodelabelsTextClass {
            font-family: omnesatt_iiregular;
            font-size: 16px;
            font-weight: bold;
            color: #000000;
            text-align: left;
        }
        .fiberCodeSpanCls {
            color: #ffa500!important;
            font-weight: bold;
            line-height : 1.8em;
        }  
        .tab-pane h4{margin-right: 40px;}
        .disabletheCrossBtn{pointer-events: none;}
        .disablethebtn{                       
            pointer-events: none;
            cursor: not-allowed;
            cursor: default !important;
            color: #FFFEFE !important;
            opacity: .65;
            background-color: #357ebd !important;
        }
        .wrapLabel{width: 325px;}
        .tooltip.right {
            margin-left:10px;
            min-width: 250px;
            opacity:1;
            z-index:999;
        }
        .tooltip.fiberCodeToolTipWithoutEMUX{
            max-width:180px;
            padding: 0 5px;
            margin-left: 18px;
            filter: drop-shadow(0 0 1px #999);
        }
        .tooltip.fiberCodeToolTipWithEMUX{
            padding: 0 5px;
            margin-left: 10px;
            max-width: 256px;
            filter: drop-shadow(0 0 1px #999);
        }
        .tooltipTrigger+.tooltip.fiberCodeToolTipWithEMUX>.tooltip-arrow {
            border-right-color: #fff;
            border-right: 10px solid #fff;
            border-width: 10px !important;
            left: -14px;
            top: 40% !important;
            filter: drop-shadow(0 0 0px #999);   
        }
         .tooltipTrigger+.tooltip.fiberCodeToolTipWithoutEMUX>.tooltip-arrow {
            border-right-color: #fff;
            border-right: 10px solid #fff;
            border-width: 10px !important;
            left: -14px;
            top: 35% !important;
            filter: drop-shadow(0 0 0px #999);
        }
        .tooltipTrigger + .tooltip.fiberCodeToolTipWithoutEMUX > .tooltip-inner,.tooltipTrigger + .tooltip.fiberCodeToolTipWithEMUX > .tooltip-inner {
            background-color: #fff;
            color:#000;
            font-family:omnes_att_iimedium;
            text-align: left;
            font-weight: normal;
            max-width: 290px;
            padding:10px
        }
        .tooltip.fiberCodeToolTipWithoutEMUX.in,.tooltip.fiberCodeToolTipWithEMUX.in{
            opacity:1 !important;
        }
        .acceptBtnNoResponseCls{
            margin:10px 0px;            
        }
        .acceptBtnReviewReqCls{
            margin:10px 10px;           
        }
        
        .IplflexError{display:none;}
    
        #tableBlock{
            max-height: 552px;
            margin-top: -1px;
            overflow-x: hidden;
            overflow-y: auto;
        }
        .displayPhoneError{
            color: #D92825;
            font-size: 16px;
            font-family: omnes_att_iimedium;
            font-weight:bold;
        }  
        .fixedPanel{position:fixed;width:850px;margin:0 auto;top:0px;}
        .tooltipTrigger + .tooltip > .tooltip-inner {
            background-color: #fff;
            color:#000;
            font-family:omnes_att_iimedium;
            text-align: left;
            font-weight: normal;
            max-width: 290px;
        }
        .tooltipTrigger + .tooltip.top > .tooltip-arrow {
            border-top-color:#fff; 
            border-top:14px solid #fff;
        }
        .tooltipTrigger + .tooltip.top{
            width:195px;
        }
        .tooltipTrigger + .tooltip.right > .tooltip-arrow {
            border-right-color:#fff; 
            border-right:14px solid #fff;
            left:-5px;
        }
        .checkbox-inline input[type=checkbox] {
             position: relative !important;
        }
        .checkbox-inline {
            float: left;
            width: 70%;
            cursor:default;
        }
          
        .undoRemoveLnk {
            width: 30%;
            white-space: normal;
            float: right;
            padding: 10px 15px;
            display:none;
        }
       .siteNameConfigured {
            cursor:pointer;
            text-decoration: underline;
            color: #3BC1F4;
        }
        .siteNameConfiguredRev {
            cursor:pointer;
            text-decoration: underline;
            color: #D92825;
            font-weight: bold;
            font-family: omnes_att_iimedium;
        }
            
        #tableBlock{
            max-height: 552px;
            margin-top: -1px;
            overflow-x: hidden;
            overflow-y: auto;
        }
        #headerBlock{border: 1px solid #ddd;}
        #configaddedsitesNew { 
            margin-top: 25px; 
            background: #fff !important; 
            border: 1px solid #ddd;
            overflow: hidden;
            overflow-y: auto;
        }
        .siteListPanel{
            width:100%;
        }
        .leftPanelheight{
            max-height:708px;
        }
        .resizeLeftPanel{max-height:613px;}
        .siteListPanel>tbody>tr>td.active{
           background-color: #fff;
        }
        .siteListPanel>tbody>tr>td:first-child {
            padding: 10px;
            font-family:omnes_light;
            font-size:16px;
            font-weight:bold;
            line-height:1.5em;
            max-width: 150px;
            white-space: nowrap;
            vertical-align:top;
       }
       .siteListPanel>thead>tr>th {
            padding: 10px;
            text-align: left;
            border: 1px solid #ddd;
            border-top:0;
            font-family:omnes_att_iimedium;
            font-size:16px;
            font-weight:bold;
        }
        .blockBackground {
            position: fixed;
            width: 100%;
            height: 100%;
            top: 0px;
            left: 0px;
            background-color: rgba(86, 86, 86, 0.72);
            z-index:1030;
        }
        .changeinterface1{color :#a3a3a3 !important;}
        .changeinterface2{       
           background-image:url("{!($Resource.portalDesignImg)}/new_arrow_small_grey.png"); 
           background-size:35px 38px !important;
        }
        .styled-select-small select.changeinterface3 {
            background:none repeat scroll 0% 0% rgba(163, 163, 163, 0.54) !important;
            opacity: 0.65 !important; 
        }
       .RmvLink{
           pointer-events: none;
           cursor: default;
           color:#656565;
           font-weight: bold;
       }
       .enableLink{
          color: #3BC1F4;
          pointer-events: all;
          cursor: pointer;
          font-weight: bold;
       }
       .enableSiteLink {
            color: #4A6496;
            padding: 0 20px;
            font-weight: bold;
       }        
       .thinDividerLine{
            border-bottom:1px solid #ddd;
            margin: 30px 0;
        }
        .ipFlexSection .sectionHeader{
            font-size:18px;
            font-family: omnes_att_iimedium;
            font-weight: normal;
            color: #000000;         
        }
        .ipFlexSection .section{margin: 20px 0;}
        .ipFlexSection .indvSectionHeader{margin-bottom:5px;}
        .ipFlexSection .toolTipIconPosition{margin-left:40px;}
        .ipFlexSection .tooltip{border: 1px solid #000;opacity: 999;}
        .ipFlexSection .tooltip .tooltip-inner{text-align:left;}
        .smallText{font-size:14px;ine-height: 1.2em;}
        .errorMsg{color:red;}
        .ipFlexSection .userInputFields{
            width: 300px;
            margin-top: 5px;
            height: 40px;
        }  
        
        #okayBtn {
            text-align: center;
            margin-top: 35px;
        }
        
        .modal-body.requireOneSite {height: 154px;}
        .modal-dialog.requireOneSite {margin-top: 200px!important;}
        
        p.removeSelectedModal {
            padding: 40px 55px 0 33px;
            font-size: 24px;
        }
        
        .modal-content.applyAllPopUp {width: 665px;}
        #closeBtn {margin: -15px;}
        .onetime {
        font-family: omnesatt_iiregular;
        font-size: 18px;
        font-weight: normal;
        margin-top:25px;
        }  
        
        .modal-content.requireOneSite {width: 665px;}
        
        .modal-body.iglooCallErrorMsgModal {
            font-family: omnes_light;
            color: #333;
            line-height: 18px;
            font-weight: bold;
            font-size:16px;
            padding: 35px 20px 75px 30px;
            text-align : center;
        }
        .modal-dialog.iglooCallErrorMsgModal {margin-top: 200px!important;}
        .modal-content.iglooCallErrorMsgModal {width: 665px;}
        .iglooTimerMsg {text-align : left;}
        
        .configureBtnSection{
            border:1px solid #ddd;
            background-color: #ea7400;
            float:left;
            padding:10px;
            width: 100%;
        }
        .configureBtnSection .headerBlock{
            color: #ffffff; 
            margin-bottom:10px;
            font-size: 14px;
            font-family:omnes_att_iimedium;
            margin-left: 4px;
        }    
        .configureBtnSection .configureBtn{
            background-color:#fff;
            color:#656565;
            border: 1px solid grey !important;
            padding: 0 5px !important;
            margin:0;
            width: auto;
        }
        .disableBtn{
            background-color: #ddd !important;
            pointer-events: none;
            color: #fff !important;
            border:none;
        }
        .disableLink{
            color: #ddd !important;
            pointer-events: none;        
        }
        .highlightConfigurableSite{
            background-color: rgba(234,116,0,0.15);
        }
        .modal-header.ITPA-custom-header{
            padding: 25px 10px 20px 60px;
            border-bottom: 1px solid #000;
            
        }
        .modal-body.ITPA-custom-body{
            padding: 20px 60px;
            font-family: omnes_light;
            color: #333;
            line-height: 18px;
            font-weight: bold;
        }
        .modal-header #closeBtnForEditModal{
              margin-top: -25px;
              margin-right: 0px;
        }
        .configureBtn.fontForConfigureBtn{font-family:omnes_att_iimedium !important;}
        tbody tr:nth-child(odd),tbody tr:nth-child(even)  {
            background: none !important;
        }
        .m-b-10 {margin-bottom: 10px;}
        .m-t-10 {margin-top: 10px;}        
        .m-b-20 {margin-bottom: 20px;}
        .m-t-20 {margin-top: 20px;}
        .list.siteListPanel{border: 1px solid #ddd;}
        .paginationArrow {
            border: 1px solid #ddd !important;
            padding: 0 10px !important;
            color: #056fab !important;
            font-weight: bold !important;
            background: #fff !important;
            font-size: 16px !important;
            margin: 0 !important;        
        }
        .paginationArrow[disabled] {
            color: #ddd !important;
        }         
        .siteAddressInLeftPanel{
            word-break: break-word;
            white-space: normal;        
        }
        .iglooBorder{
            position : absolute;
            border: 1px solid red;
            width:100%;
            margin-top:10px;
            margin-left: -15px;
            z-index: -100;
        }
    
        .removeIglooBorder {
            border-bottom:1px solid #ddd;
            margin: 40px 0 20px;
        }
        .rightPanelBotBorder {
            border-top:1px solid #ddd;
            margin-top:30px;
            margin-bottom:24px;
        }
        .iglooErrorMsg{
            color: #D92825;
            font-size: 16px;
            font-family: omnes_att_iimedium;
            font-weight:bold;
            width: 100%;
            padding-top:5px;
        }
        .iglooErrorMsgWrap{
            white-space:nowrap;
        }
        .iglooGenericErrMsgCls{
            margin-top: 20px;
            margin-bottom: 15px;
        }
         .applyAllModal{
            font-size : 20px;
            margin-bottom: 25px;
        }
        .vLanLabelDisable{
            font-family:omnes_light;
            font-size:16px;
            color:#a2a2a2 !important;
            text-align:left;
            margin-right:8px;
        }
        .vLanItalicDisable
        {
            font-family:omnes_att_iilight_italic;
            font-size:14px;
            color:#a2a2a2 !important;
            text-align:left;
            margin-left:25px;
        }
        .selectedSiteHighlighted{ background-color:#F5F5F5 !important;}
        .styled-select-small select {
            background: none repeat scroll 0% 0% transparent;
            
            padding: 5px;
            line-height: 26px;
            border: 0px none;
            border-radius: 0px;
            height: 40px;
            width:300px;
            cursor: pointer;
            -moz-appearance:none;
        }
        #configaddedsites tr { border-bottom: 1px dashed #ddd; }
        #configaddedsites td { border: 0 !important; }
        #configaddedsites td:nth-child(odd) { display: inline; }
        #theTable1 td { border: none !important; padding: 15px; }
        @-moz-document url-prefix() { .priceAligned{margin-top:-11px;} }
        .monthlyprice { font-family: 'omnes_att_iimedium'; background: #fff; border-radius: 4px; padding: 6px 12px; text-align: right; width: 100%; line-height: 1.42857143; }
        .noborders td { border: 0 !important; }
        .tooltipTrigger {
            cursor: pointer;
        }
        .markCSS {
            background-color: #FFFFFF;
            color: black;
        }
        .disableClearForm{ 
            pointer-events: none;
            cursor: default; 
            color: gray !important; 
        }
        .usageDiv{
            font-family: omnes_att_iimedium;
            font-size: 16px;
            font-weight: bold;
            color: #D92825;
            text-align: left;
        } 
        #errorMessageFlag {
            display:none;
            margin-bottom: 16px;
        }
        .uBBItalic{
            font-family:omnes_att_iilight_italic;
            font-size:14px;
            color:#000000 !important;
            text-align:left;
            margin-left:27px;
        }
        .uBBItalicDisable
        {
            font-family:omnes_att_iilight_italic;
            font-size:14px;
            color:#a2a2a2 !important;
            text-align:left;
            margin-left:25px;
        }
        .uBBLabel {
            font-family:omnesatt_iiregular;
            font-size:16px;
            color:#000000 !important;
            text-align:left;
            margin-right:8px;
        }
        .uBBLabelDisable {
            font-family:omnesatt_iiregular;
            font-size:16px;
            color:#a2a2a2 !important;
            text-align:left;
            margin-right:8px;
        }
        .vLanItalic{
            font-family:omnes_att_iilight_italic;
            font-size:14px;
            color:#000000 !important;
            text-align:left;
            margin-left:27px;
        }
        
        /*Radhika : UBB Font change on on in and out region fix END*/
           .dropDownValue{      
            font-family: omnes_light !important;            
            color: #000000;             
            font-size: 16px;            
            text-align: left;           
            margin-top:1%    
            width:300px;
            height:40px;
            }               
                 
            .styled-select-small{       
            background-size: 35px 38px;
            moz-appearance: none;
            -webkit-appearance: none;
            } 
            .bandwidthDiv{      
            width: 300px;       
            color: #4CA90C;     
            font-family: omnes_att_iimedium;        
            font-size: 16px;        
            margin-top: 1%;     
            margin-bottom: 3%; 
            white-space: nowrap;    
            }      
             .labelsTextClass{
            font-family: omnes_att_iimedium;
            font-size: 16px;
            font-weight: normal;
            color: #000000;
            text-align:left;
            }
            .OverageDiv{
            font-family: omnes_light !important;
            font-size: 12px;
            margin-left: -3%;
            text-align: left;
            color: #000000;
            }
            .usageItalicHeader{     
            margin-left: 8%;        
            font-size: 16px;        
            color: #000000;     
            text-align: left;       
            font-family: omnes_att_iilight_italic;      
            }       
            .tooltipSpace{      
            margin-left: 2.1%;      
            }
             .labelsTextClass{
            font-family: omnes_att_iimedium;
            font-size: 16px;
            font-weight: normal;
            color: #000000;
            text-align:left;
            } 
             .glyphicon {
                cursor: pointer;
            }
           
            .arrowImageDim {
            height:65px !important;
            width:65px !important;
        }
        
         .scrollToTop{ padding:10px; text-align:center; font-weight: bold; color: #444; text-decoration: none; position:fixed; top:80%; right:30px; display:none; .background: url(url('!$Resource.scrollTop') no-repeat center;) no-repeat 0px 20px; width:72px; height:106px; z-index: 9999; display:none; }    
         .scrollToTop:hover{
            text-decoration:none;
        }
    
        i.glyphicon span{
            display:none;
            position: absolute;
            top:-35px;
            left:35px;
            width: 275px;
            padding: 10px;
            z-index: 100;
            background: #fff;
            color: #000000;
            text-align:left;
            box-shadow: rgba(0, 0, 0, 0.1) 1px 1px 2px 1px;
            -moz-border-radius: 5px; /* this works only in camino/firefox */
            -webkit-border-radius: 5px; /* this is just for Safari */
            font-family:omnes_light !important;
            font-size:13px !important;
            
        }   
        i.glyphicon span:before{
            content:'';
            display:block;
            width:0;
            height:0;
            position:absolute;
            border-top: 15px solid transparent;
            border-bottom: 15px solid transparent; 
            border-right:15px solid white;
            left:-14px;
            top:28px;
            
        }    
        i:hover.glyphicon span {
            display: block;
        } 
        
        h1.manage_content-header, div.tabbed_menu {
            margin-bottom: 20px !important;
            margin-top: 20px !important;
        }
        .modal-backdrop { background-color:#fff;}
        .createUserButtonDisable {
            -webkit-border-radius: 4px !important;
            font-family: omnes_att_iimedium;
            background-color: #d1d1d1;
            border-color: #d1d1d1;            
        }
        .priceText{height: 24px !important; text-align: right !important; width: 100% !important; margin-left: 20px !important; border: 1px solid #FFF !important; margin-top: -6px !important;}
        .orangeText {
            color: #ea7400;
            font-weight: bold;          
        }
        .OORSENote{
            display:none;
            float:right;
            margin-top:40px;
        }
        .OORSEErrMsg{
            display:none;
        }
        #apltConfElisiteID .errorM3 tr{
            background: #f2f2f2 !important;
        } 
        .priceLoadingIcon{
            position:relative;
            left: 28%;
            margin-top:15px;
        } 
        .deletedRow{
            background-color: #e6e6e6 !important;
            pointer-events:none;
        } 
        .chkBoxPromoTag{
            margin-left:7px;
            top:-2px;
            vertical-align: middle;
            /*padding-right: 10px;*/
        }
        .applyConfigLinkSection .tooltipTrigger{
            float:right;
            margin-left:10px;
        }
        .applyConfigLinkSection .popover{
            width:200px;
        }
        table.siteListPanel>thead>tr>th,table.siteListPanel>tbody>tr>td{
            border: none;
            border-bottom: 1px dashed #ddd !important;
        }
        table.siteListPanel>thead>tr>th(1),table.siteListPanel>tbody>tr>td(1){
            max-width: 30px;
        }
        div#leftPanelContainer{
            max-width:500px
        }
        div.products-container, div.summaryPricingBlock{
            width: 55% !important;
        }
        .availablePromoTag{
            display:none;
        }
        div.availablePromoTag .popover.right{
            margin-left: 18px;
            margin-top: 0px !important;
            max-width: fit-content !important;
            max-width: -moz-fit-content !important;
        }
        .dropDownPromoTag img{
            vertical-align: -webkit-baseline-middle;
            margin: 10px 0 10px 10px;
        }
        div.lineItem{
            display: -webkit-inline-box;
        }
        .priceAligned{
            font-weight: bold;
            vertical-align: -webkit-baseline-middle;
        }
        .listPrice{
            text-decoration: line-through;
            top: 10px;
            margin-left:10px;
            position:relative;
            -moz-margin-top: 8px;
            vertical-align: middle;
        }
        .listPriceCheckBox{
            text-decoration: line-through !important;
            margin-left:5px;
            position:relative;
            -moz-margin-top: 8px;
            vertical-align: text-bottom;
            top: -4px;
        }
        span.glyphicon.glyphicon-promotionApplied{
            top: 5px;
            padding-left: 10px;
        }
        div.priceAligned .popover.bottom>.arrow{
            display:none;
        }
        div.priceAligned .tooltip-inner{
            width: auto;
            height:auto;
        }
        .promotionAppliedData, .promotionAvailableData{
          display:none;
        }
        .popover-content{
          height:auto;
          font-size:12px;
          padding:5px 9px !important;
        }
        .popover-title{
            background:#fff;
        }

        .priceAligned .popover-content table.promoTable td:first-child{           
            width:200px !important;
            max-width: 200px;
            text-overflow: ellipsis;
            overflow: hidden;
            padding: 0 5px;
        }
        .priceAligned .popover-content table.promoTable td:nth-child(2){
            color: #ea7400 !important;
            font-family: omnesatt_iiregular !important;
        }
        .priceAligned .popover-content table.promoTable td:nth-last-child(1){
            color: red !important;
            font-size: 10px;
            padding: 5px 10px;
            vertical-align: top;
        }
        .priceAligned .popover-content table.promoTable td{
            padding: 2px 0px;
            white-space: nowrap;
            font-size: 14px;
            line-height: 1.2em;
            font-family: omnes_light;
        }
        .priceAligned .popover.bottom{
            left: -185% !important;
            max-width: 400px;
            min-width: 400px;
            border-radius: 0;
        }
        .priceAligned .popover-title, .availablePromoTag.availablePromoTagTop .popover-title{
            border-bottom: none;
            padding-bottom: 0;
            margin-bottom: 6px !important;
        }
        .priceAligned .popover-title h5, .availablePromoTag.availablePromoTagTop .popover-title h5{
            padding: 0;
            margin: 0;
            font-weight: bold;
            font-size: 16px;
            font-family: omnes_att_iimedium;
        }
        .availablePromoTag.availablePromoTagTop .popover{
            min-width: 445px;
            left: 30% !important;
            padding: 4px !important;
            border-radius:4px !important;
        }
        .availablePromoTag.availablePromoTagTop .popover.top>.arrow{
            left: 31% !important;
        }
        .promotionSpeeds,.promotionPlan{
            width:200px;
            padding-right:20px;
            word-wrap: break-word;
            font-size:12px;
        }
        .availablePromoTagTop .promotionSpeeds, .availablePromoTagTop .promotionPlan{
            width:300px !important;
            padding-left:6px;
            font-size:14px !important;
        }
        .availablePromoTagTop b{
             padding-left:6px;
             font-size: 16px;
        }
        .featurePromotionName{
            max-width:185px;
            width: 200px !important;
            padding-right:20px;
            word-wrap: break-word;
            font-size:12px;
        }
        .promotionPercentage{
            color:#ea7400 !important;
            font-size:12px;
            font-weight:bold;
            white-space: nowrap;
            font-family: omnesatt_iiregular !important;
        }
        .availablePromoTagTop .promotionPercentage{
            font-size:14px !important;
        }
        
        div.reviewQuoteBtnSection .btn-secondary{
        min-width: 175px;
        width: auto;
        height: 40px;
        color: #595959 !important;
        background: #ffffff !important;
        border: 1px solid #595959;
        border-radius: 4px;
        padding: 0 15px;
        text-align: center;
        margin-right: 25px;
    }
    div.reviewQuoteBtnSection .btn-primary{
        min-width: 175px;
        width: auto;
        height: 40px;
        color: #ffffff !important;
        background: #0568ad !important;
        border: 1px solid #0568ad;
        border-radius: 4px;
        padding: 0 15px;
        text-align: center;
    }
    div.reviewQuoteBtnSection .btn-primary[disabled]{
        background: #d1d1d1 !important;
        border: 1px solid #d1d1d1;
    }
 #manage_content div.removeSiteOnDiscardOverlay input.btn-primary{           
            font-family: omnes_att_iimedium !important;
            background-color: #0568ad !important;
            border-color: #0568ad !important;
            height: 40px;
            font-size: 16px;
            text-align: center;
            vertical-align: middle;
            width: 175px !important;
        }
        #manage_content div.removePop input.btn-primary{           
            font-family: omnes_att_iimedium !important;
            background-color: #0568ad !important;
            border-color: #0568ad !important;
            height: 40px;
            font-size: 16px;
            text-align: center;
            vertical-align: middle;
            width: 175px !important;
        }
        #manage_content  div.removeSiteOnDiscardOverlay input.btn-primary[disabled]{
            background: #d1d1d1 !important;
            border: 1px solid #d1d1d1;
        }
        .cancelLink{
            float: left;
            padding: 8px 38px 4px 4px;
            font-family: omnes_att_iimedium;
            font-size: 19px;
            color:  #0568ad !important;
        }
        .cancelLink:hover, .goToDashboardLink:hover{
            color:  #70c4e8 !important;
        }
        div.removeSiteOnDiscardOverlay p{
            font-family: omnes_att_iimedium;
            font-size: 26px !important;
            line-height: .8em;
        }
        div.removePop p{
            font-family: omnes_att_iimedium;
            font-size: 26px !important;
            line-height: 1.2em;
        }
        #successMsgSection{
            margin: 32px 0 !important;
        }
        .tableDataSection .table>tbody>tr>td.putDollarSign{
            font-size: 16px;
            text-align: right;
            white-space: nowrap;
        }
        .tableDataSection .table>tbody>tr>td.highlightPriceUpdate{
            font-size: 16px;
            white-space: nowrap;
            background: #ea740070 !important;
        }
        span.listPrice{
            text-decoration-line: line-through;
            color: #00000087 !important;
            top:5px !important;
        }
        span.priceAligned{
            color: #000;
        }
        .pricingSummary{
            padding-top: 10px;
        }
        .dropDivider{
            color:#595959;
            border-top: 1px solid #939393;
        }
        div.removeSiteOnDiscardOverlay .modal-body{
            padding: 12px 36px;
            white-space: nowrap;
        }
        div.removePop .modal-body{
            position: relative !important;
            padding: 0 32px !important;
            padding-bottom: 4px !important;
        }
        div.removeSiteOnDiscardOverlay .modal-header{
            border: 0;
            padding-top: 9px;
            width: 950px;
        }
        div.removePop .modal-header{
            border: 0;
            padding-top: 9px;
            width: 750px;
        }
        div.removeSiteOnDiscardOverlay button.close{
            background:none;
            margin-right: 18px;
        }
        div.removeSiteOnDiscardOverlay .modal-footer{
            padding: 2px 35px 37px 0;
        }
        div.removePop .modal-footer{
            padding: 20px 35px 40px 0;
        }
        .sitesDataTable {
            width: 100% !important;
            font-family: omnes_att_iimedium;
        }
        div.removeSiteOnDiscardOverlay .modal-content{
            top: 200px;
            width: 950px;
            right: 160px;
        }
        div.removePop .modal-content{
            top: 200px;
            width: 750px;
            right: 100px;
        }
        .table.subTotalSummary{
            margin-bottom: 8px !important;
            margin-top: 20px;
        }
        
        .promotionAppliedData{
            display:none;
            background: #fff;
            border: 1px solid #ccc;
            padding: 10px;
            margin-left: 10px;
            margin-bottom: 24px;
        }
        .promotionAppliedData h5{
            margin-bottom: 10px;
        }
        table.promoTable td:first-child{           
            text-overflow: ellipsis;
            overflow: hidden;
            padding: 0 0px;
            font-size: 16px;
        }
        
        table.promoTable td:nth-child(2){
            color: #ea7400 !important;
        }
        
        /*table.promoTable td:nth-last-child(1){
            color: red !important;
            font-size: 10px;
            padding: 5px 10px;
            vertical-align: top;
        }*/
        
        table.promoTable td{
            padding: 2px 0px;
            font-size: 14px;
            line-height: 1.2em;
            font-family: omnes_light;
            background: #fff;
            font-weight: 700 !important;
        }
        .availablePromoTag.availablePromoTagTop table.promoTable td{
            padding: 2px 20px 0px 0px !important;
        }
        .additionalDiscount{
            color:#ea7200;          
        }
        div.promotionAppliedData h5{
            font-family: omnes_att_iimedium;
            font-size: 18px;
        }
        span.quoteSummaryTitle{
            font-size: 28px !important;
            font-weight: 700;
            font-family: omnes_light;
        }
        .grey_hr{
            border-bottom:1px solid #000;
            height: 1px;
            background: #000;
            margin-left: 10px;
            margin-bottom: -11px;
            margin-top: 8px;
        }
        .pricingSummarydiv{
            margin-top: 15px;
            padding: 0;
            margin-bottom: -55px;
        }
        .registerQuote{
            border:1px solid #939393 !important;
            border-right:none !important;
            width: 138px !important;
            border-top-right-radius: 0 !important;
            border-bottom-right-radius: 0 !important;
            padding: 7px 12px !important;
            color: #fff !important;
            margin-right: -4px;
        }
        /*.tableDataSection .table a.disabled{
            color: #939393 !important;
            pointer-events: none !important;
            cursor: default !important;
        }*/
        .dropdownStyling{
                font-size: 18px;
        }
        .sitePricing{
            margin-right: 38px;
        }
        .ipflexListPrice{
            padding-left: 34px;
        }
        .featureFieldMozilla{
            padding-bottom: 20px;
        }
    </style>
    <script type="text/javascript">
   var hiCapFlagforPromotion;
    function getIndexOfTheOption( elem, token ){
        for( var i = 0; i < elem.options.length; i++ ){
            if( elem.options[i].innerHTML == token ){
                return i;
            }
        }
        return -1;
    }
    function removeAndAddPrivateLineOnLoad(){
         setTimeout(function(){
            var hiCap = document.getElementById("hdnHiCapFlexFlag").value;
            if( hiCap == 'true' ){
                var trElemId = 'container'+parseInt(portTypeIndex); 
                var currElementTr = document.getElementById(trElemId);
                if( typeof currElementTr != 'undefined' ){
                    var innerTds = currElementTr.getElementsByTagName("td");
                    var selectElem = innerTds[1].getElementsByTagName("select");
                    if( typeof selectElem[0] != 'undefined' ){
                        selectElem[0].remove(getIndexOfTheOption(selectElem[0], 'Private Line'));
                    }
                }   
            }
       }, 100);
    }
    
    var timerOne;
    var timerTwo;
    function showPopupOnIglooCall(){
        var portType = $('.portTypeDivCls select').val();
        if(typeof portType != 'undefined' && (portType == 'Switched Ethernet' || portType == ''))
        {
            var timerOneLimit = 0;
            var timerTwoLimit = 0;
            if(typeof $('[id$=configPageTimeout1]').val() != 'undefined' && typeof $('[id$=configPageTimeout1]').val() != '' && $.isNumeric($('[id$=configPageTimeout1]').val())){
                timerOneLimit = parseInt($('[id$=configPageTimeout1]').val());
            }
            if(typeof $('[id$=configPageTimeout2]').val() != 'undefined' && typeof $('[id$=configPageTimeout2]').val() != '' && $.isNumeric($('[id$=configPageTimeout2]').val())){
                timerTwoLimit = parseInt($('[id$=configPageTimeout2]').val());
            }
            timerOne = setTimeout(function(){
                $('#iglooCallProcessModal').modal('show');
            },timerOneLimit);
            timerTwo = setTimeout(function(){
                $('#iglooCallProcessModal').modal('hide');
                $('#iglooCallErrorMsg2Modal').modal('show');
            },timerTwoLimit);
        }        
    }
    
    
    function clearIglooTimer(){
        var portType = $('.portTypeDivCls select').val();
        var inRegionFlag = $('[id$=inRegionFlag]').val();
        if(typeof portType != 'undefined' && (portType == 'Switched Ethernet' || portType == '' )&& inRegionFlag == 'false')
        {  
            if(typeof timerOne != 'undefined'){
                clearTimeout(timerOne);
            }
            if(typeof timerTwo != 'undefined'){
                clearTimeout(timerTwo);
            }
            if(typeof $('#iglooCallProcessModal') != 'undefined' && $('#iglooCallProcessModal').is(':visible')){
                $('#iglooCallProcessModal').modal('hide');
            }
            if(typeof $('#iglooCallErrorMsg2Modal') != 'undefined' && $('#iglooCallErrorMsg2Modal').is(':visible')){
                $('#iglooCallErrorMsg2Modal').modal('hide');
            }
        }
        
    }
    
    function showSecondErrorOnExceedingRetry(){
        var portType = $('.portTypeDivCls select').val();
        var inRegionFlag = $('[id$=inRegionFlag]').val();
        if(typeof portType != 'undefined' && portType == 'Switched Ethernet' && inRegionFlag == 'false')
        {
            var retryFlag = $('[id$=iglooRetryCountFlag]').val();
            var errorFlag = $('[id$=iglooErrorFlag]').val();
            if(typeof retryFlag != 'undefined' && parseInt(retryFlag) >=4 && (typeof errorFlag != 'undefined' && errorFlag == 'true')){
                $('#iglooCallRetryMsgModal').modal('show');
            }      
            else if(typeof errorFlag != 'undefined' && errorFlag == 'true'){
                setTimeout(function(){$('#iglooCallErrorMsg2Modal').modal('show')},500);
            } 
        }
    }
    
    function enableApplyOnIglooPopup(){
        closePopup();
        validateFormAndEnableApply(null,'on');
    }
    
    function checkForReviewRequired(){
        var reviewRequiredCount = 0;
        var isApplyAllFlag = '{!quoteObj.applyAllFlag__c}';
        if(typeof $('[id$=ReviewRequiredSites]') != 'undefined' && $.isNumeric($('[id$=ReviewRequiredSites]').val()) && isApplyAllFlag == 'true'){
            reviewRequiredCount = parseInt($('[id$=ReviewRequiredSites]').val());
        }
        if(reviewRequiredCount > 0){
            $('#applyAllPopUp').modal('show');
        }
        
    }
    
    var scrollPos;
    var footerOffSet=0;
    var leftPanelOffSet=0;
    var panelPosition,leftPanelHeight,leftPanelBottomOffset;
    function scrollToWindowPos(){
        $(window).scrollTop(scrollPos);
        var leftPanelWidth=$("#leftPanelContainer").outerWidth();
        var headerHeight=$('#top_nav_bar').height();
        leftPanelHeight=$("#leftPanelContainer").height();
        scrollPos=$(window).scrollTop()+headerHeight; 
        leftPanelBottomOffset= scrollPos + leftPanelHeight;
        if($('#panelFooter').length){
            footerOffSet=$('#panelFooter').offset().top;        
            panelPosition=footerOffSet-leftPanelHeight-leftPanelOffSet; 
        }        
        
        if(leftPanelBottomOffset >= footerOffSet)
            $("#leftPanelContainer").css({"position":"absolute","top":panelPosition+'px'});
        else
            $("#leftPanelContainer").css({'position':'fixed','top':headerHeight+'px','width':leftPanelWidth}); 
    }
    
    function fixedSiteTablePanel(){
        var leftPanelWidth=$("#leftPanelContainer").outerWidth();
        var headerHeight=$('#top_nav_bar').height();
        footerOffSet=$('#panelFooter').offset().top;
        leftPanelHeight=$("#leftPanelContainer").height();
        scrollPos=$(window).scrollTop()+headerHeight; 
        leftPanelBottomOffset= scrollPos + leftPanelHeight;
        panelPosition=footerOffSet-leftPanelHeight-leftPanelOffSet; 
        
        if(leftPanelBottomOffset >= footerOffSet)
            $("#leftPanelContainer").css({"position":"absolute","top":panelPosition+'px'});
        
        $(window).scroll(function(){
            scrollPos=$(window).scrollTop()+headerHeight; 
            leftPanelBottomOffset= scrollPos + leftPanelHeight; 
            panelPosition=footerOffSet-leftPanelHeight-leftPanelOffSet;                                               
            if(scrollPos >= leftPanelOffSet){
                $("#leftPanelContainer").css({'position':'fixed','top':headerHeight+'px','width':leftPanelWidth});                    
            }else
                $("#leftPanelContainer").css({"position":"relative","top":"0px"});
            
            if(leftPanelBottomOffset >= footerOffSet){
                $("#leftPanelContainer").css({"position":"absolute","top":panelPosition+'px'});
            }  
            if ($(this).scrollTop() > 200) {
                $('.scrollToTop').fadeIn();
            } else {
                $('.scrollToTop').fadeOut();
            } 
        });
    }

    function removeUnEligiblileAccessSpeed(){
        var inRegion ='{!inRegionSite}';
        var portType = $('.portTypeDivCls select').val();
        if(typeof inRegion != 'undefined' && inRegion != null && inRegion=='false'){
        var IglooCallProcessingFlag = $('[id$=IglooCallProcessingId]').val();
        var IglooSpeedBump = '{!isIglooSpeedBump}';
        if(typeof IglooCallProcessingFlag != 'undefined' && IglooCallProcessingFlag == 'true'){
            var accessSpeedVal = $('#accessSpeedCurVal').val();
            var portspeedIndex = $('.portSpeedDivCls option[value="'+accessSpeedVal+'"]').index();
            
            if(portspeedIndex==-1 && accessSpeedVal != null && accessSpeedVal != ''){
                portspeedIndex =0;
            }
            if(typeof IglooSpeedBump != 'undefined' && IglooSpeedBump == 'true' && portspeedIndex >0){
                $('.portSpeedDivCls option:gt('+portspeedIndex+')').remove();
            }
            if(portspeedIndex >0){
                $('.portSpeedDivCls option:eq('+portspeedIndex+')').remove();
            }
        }
            
        }
        else if((typeof inRegion != 'undefined' && inRegion != null && inRegion=="true") 
            && (typeof portType != 'undefined' && portType != null && portType == 'Switched Ethernet')){
            
            var element = 'portSpeedDivCls';
            var list = {!speedsNotAvailableITPAList};
            $.each(list, function( index, value ) {
                var dropDownIndex = $("."+element+" option[value='"+value+"']").index();
                if(dropDownIndex>0){
                    $("."+element+" option").eq(dropDownIndex).remove();
                }
            });
        }
    }
    
    function onPortSpeedChange(){       
        var IglooSpeedBump = '{!isIglooSpeedBump}';
        var accessSpeedCurVal = $('#accessSpeedCurVal').val();
        var inRegion ='{!inRegionSite}';
        var portType = $('.portTypeDivCls select').val();
        if(typeof inRegion != 'undefined' && inRegion != null && inRegion=='false'){
        if(typeof accessSpeedCurVal != 'undefined' && accessSpeedCurVal != ''){            
            var accessSpeedIndex = $('.accessSpeedDivCls option[value="'+accessSpeedCurVal+'"]').index();
           
           
            if(accessSpeedIndex==-1 && accessSpeedCurVal != null && accessSpeedCurVal != ''){
                accessSpeedIndex =0;
            }           
            if(typeof IglooSpeedBump != 'undefined' && IglooSpeedBump == 'true' && accessSpeedIndex > 0){
                $('.accessSpeedDivCls option:gt('+accessSpeedIndex+')').remove();
            }
            if(accessSpeedIndex > 0){
                $('.accessSpeedDivCls option:eq('+accessSpeedIndex+')').remove();
            }
        }     
    }
        else if((typeof inRegion != 'undefined' && inRegion != null && inRegion=="true") 
            && (typeof portType != 'undefined' && portType != null && portType == 'Switched Ethernet')){
    
            var element = 'accessSpeedDivCls';
            var list = {!speedsNotAvailableITPAList};
            $.each(list, function( index, value ) {
                var dropDownIndex = $("."+element+" option[value='"+value+"']").index();
                if(dropDownIndex>0){
                    $("."+element+" option").eq(dropDownIndex).remove();
                }
            });
        }
    }
    
    function updateIglooBorderHeight(){
        var IglooPortSpeed = $('[id$=IglooPortSpeed]').val();
        var IglooAccessSpeed = $('[id$=IglooAccessSpeed]').val();
        var IglooInterfaceTypeFlag = $('[id$=IglooInterfaceTypeFlag]').val();       
        var IglooReviewRequired = false;
        if(IglooPortSpeed == 'true' || IglooAccessSpeed == 'true' || IglooInterfaceTypeFlag == 'true'){
            IglooReviewRequired = true;
        }        
        
        if(IglooReviewRequired == true){
            var startPosition =$("#rightPanelTopBorder").offset().top;
            var endPosition =$("#rightPanelBotBorderId").offset().top;
            var divHeight = (endPosition)-startPosition;
            $("#rightPanelTopBorder").css({'height':divHeight+'px'});
        }else{
            scrollToWindowPos();
        }        
    }
    
    function changeinterfaceonapplyandget(){
        var valporttype=$(".privatedrop").find("select").val();
        
        if(valporttype!=null && valporttype == 'Private Line'){
            $(".id123").addClass("changeinterface1");
            $(".id123drop").addClass("changeinterface2");
            $(".id123drop").find("select").addClass("changeinterface3");
        }else {        
            $(".changeinterface1").removeClass("changeinterface1");
            $(".changeinterface2").removeClass("changeinterface2");
            $(".changeinterface3").removeClass("changeinterface3");
        }
        //Disable btn after pricing
        var priceBtnObj = $('.createUserButtonDisable');
        if(priceBtnObj != null && typeof priceBtnObj != undefined){
            priceBtnObj.prop('disabled',true);
        }
        
        return true;
    }
    
    function changeinterface(inpObj){
        if(inpObj!=null && inpObj.value == 'Private Line'){
            $(".id123").addClass("changeinterface1");
            $(".id123drop").addClass("changeinterface2");
            $(".id123drop").find("select").addClass("changeinterface3");
        }else {
            $(".changeinterface1").removeClass("changeinterface1");
            $(".changeinterface2").removeClass("changeinterface2");
            $(".changeinterface3").removeClass("changeinterface3");
            
        }
        return;
    }    
    
    function refreshJSVariables(){
        requiredfields = document.getElementById("hdnFieldIndices").value;
        fieldIndexAr = requiredfields.split(",");
        lastValue = fieldIndexAr[fieldIndexAr.length-1];
        lastValueAfterIncr = parseInt(lastValue) + 1;
        fieldIndexArNew = requiredfields.split(",");
        portTypeIndex = parseInt(document.getElementById("hdnPortTypeIndex").value);
        hiCapFlexIndex = parseInt(document.getElementById("hdnHiCapIndex").value);
        
    }
    
    var requiredfields = "{!fieldIndices}";
    var fieldIndexAr = [];
    var fieldIndexArNew = [];
    var lastValue;
    fieldIndexAr = requiredfields.split(",");
    lastValue = fieldIndexAr[fieldIndexAr.length-1];
    var lastValueAfterIncr = parseInt(lastValue) + 1
    fieldIndexArNew = requiredfields.split(",");
    var portTypeIndex = parseInt('{!portTypeIndex}');
    var hiCapFlexIndex = parseInt('{!HicapIndexInt}');
    var requiredCheckboxes = "{!selectCheckBox}";
    var checkboxIndexArray = [];
    checkboxIndexArray = requiredCheckboxes.split(",");
    var requiredDropdowns = "{!selectDropdown}";
    var dropdownIndexArray = [];
    dropdownIndexArray = requiredDropdowns.split(","); 
    
    function disableCheckboxes() {
        for( var i = 0; i < checkboxIndexArray.length; i++ ) {
            cntr = parseInt(checkboxIndexArray[i]);
            var currIndexId = 'container'+cntr;
            var currElementTr = document.getElementById(currIndexId);
            
            if( typeof currElementTr != 'undefined' ) {
                var innerTds = currElementTr.getElementsByTagName("td");
                var checkedElem = innerTds[1].getElementsByTagName("input");
                checkedElem[0].disabled=true;
            }   
        }         
    }
    
    function disableDropdowns()  {
        for( var i = 0; i < dropdownIndexArray.length; i++ ) {
            cntr = parseInt(dropdownIndexArray[i]);
            var currentIndexId = 'container'+cntr;
            var currentElementTr = document.getElementById(currentIndexId);
            
            if( typeof currentElementTr != 'undefined' ) {
                var innerTd = currentElementTr.getElementsByTagName("td");
                var checkedElement = innerTd[1].getElementsByTagName("select");
                checkedElement[0].disabled=true;
            }   
        } 
    } 
    
    function disableIpflexDropdowns()  {
        $(".dropDownValue").attr("disabled","disabled"); 
    }
    
    function toDoAfterApplyEligible(isOfflineMode){
        if(!isOfflineMode){
            closeComPricing();
            validateAndEnableHiCapFlexCheckBox();
        }
    }
    
    function closeComPricing(){
        document.getElementById('loadingImg').style.display = "block";
        var cartId = "{!cartId}";
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.SiteConfigureController.checkLiemsPriceStatus}',
            cartId,
            handleResult
        ); 
    }
    
    function handleResult(result, event){
        if( event.status ){
            if( result === 'Inprogress'){
                closeComPricing();
            }else{
                location.reload();  
            }
        }
    }
    
    function refreshPrices() {
        location.reload(); 
    }
    
    function getSelRadVal(theoptGrpVal,theIdVal,oSelectedRadio){
        // Firstly, uncheck all the radio buttons
        $(".IPType input[type='radio']").each(function(){
            this.checked = false
        });
    }
    
    function parseAndCheckPortTypeRelatedValidation(cntr){
        
        var currIndexId = 'container'+parseInt(cntr);
        var currElementTr = document.getElementById(currIndexId);
        if( typeof currElementTr != 'undefined' ){
            var innerTds = currElementTr.getElementsByTagName("td");
            var selectElem = innerTds[1].getElementsByTagName("select");
            if( typeof selectElem != 'undefined' ){
                if( selectElem[0].value == 'Switched Ethernet' ){
                    return true;
                } else {
                    return false;
                }
            }
        }
    }
    
    var isAppended = false;
    var inpPortType;
    var interfaceTypeIndex;
    var VLANLogicChannelIndex; 
    function validateFormAndEnableApply(inpObj,token){
        if(token == 'off'){
            $("[id$=btnId]").prop('disabled',true);
            $("[id$=acceptBtn]").prop('disabled',true);
            $('[id$=IglooPortSpeed]').val('false');
            $('[id$=IglooAccessSpeed]').val('false');
            $('[id$=IglooInterfaceTypeFlag]').val('false');
        }           
        
        setTimeout(function(){ 
            var isIntefaceTypeReqd;
            var ipFlexFieldIndex = '0';
            var ipFlexField = getFieldReference(ipFlexFieldIndex);
            isIntefaceTypeReqd = parseAndCheckPortTypeRelatedValidation( portTypeIndex );
            
            if( productName == 'AT&T Virtual Private Network' ){
                var hiCapFlexFieldIndex = parseInt('{!HicapIndexInt}');
                var hiCapFlexField = getFieldReference(hiCapFlexFieldIndex);
                var requredFieldIndices;
                VLANLogicChannelIndex = parseInt("2");
                if(hiCapFlexField.checked == true){
                    requredFieldIndices  = "{!fieldIndicesUBB}";
                    interfaceTypeIndex = parseInt("9");
                    PortedPhoneNumbers = "{!PortedPhoneNumbersIntUbb}";
                    NewLocalPhoneNumbers = "{!NewLocalPhoneNumbersIntUbb}";
                    NewVirtualPhoneNumbers = "{!NewVirtualPhoneNumbersIntUbb}";
                    var ConcurrentCalls = "{!ConcurrentCallsIntUbb}";
                    var EnhancedFeatures = "{!EnhancedFeaturesIntUbb}";
                    IPFlexibleReachPlan = "{!IPFlexibleReachPlanIntUbb}";
                }else{
                    requredFieldIndices = "{!fieldIndices}";
                    interfaceTypeIndex = parseInt("8");
                    PortedPhoneNumbers = "{!PortedPhoneNumbersInt}";
                    NewLocalPhoneNumbers = "{!NewLocalPhoneNumbersInt}";
                    NewVirtualPhoneNumbers = "{!NewVirtualPhoneNumbersInt}";
                    var ConcurrentCalls = "{!ConcurrentCallsInt}";
                    var EnhancedFeatures = "{!EnhancedFeaturesInt}";
                    IPFlexibleReachPlan = "{!IPFlexibleReachPlanInt}";
                }
            }
            if( productName == 'AT&T Managed Internet Service' ){
                var hiCapFlexFieldIndex = '3';
                var hiCapFlexField = getFieldReference(hiCapFlexFieldIndex);
                var requredFieldIndices;
                if(hiCapFlexField.checked == true){
                    requredFieldIndices  = "{!fieldIndicesUBB}";
                    interfaceTypeIndex = parseInt("9");
                    PortedPhoneNumbers = "{!PortedPhoneNumbersIntUbb}";
                    NewLocalPhoneNumbers = "{!NewLocalPhoneNumbersIntUbb}";
                    NewVirtualPhoneNumbers = "{!NewVirtualPhoneNumbersIntUbb}";
                    var ConcurrentCalls = "{!ConcurrentCallsIntUbb}";
                    var EnhancedFeatures = "{!EnhancedFeaturesIntUbb}";
                    IPFlexibleReachPlan = "{!IPFlexibleReachPlanIntUbb}";
                }else{
                    requredFieldIndices = "{!fieldIndices}";
                    interfaceTypeIndex = parseInt("8");
                    PortedPhoneNumbers = "{!PortedPhoneNumbersInt}";
                    NewLocalPhoneNumbers = "{!NewLocalPhoneNumbersInt}";
                    NewVirtualPhoneNumbers = "{!NewVirtualPhoneNumbersInt}";
                    var ConcurrentCalls = "{!ConcurrentCallsInt}";
                    var EnhancedFeatures = "{!EnhancedFeaturesInt}";
                    IPFlexibleReachPlan = "{!IPFlexibleReachPlanInt}";
                }
            }
            fieldIndexAr = requredFieldIndices.split(",");
            
            if(isIntefaceTypeReqd){
                fieldIndexAr.push(interfaceTypeIndex);
            }
            if(ipFlexField.checked == true){
                fieldIndexAr.push(IPFlexibleReachPlan);
                fieldIndexAr.push(PortedPhoneNumbers);
                fieldIndexAr.push(NewLocalPhoneNumbers);
                fieldIndexAr.push(NewVirtualPhoneNumbers);
                fieldIndexAr.push(ConcurrentCalls);
                fieldIndexAr.push(EnhancedFeatures);
            }
            
            var isAllFilled = true;
            for( var i = 0; i < fieldIndexAr.length; i++ ){
                cntr = parseInt(fieldIndexAr[i]);
                var currIndexId = 'container'+cntr;
                var currElementTr = document.getElementById(currIndexId);
                if( typeof currElementTr != 'undefined' && (typeof currElementTr != '' && typeof currElementTr != null)){
                    var innerTds = currElementTr.getElementsByTagName("td");
                    var selectElem = innerTds[1].getElementsByTagName("select");
                    var inputElem = innerTds[1].getElementsByTagName("input");
                    
                    if( typeof selectElem[0] != 'undefined' ){
                        if( selectElem[0].value != '--None--' && selectElem[0].value != ''){
                        }else{
                            isAllFilled = false;
                        }
                    }
                    if( typeof inputElem[0]  != 'undefined' ){
                        
                        if( inputElem[0].value != null && inputElem[0].value != ''){
                        }else{
                            isAllFilled = false;
                        }
                    }
                }else{
                    isAllFilled = false;
                }
            }
            
            var IglooPortSpeed = $('[id$=IglooPortSpeed]').val();
            var IglooAccessSpeed = $('[id$=IglooAccessSpeed]').val();
            var IglooInterfaceTypeFlag = $('[id$=IglooInterfaceTypeFlag]').val();
            var IglooReviewRequired = false;
            if(IglooPortSpeed == 'true' || IglooAccessSpeed == 'true' || IglooInterfaceTypeFlag == 'true'){
                IglooReviewRequired = true;
            }  
            if(inpObj == null){
                if(!(isAllFilled && !ipFlexErrMsg && !IglooReviewRequired)){
                    document.getElementById("{!$Component.configuresiteForm.applyBtn}").disabled = true;
                }
            }else{
                if(isAllFilled && !ipFlexErrMsg && !IglooReviewRequired){
                    document.getElementById("{!$Component.configuresiteForm.applyBtn}").disabled = false;
                    document.getElementById("{!$Component.configuresiteForm.applyBtn}").className = 'col-md-4 btn-primary pull-right';
                }else{
                    document.getElementById("{!$Component.configuresiteForm.applyBtn}").disabled = true;
                }
            }
            
            changeinterfaceonapplyandget();
            checkinterface();
            AVPNAutoCheck(false);
            MISAutoCheck(false);
        }, 50);
    }
   
    function checkinterface(){
        var valhtml=$(".changeinterface2").html();           
        if(valhtml!=null && valhtml!='undefined'){
            $(".id123drop").find("select").addClass("changeinterface3");
        }
        return;
    }
    
    function setTheBgColor(){
        document.getElementById("configaddedsitesNew").style.bgcolor='#f5f5f5';
    }
    
    function highlightTheRow(inpObj){
        inpObj.bgColor = "white";
    }
    
    function stopScrolling (e) {
        e.preventDefault();
        e.stopPropagation();
        return false;
    }
    
    function closeFun(){
        $("body").css('overflow-y','auto');
        $('.blockBackground').remove();
        $("#apltConfElisiteID").hide();
        if(isReviewBtn)
            validateFormAndEnableApply(null,'on');
        else
            validateFormAndEnableApply(null,'off');
        
        $('body').off('scroll mousewheel touchmove', stopScrolling);
        checkForEligibleSitesCount();
    }
    
    function managedRouterFunctionality(flag) {
        if( productName == 'AT&T Managed Internet Service' ){
            var checkArr=["Switched Ethernet","Tele Install","Onsite Install","--None--"];
            var isMngRouter = getFieldReference('1').checked || getFieldReference('0').checked;       
            var portSpeedTdId=portTypeIndex + 1;
            var selPSVal=parseInt($('#container'+portSpeedTdId+' option:selected').text(),10);
            var isSESelected=$('#container'+portTypeIndex+' option[value="'+checkArr[0]+'"]:selected').length;
            var instTypeTdId=$('.dropDownValue option[value="'+checkArr[1]+'"],option[value="'+checkArr[2]+'"]').closest('tr').attr('id');
            
            $('#'+instTypeTdId+' .dropDownValue').find('option').not(':first').hide();
            
            if(flag)
                $('#'+instTypeTdId+' .dropDownValue option:eq(0)').prop('selected', true);
            
            if(isMngRouter){
                if(isSESelected && selPSVal>100)
                    $('#'+instTypeTdId+' .dropDownValue option:eq(2)').show();
                else
                    $('#'+instTypeTdId+' .dropDownValue').find('option').show();
            }
            else
                $('#'+instTypeTdId+' .dropDownValue option:eq(1)').show();
        }
    }
    
        // Scripts for "AT&T Internet Access" flow only
        var sCheckedItem, sProductName = '{!custSiteQuoteIns.AT_T_Quote__r.Product__r.Name}';
        if("AT&T Internet Access" === sProductName){
            $("input:checkbox").on('click', function() {
                var $box = $(this);
                if ($box.is(":checked")) {
                    var group = "input[name*='checkdone1']";
                    $(group).prop("checked", false);
                    $box.prop("checked", true);
                    // Update the global variable with the checkbox value
                    sCheckedItem = $box.next().html();
                } else {
                    $box.prop("checked", false);
                }
            });
        }
    
        function selectCheckbox (){
            var counter =0;
            // Only run for "AT&T Internet Access" flow
            if("AT&T Internet Access" === sProductName){
                var group = "input[name*='checkdone1']";
                $(group).each(function(){
                    // Check if the next items value is equal to the selected one and check this
                    if($.trim($(this).next().html()) === sCheckedItem){
                        $(this).prop("checked",true);
                    }else if(counter == 0 && sCheckedItem == null){
                        $(this).prop("checked",true);
                    }else{
                        // Otherwise uncheck
                        $(this).prop("checked",false);
                    }
                    counter++;
                });
            }
        }                                                               
     </script>                                                    
    <apex:form id="configuresiteForm">        
        <div class="container p0">
            <apex:outputPanel id="headerContent">
                <h3 style="font-size: 32px !important; color:#666;">{!quoteObj.End_Customer__r.Name}</h3>
                <div class="row p0" style="margin:0px;padding-bottom:5px;">
                    <div class="col-xs-3 p0">
                        <label style="margin:10px 10px 0px 0px !important;font-weight:bold;"><apex:outputText value="Quote Name" /></label>
                        <apex:outputText value="{!proposalData.Apttus_Proposal__Proposal_Name__c}" />
                    </div>
                    <div class="col-xs-3 p0">
                        <label style="margin:10px 10px 0px 0px !important;font-weight: bold;"><apex:outputText value="Quote ID" /></label>
                        <apex:outputText value="{!proposalData.Name}" />
                    </div>
                    <div class="col-xs-4 p0">
                        <label style="margin:10px 10px 0px 0px !important;font-weight: bold;"><apex:outputText value="Product" /></label>
                        <apex:outputText value="{!proposalData.Product_New_Name__c}" />
                    </div>
                    <div class="col-xs-2 p0" style="text-align:right;">
                        <label style="margin:10px 10px 0px 0px !important;font-weight: bold;"><apex:outputText value="Term" /></label>
                        <apex:outputText value="{!proposalData.Apttus_Proposal__Payment_Term__c}" />
                    </div>
                </div>
                <hr class="blue_hr" />
            </apex:outputPanel>
            <apex:outputPanel rendered="{!!isOfflineMode}">
                <div class="col-xs-12 p0 m-t-10">
                    <apex:outputPanel id="leftSectionContent">
                        <div class="col-xs-6" id="leftPanelContainer" style="z-index:1;padding-left:0px;"> 
                            <div style="float:right;">                                      
                                <apex:commandButton id="addnewAddressBtn" value="{!$Label.Add_New_Address}" oncomplete="openAddAddressPop();" action="{!GotoAddAddressPage}" status="loading" styleClass="{!IF(configureSitesFlag,'disableBtn','')} btn-primary" style="margin-top: 25px;"/>
                            </div>
                            <div id="siteCountsDiv1" style="color: orange; font-weight: bold;float:left;line-height:12px;">{!noOfConfigedSites} of {!TotalSitesCount} {!$Label.Sites_Configured}</div>
                            <apex:selectList id="optgrp" styleClass="form-control styled-select-small" style="width: 184px;margin-top:24px;" value="{!selectedFilter}" size="1">
                                <apex:selectOptions value="{!FilterOptions}"/>
                                <apex:actionSupport event="onchange" action="{!handlefilterSites}" reRender="PageBlockSelectSite" status="loading" oncomplete="getSoftDeletedSites();setTheBgColor();makeTableActive();initVASARestriction();validateFormAndEnableApply(null,'on');validateAndEnableHiCapFlexCheckBox();scrollToWindowPos();"/>
                            </apex:selectList>
                            <br/>
                            <div class="pull-right">
                                <apex:commandLink id="RemoveLink" value="{!$Label.Remove_Label}" oncomplete="softDeleteSelectedSitesfirst('remove');" reRender="RemoveLink" status="loading" styleClass="RmvLink" /> 
                                <apex:actionFunction name="softDeletedSiteIDS" action="{!removeConfigureSite}" status="loading" rerender="reviewQuoteBtnSection" oncomplete="">
                                    <apex:param assignTo="{!junctToSoftDelete}" name="junctToSoftDelete" value="" />
                                </apex:actionFunction> 
                                <apex:actionFunction name="callRemoveFunction" action="{!removeConfigureSiteTest}" oncomplete="softDeleteSelectedSites();" rerender="addaddresspopup">
                                </apex:actionFunction> 
                            </div>
                            <!-- end of filter-->
                            <apex:outputPanel id="configureBtnSection" styleClass="configureBtnSection" rendered="{!configureSitesFlag}" >    
                                <div class="headerBlock">Select from eligible sites highlighted below to apply configuration.</div>
                                <div class="btnBlock">
                                    <apex:commandButton styleClass="configureBtn col-md-4 p0 fontForConfigureBtn" style="margin-left: 4px;" value="{!$Label.Apply_to_All_Eligible}" action="{!eligibleSitesApply}" rerender="configuresiteForm" oncomplete="toDoAfterApplyEligible({!isOfflineMode});" status="loading" >
                                        <apex:param assignTo="{!allEligibleSelected}" name="allEligibleSelected" value="true" />
                                    </apex:commandButton>
                                    <apex:commandButton styleClass="configureBtn col-md-5 p0 selectedEligibleSites disableBtn fontForConfigureBtn" style="margin: 0px 14px;" value="{!$Label.Apply_to_Selected_Eligible}" action="{!eligibleSitesApply}" rerender="configuresiteForm" oncomplete="toDoAfterApplyEligible({!isOfflineMode})" status="loading"/> 
                                    <apex:commandButton styleClass="configureBtn col-md-2 p0 fontForConfigureBtn" value="{!$Label.Cancel}" style="padding: 0 10px !important;" action="{!cancelConfigureSiteChanges}" rerender="configuresiteForm" status="loading" oncomplete="scrollToWindowPos();validateFormAndEnableApply(null,'on');validateAndEnableHiCapFlexCheckBox();getSoftDeletedSites();"/>                   
                                </div>
                            </apex:outputPanel>  
                                                                                                     
                            <div class="siteTrigger {!IF(configureSitesFlag,'resizeLeftPanel','leftPanelheight')}" id="configaddedsitesNew">
                                <apex:pageBlock id="PageBlockSelectSite"> 
                                    <apex:pageBlockTable value="{!listCustomerSiteMaster}" var="c" id="pbtable" styleClass="siteListPanel">
                                        <apex:column id="Column1" styleClass="rowLink  {!c.cellFilterSitesClass} siteListPanelSite {!IF(c.siteEnabled,'','highlightEligbleSites')}"  style="border-left: 0px;">                                                               
                                            <apex:facet name="header">
                                                <apex:inputCheckbox id="selectAll" disabled="{!selectAllCheckBox}" onclick="javascript:selectAll(this);" styleClass="selectAllClass" style="margin-top: 3px;"> 
                                                    <apex:outputText value="{!$Label.Select_All}"  style="font-weight: normal !important; color:#000000;"/>
                                                </apex:inputCheckbox>
                                            </apex:facet>
                                            <div class="checkbox-inline" id="{!c.custSiteIns.Id}">
                                                <apex:inputCheckbox value="{!c.selected}" id="chk2"  disabled="{!c.eligibleSFlag}"  rendered="{!c.showSites}"  styleClass="checkedSite " onclick="{!configureSitesFlag}?uncheckSiteOnEligibleFlag():uncheckSite(this)" />
                                                <div class="siteAddressInLeftPanel">
                                                    <div id="{!IF(c.OORSEExpired,'OORSEExpiredSite','')}{!IF(c.isOORSESite,'OORSEConfiguredSite','')}" class="{!IF((c.isIglooReviewReq == true && c.isSoftDel== false) || c.OORSEExpired,'siteNameConfiguredRev','siteNameConfigured')}" onclick="{!configureSitesFlag}?'':configureSite('{!c.custSiteIns.Id}')">
                                                        <apex:outputText value="{!c.custSiteIns.Site_Name__c}"  rendered="{!c.showSites}"/>
                                                    </div>
                                                    <apex:outputText value="{!c.custSiteIns.Address_Line__c},"  rendered="{!c.showSites}" /><br/>    
                                                    <apex:outputText value="{!c.custSiteIns.City__c}, {!c.custSiteIns.State__c}"  rendered="{!c.showSites}" />
                                                </div>                                                  
                                            </div>
                                                <apex:outputPanel rendered="{!c.showSites}">
                                                    <div class="undoRemoveLnk" id="undo_{!c.custSiteIns.Id}">
                                                        <a href="javascript:undoRemove('{!c.custSiteIns.Id}')">Undo Remove</a>
                                                    </div>                                        
                                                </apex:outputPanel>
                                            </apex:column>  
                                            <apex:column id="Column2" styleClass="rowLink  {!c.cellFilterSitesClass} siteListPanelSite {!IF(c.siteEnabled,'','highlightEligbleSites')}"  style="border: 0px;">
                                                <apex:facet name="header"></apex:facet> 
                                                <apex:outputPanel rendered="{!c.attCustomerSiteTotal != null && c.attCustomerSiteTotal>0 && c.showSites}">
                                                    <apex:image url="{!URLFOR($Resource.legendicons,'icon_circle_check.png')}" style="width: 25px; height: 25px;margin-top: 32px;margin-left:10px;" />
                                                </apex:outputPanel>                                             
                                            </apex:column>  
                                            <apex:column id="Column3" styleClass="rowLink  {!c.cellFilterSitesClass} siteListPanelSite {!IF(c.siteEnabled,'','highlightEligbleSites')}"  style="border: 0px;">
                                                <apex:facet name="header"></apex:facet>                                                 
                                                <apex:outputPanel rendered="{!c.attCustomerSiteTotal != null && c.attCustomerSiteTotal>0 && c.showSites && c.wirelinePromoApplied}">
                                                    <apex:image value="{!($Resource.Promotion_Tag)}" style="width: 25px; height: 25px;margin-top: 5px;margin-left:0px;" />
                                                </apex:outputPanel>
                                            </apex:column>                                        
                                    </apex:pageBlockTable>
                                </apex:pageBlock>
                                <apex:actionFunction id="toggleConfigureSite" name="toggleConfigureSite" action="{!togglesitesconfigpage}"  rerender="" oncomplete="" status="loading">
                                    <apex:param assignTo="{!selectedSiteId}" name="siteid" value="" />
                                </apex:actionFunction>  
                            </div>
                        </div>
                    </apex:outputPanel>
                    <apex:outputPanel id="rightSectionContent">
                        <div class="products-container col-xs-6 bglightgrey2 ng-scope pull-right p0" style="padding-left:15px !important; margin-top: 88px;">
                            <div>
                                <apex:outputPanel styleClass="fiberCodelabelsTextClass fiberCodeSpanCls" rendered="{!IF(fiberCode= 'E' ,true,false)}">{!$Label.FIBER_LIT_EMUX}
                                </apex:outputPanel>
                                <apex:outputPanel styleClass="fiberCodelabelsTextClass fiberCodeSpanCls" rendered="{!IF(fiberCode='F',true,false)}">{!$Label.FIBER_LIT_TEXT}
                                </apex:outputPanel>
                                <apex:outputPanel rendered="{!IF(fiberCode= 'F' ,true,false )}" styleClass="tooltipSpace">
                                  <span class="tooltipTrigger glyphicon glyphicon-info-sign" data-toggle="tooltip" rel="tooltip" data-placement="fiberCodeToolTipWithoutEMUX" title="{!$Label.fiberCodeWithoutEMUX}"></span>
                                </apex:outputPanel>
                                <apex:outputPanel rendered="{!IF(fiberCode= 'E' ,true,false )}" styleClass="tooltipSpace">
                                    <span class="tooltipTrigger glyphicon glyphicon-info-sign" data-toggle="tooltip" rel="tooltip" data-placement="fiberCodeToolTipWithEMUX" title="{!$Label.fiberCodeWithEMUX}"></span>
                                </apex:outputPanel>
                            </div>
                            <div class="pull-right text-right" style="margin-top: -30px;">
                                <h5 style="margin-bottom: 18px;"><a href="javascript:void(0);" onclick="handleClearUI()" class="{!IF(configureSitesFlag,'disableLink','')} clearForm" style="color: #4A6496;font-weight: bold;" >Clear Form</a></h5>
                                <h5><strong>Price</strong></h5>
                            </div>
                            <div style="margin-bottom: 20px;">
                                <h3 style="margin-top:11px;margin-bottom:40px;white-space:nowrap;">{!proposalData.Product_New_Name__c}</h3>
                            </div>
                           
                            <apex:outputPanel rendered="{!isAvpn}" >
                                <table style="margin-top: 30px;">
                                    <apex:variable var="cntr" value="{!0}"/>
                                    <input type="hidden" id="accessSpeedCurVal" value="{!listAttrVal.IGLOO_Old_Access_Speed__c}"/>
                                    <apex:repeat value="{!dataWrap}" var="itemAttr" >
                                        <tr id="container{!cntr}" style="padding-bottom:10px;  {!IF((cntr >9 && listAttrVal.Hi_Cap_Flex__c == false && listAttrVal.AT_T_IP_Flexible_Reach__c == false) || (cntr > 10 &&  listAttrVal.Hi_Cap_Flex__c == true && listAttrVal.AT_T_IP_Flexible_Reach__c == false), 'display:none;','')} {!IF(isIPFlexProdChecked==false && cntr==0 ,'display:none;','')}">
                                            <td>
                                            </td>
                                            <td>
                                                <apex:outputPanel rendered="{!IF(AND(cntr > 3, itemAttr.attr != 'Install_Option_AVPN__c'),true,false ) }">
                                                    <apex:outputPanel rendered="{!IF((listAttrVal.IGLOO_Port_Speed_Substituted__c == true || listAttrVal.IGLOO_Access_Speed_Substituted__c == true || listAttrVal.IGLOO_Interface_Type_Substituted__c == true)&& $ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Port Type',true,false)}">
                                                            <div class="iglooErrorMsg iglooGenericErrMsgCls">
                                                                {!$Label.IGLOO_REQ_MSG1 } 
                                                                {!$Label.IGLOO_REQ_MSG2 }  
                                                            </div>
                                                    </apex:outputPanel>
                                                        
                                                    <div class="rightPanelTitle {!IF(($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Minimum Bandwidth Commitment (MBC)'),'wrapLabel','')}">
                                                        <b class="labelsTextClass {!IF(($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Interface Type'),'id123','id234')}">{!$ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label}
                                                            <apex:outputPanel rendered="{!IF(listAttrVal.Hi_Cap_Flex__c == true  && cntr == 6,true,false ) }">
                                                                <i class="glyphicon glyphicon-info-sign">
                                                                    <span>Minimum Bandwidth Commitment is a monthly rate.Overall billing may apply at the rate for each MB used over the selected MBC</span>
                                                                </i>
                                                                <br />
                                                            </apex:outputPanel>
                                                            <apex:outputPanel rendered="{!IF((cntr == 10 && listAttrVal.AT_T_IP_Flexible_Reach__c == true && listAttrVal.Hi_Cap_Flex__c == false) || (cntr == 11 && listAttrVal.AT_T_IP_Flexible_Reach__c == true && listAttrVal.Hi_Cap_Flex__c == true),true,false)}">
                                                                <span class="toolTipIconPosition tooltipTrigger glyphicon glyphicon-info-sign CnfSiteTooltip" data-toggle="tooltip" rel="tooltip" data-placement="right" title="{!$Label.configureSiteIpFlex_Label1}"></span>
                                                                <br />
                                                            </apex:outputPanel>
                                                            <apex:outputPanel rendered="{!IF((cntr == 11 && listAttrVal.AT_T_IP_Flexible_Reach__c == true && listAttrVal.Hi_Cap_Flex__c == false) || (cntr == 12 && listAttrVal.AT_T_IP_Flexible_Reach__c == true && listAttrVal.Hi_Cap_Flex__c == true),true,false)}">
                                                                <span class="toolTipIconPosition tooltipTrigger glyphicon glyphicon-info-sign CnfSiteTooltip" data-toggle="tooltip" rel="tooltip" data-placement="right" title="{!$Label.configureSiteIpFlex_Label2}"></span>
                                                                <br />
                                                            </apex:outputPanel>
                                                            <apex:outputPanel rendered="{!IF((cntr == 12 && listAttrVal.AT_T_IP_Flexible_Reach__c == true && listAttrVal.Hi_Cap_Flex__c == false) || (cntr == 13 && listAttrVal.AT_T_IP_Flexible_Reach__c == true && listAttrVal.Hi_Cap_Flex__c == true),true,false)}">
                                                                <span class="toolTipIconPosition tooltipTrigger glyphicon glyphicon-info-sign CnfSiteTooltip" data-toggle="tooltip" rel="tooltip" data-placement="right" title="{!$Label.configureSiteIpFlex_Label3}"></span>
                                                                <br />
                                                            </apex:outputPanel>
                                                            <apex:outputPanel rendered="{!IF((cntr == 14 && listAttrVal.AT_T_IP_Flexible_Reach__c == true && listAttrVal.Hi_Cap_Flex__c == false) || (cntr == 15 && listAttrVal.AT_T_IP_Flexible_Reach__c == true && listAttrVal.Hi_Cap_Flex__c == true),true,false)}">
                                                                <span class="toolTipIconPosition tooltipTrigger glyphicon glyphicon-info-sign CnfSiteTooltip" data-toggle="tooltip" rel="tooltip" data-placement="right" title="{!$Label.configureSiteIpFlex_Label5}"></span>
                                                                <br />
                                                            </apex:outputPanel>
                                                            <apex:outputPanel rendered="{!IF((cntr == 15 && listAttrVal.AT_T_IP_Flexible_Reach__c == true && listAttrVal.Hi_Cap_Flex__c == false) || (cntr == 16 && listAttrVal.AT_T_IP_Flexible_Reach__c == true && listAttrVal.Hi_Cap_Flex__c == true),true,false)}">
                                                                <span class="toolTipIconPosition tooltipTrigger glyphicon glyphicon-info-sign CnfSiteTooltip" data-toggle="tooltip" rel="tooltip" data-placement="right" title="{!$Label.configureSiteIpFlex_Label6}"></span>
                                                                <br />
                                                            </apex:outputPanel>                                                            
                                                        </b> 
                                                    </div>
                                                </apex:outputPanel>
                                                
                                                <apex:outputPanel rendered="{!IF( itemAttr.attr == 'Install_Option_AVPN__c' ,true,false ) }">
                                                    <div style="margin-top:35px">
                                                        <b style="font-family:omnesatt_iiregular;font-size: 18px;font-weight: normal;">One-Time Charges</b> <br />
                                                        <b style="font-family:omnes_att_iimedium;font-size: 16px;font-weight: normal;margin-top:2px;color: #000000;">Installation Type</b> <br />
                                                    </div>
                                                </apex:outputPanel>
                                                
                                                <apex:outputPanel rendered="{!IF(cntr ==0,true,false)}">
                                                    <div style="{!IF(cntr > 3, 'width:300px;margin-top: 5px;height:40px', 'width:325px;margin-top: -2%;')} {!IF($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Set-up Fee','display: none','')}" class="{!IF(((cntr > 3 && cntr < 11 && listAttrVal.Hi_Cap_Flex__c == false) || (listAttrVal.Hi_Cap_Flex__c == false && cntr == 15) ) || ((listAttrVal.Hi_Cap_Flex__c == true && cntr > 3 && cntr < 12) || (listAttrVal.Hi_Cap_Flex__c == true && cntr == 16)) , 'styled-select-small adjust-select-large', '')} {!IF(($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Interface Type'),'id123drop','id234drop')} {!IF(($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Port Type'),'privatedrop','')}">
                                                        <apex:inputfield rendered="{!IF($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label!='Set-up Fee',true,false)}" id="ipFlexChkBox3" value="{!listAttrVal[itemAttr.attr]}" onchange="validateFormAndEnableApply(this,'off'); {!IF(($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Port Type'),'changeinterface(this);','')} {!IF(cntr == portTypeIndexInt, 'filterAndRenderPortSpeed(this, null);', '')} {!IF(cntr == portSpeedIndexInt, 'filterAndRenderAccessSpeed(this);', '')} {!IF(cntr == 3, 'enableShowHideUBBDDL(this);', '') } {!IF(cntr == 2, 'removeAndAddPrivateLineOnHicapFlexSelection();', '') } {!IF(cntr == 0, 'AVPNAutoCheck(true);ITPAOverlay(this);disableApplyConfigurationLink(false);', '') } {!IF(($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Select IP Flexible Reach Plan'),'toggleIpflexPhoneNumber(this);CheckAndDisableIpflexFields();','')}" onkeyup="{!IF($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='How many Concurrent Calls?' ,'toggleConcurrentErrMsg(this);','' )} {!IF($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='How many Ported Phone Numbers?' ,'togglePhoneErrMsg(this,portErrDiv);','' )}  {!IF($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='How many New Local Phone Numbers?' ,'togglePhoneErrMsg(this,localErrDiv);','' )}  {!IF($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='How many New Virtual Phone Numbers?' ,'togglePhoneErrMsg(this,virtualErrDiv);','' ) } " styleClass="dropDownValue {!IF(($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Select IP Flexible Reach Plan'),'ipFlexPlanClass','')} {!IF(($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='How many New Local Phone Numbers?')  , 'ipFlexPhoneNumberClass', '')} "  style="{!IF($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Select Enhanced Features' ,'font-size:14px;','' ) }"/>
                                                    </div>
                                                </apex:outputPanel>
                                                
                                                <apex:outputPanel rendered="{!IF(cntr !=0,true,false)}">
                                                    <div class="form-group {!IF(($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Port Speed' || $ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Access Speed' ||  $ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Minimum Bandwidth Commitment (MBC)' || $ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Select Enhanced Features' || $ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='How many New Virtual Phone Numbers?' || $ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Additional DNS' || $ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Select IP Flexible Reach Plan' || $ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Set-up Fee'),'lineItem','')}">
                                                        <div onclick="{!IF((($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Access Speed') || ($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Interface Type')),'populateNewInterfaceOptions();','')}" style="{!IF(cntr > 3, 'width:300px;margin-top: 5px;height:40px', 'width:325px;margin-top: -2%;')} {!IF($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Set-up Fee','display: none','')}" class="{!IF(((cntr > 3 && cntr < 11 && listAttrVal.Hi_Cap_Flex__c == false) || (listAttrVal.Hi_Cap_Flex__c == false && cntr == 15) ) || ((listAttrVal.Hi_Cap_Flex__c == true && cntr > 3 && cntr < 12) || (listAttrVal.Hi_Cap_Flex__c == true && cntr == 16)) , 'styled-select-small adjust-select-large', '')} {!IF(($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Interface Type'),'id123drop','id234drop')} {!IF(($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Port Type'),'privatedrop','')}
                                                        {!IF(($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Access Speed'),'accessSpeedDivCls','')}
                                                        {!IF(($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Port Speed'),'portSpeedDivCls','')}
                                                        {!IF(($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Port Type'),'portTypeDivCls','')}">
                                                            <apex:inputfield rendered="{!IF($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label!='Set-up Fee',true,false)}" id="ipFlexChkBox4" value="{!listAttrVal[itemAttr.attr]}" onchange="validateFormAndEnableApply(this,'off'); {!IF(($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Port Type'),'changeinterface(this);','')} {!IF(cntr == portTypeIndexInt, 'filterAndRenderPortSpeed(this, null);', '')} {!IF(cntr == portSpeedIndexInt, 'filterAndRenderAccessSpeed(this);', '')} {!IF(cntr == 3, 'enableShowHideUBBDDL(this);', '') } {!IF(cntr == 2, 'updateVLANFLag();filterPortType();', '') } {!IF(cntr == 0, 'AVPNAutoCheck(true);ITPAOverlay(this);disableApplyConfigurationLink(false);', '') } {!IF(($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Select IP Flexible Reach Plan'),'toggleIpflexPhoneNumber(this);CheckAndDisableIpflexFields();','')}" onkeyup="{!IF($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='How many Concurrent Calls?' ,'toggleConcurrentErrMsg(this);','' )} {!IF($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='How many Ported Phone Numbers?' ,'togglePhoneErrMsg(this,portErrDiv);','' )}  {!IF($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='How many New Local Phone Numbers?' ,'togglePhoneErrMsg(this,localErrDiv);','' )}  {!IF($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='How many New Virtual Phone Numbers?' ,'togglePhoneErrMsg(this,virtualErrDiv);','' ) } " styleClass="dropDownValue {!IF(($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Select IP Flexible Reach Plan'),'ipFlexPlanClass','')} {!IF(($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='How many New Local Phone Numbers?')  , 'ipFlexPhoneNumberClass validPhoneNumCls', '')} {!IF(($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='How many Ported Phone Numbers?')  , 'validPhoneNumCls', '')} {!IF(($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='How many New Virtual Phone Numbers?')  , 'validPhoneNumCls', '')} "  style="{!IF($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Select Enhanced Features' ,'font-size:14px;','' ) }"/>
                                                        </div>
                                                        <!-- Show current promotion and list price-->
                                                        <div class="availablePromoTag availablePromoTagTop" id="{!SUBSTITUTE(SUBSTITUTE(SUBSTITUTE($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label,' ','_'),'(',''),')','')}_PromoTag">
                                                            <span class="glyphicon dropDownPromoTag" data-placement="top" data-popover="true" data-toggle="tooltip" data-html="true" rel="promotionPopover" title="<h5> Current Promotions:</h5>"><img height="24" src="{!$Resource.Promotion_Tag}" width="24" /></span>
                                                            <div class="promotionAvailableData">
                                                                <table class="promoTable">
                                                                </table>
                                                            </div>
                                                        </div>
                                                        
                                                        <apex:outputText rendered="{!IF(($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Port Speed' || $ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Access Speed' || $ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Minimum Bandwidth Commitment (MBC)' || $ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Select Enhanced Features' || $ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='How many New Virtual Phone Numbers?' || $ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Additional DNS' || $ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Select IP Flexible Reach Plan' || $ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Set-up Fee' ) && (isPricingDataAvailable && itemAttr.isPricable && !listAttrVal.IP_Flex_Error__c && !listAttrVal.IGLOO_Speed_Unavailable__c && !listAttrVal.IGLOO_Call_Failure__c && itemAttr.lineItemObj.Original_Net_Price__c !=null && itemAttr.lineItemObj.Original_Net_Price__c>0),true,false)}">
                                                            <span class="listPrice {!IF($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Select Enhanced Features' || $ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='How many New Virtual Phone Numbers?' || $ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Select IP Flexible Reach Plan','ipflexListPrice','')}">
                                                                <span class="priceAligned" style="{!IF(cntr >2, '', '')} {!IF(((listAttrVal.IGLOO_Port_Speed_Substituted__c == true || listAttrVal.IGLOO_Access_Speed_Substituted__c == true || listAttrVal.IGLOO_Interface_Type_Substituted__c == true)&& listAttrVal.IGLOO_Speed_Unavailable__c == false),'padding-right: 10px;', '')}">
                                                                    <apex:outputText value="${0, number, ###,###,##0.00}">
                                                                        <apex:param value="{!itemAttr.lineItemObj.Original_Net_Price__c}" />
                                                                    </apex:outputText>
                                                                    <apex:outputText rendered="{!IF(cntr ==6 || (cntr ==17 && isHiCapFlex ==true) || (cntr ==16 && isHiCapFlex !=true) || (cntr ==9 && isHiCapFlex !=true) || (cntr ==10 && isHiCapFlex ==true) ,false,true)}">/mo</apex:outputText>
                                                                    <apex:outputText rendered="{!IF(cntr == 6,true,false)}">/mo*</apex:outputText>
                                                                </span>
                                                            </span>                                                         
                                                        </apex:outputText>
                                                    </div>
                                                </apex:outputPanel>
                                                
                                                <apex:outputPanel rendered="{!IF(listAttrVal.IGLOO_Port_Speed_Substituted__c == true &&  ($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Port Speed'),true,false)}">
                                                    <div class="iglooErrorMsg">
                                                        {!$Label.IGLOO_SUBST_MSG} {!listAttrVal.IGLOO_Old_Port_Speed__c}                                     
                                                    </div>
                                                </apex:outputPanel>
                                                <apex:outputPanel rendered="{!IF(listAttrVal.IGLOO_Access_Speed_Substituted__c == true && ($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Access Speed'),true,false)}">
                                                    <div class="iglooErrorMsg">
                                                        {!$Label.IGLOO_SUBST_MSG} {!listAttrVal.IGLOO_Old_Access_Speed__c}                                                           
                                                    </div>
                                                </apex:outputPanel>
                                                <apex:outputPanel rendered="{!IF(isIglooSpeedBump == true && listAttrVal.IGLOO_Speed_Unavailable__c == true && (listAttrVal.IGLOO_Access_Speed_Substituted__c == false && listAttrVal.IGLOO_Port_Speed_Substituted__c == false && listAttrVal.IGLOO_Interface_Type_Substituted__c == false) &&  ($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Access Speed'),true,false)}">
                                                    <div class="iglooErrorMsg iglooErrorMsgWrap">
                                                        {!listAttrVal.IGLOO_Old_Access_Speed__c} {!$Label.IGLOO_NO_RES}                                                           
                                                    </div>
                                                </apex:outputPanel>
                                                <apex:outputPanel rendered="{!IF(isIglooSpeedBump == false && listAttrVal.IGLOO_Speed_Unavailable__c == true && (listAttrVal.IGLOO_Access_Speed_Substituted__c == false && listAttrVal.IGLOO_Port_Speed_Substituted__c == false && listAttrVal.IGLOO_Interface_Type_Substituted__c == false) &&  ($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Access Speed'),true,false)}">
                                                    <div class="iglooErrorMsg iglooErrorMsgWrap">
                                                        {!listAttrVal.IGLOO_Old_Access_Speed__c} {!$Label.IGLOO_NO_RES_FALSE}                                                           
                                                    </div>
                                                </apex:outputPanel>
                                                <apex:outputPanel rendered="{!IF((inRegionSite==false && listAttrVal.IGLOO_Speed_Unavailable__c == true &&  ($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Access Speed')) ||(inRegionSite==true),true,false)}">
                                                    <script>
                                                        setTimeout(function(){ 
                                                            $('.portTypeDivCls select').on('change', function() {
                                                                removeUnEligiblileAccessSpeed();
                                                                $('.portSpeedDivCls select').on('change', function() {
                                                                    if('{!isAVPN}'=='true'){onPortSpeedChange();}
                                                                });
                                                            });
                                                            $('.portSpeedDivCls select').on('change', function() {
                                                                if('{!isAVPN}'=='true'){onPortSpeedChange();}
                                                            });
                                                                
                                                        }, 50);
                                                     </script>
                                                </apex:outputPanel>
                                                
                                                <script>
                                                    var sessionPromotions = [{!PromotionsForSite}]; //[{!$Cache.Session.Local.OrgLevel.promotionpersite}];
                                                    var selectedSiteId = '{!selectedSiteId}'; 
                                                    //console.log('hi cap flex is: ' + document.getElementById('hdnHiCapFlexFlag').value);
                                                    var hiCapFlexFlagAvpn = $('#hdnHiCapFlexFlag').val();
                                                    if(typeof hiCapFlexFlagAvpn == 'undefined'){
                                                            hiCapFlexFlagAvpn = "{!isHiCapFlex}";
                                                    }
                                                    if(sessionPromotions != [] && sessionPromotions != '' && sessionPromotions.length > 0 && selectedSiteId != ''){
                                                        var promotionTypesJSON = [];
                                                        for(var i=0; i < sessionPromotions.length; i++){
                                                            if(sessionPromotions[i].siteId == selectedSiteId ){
                                                                if(sessionPromotions[i].IPFLEX != undefined){
                                                                    $('#IPFLEX_PromoTag').show();
                                                                }
                                                                if(sessionPromotions[i].COS != undefined){
                                                                    $('#CoS_PromoTag').show();
                                                                }
                                                                if(sessionPromotions[i].VLAN != undefined){
                                                                    $('#VLAN_PromoTag').show();
                                                                }
                                                                if(sessionPromotions[i].UBB != undefined){
                                                                    $('#UBB_PromoTag').show();
                                                                }                                                               
                                                                if((typeof sessionPromotions[i]["MIS Basic"] != 'undefined' || typeof sessionPromotions[i]["MIS Plus"] != 'undefined') && ('undefined' != hiCapFlexFlagAvpn && hiCapFlexFlagAvpn == "false")){
                                                                    $('#Port_Speed_PromoTag').show();
                                                                }
                                                                if(sessionPromotions[i].ACCESS != undefined){
                                                                    $('#Access_Speed_PromoTag').show();
                                                                }
                                                                if(sessionPromotions[i]["MBC Basic"] != undefined || sessionPromotions[i]["MBC Plus"] != undefined ){
                                                                    $('#Minimum_Bandwidth_Commitment_MBC_PromoTag').show();
                                                                }
                                                                if(sessionPromotions[i]["One Time"] != undefined){
                                                                    $('#Installation_Option_PromoTag').show();
                                                                }
                                                                if(sessionPromotions[i].PLAN != undefined){
                                                                    $('#Select_IP_Flexible_Reach_Plan_PromoTag').show();
                                                                }
                                                                if(sessionPromotions[i]["Virtual Phone"]!= undefined){
                                                                    $('#How_many_New_Virtual_Phone_Numbers?_PromoTag').show();
                                                                }
                                                                if(sessionPromotions[i]["Enhanced Features"] != undefined){
                                                                    $('#Select_Enhanced_Features_PromoTag').show();
                                                                }
                                                            }
                                                        }
                                                    }
                                                </script>
                                                
                                                <apex:outputPanel rendered="{!IF(listAttrVal.IGLOO_Interface_Type_Substituted__c == true && ($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Interface Type'),true,false)}">
                                                    <div class="iglooErrorMsg">
                                                        {!$Label.IGLOO_INTF_MESSAGE}                                                           
                                                    </div>
                                                </apex:outputPanel>
                                                
                                                <apex:outputPanel rendered="{!IF(listAttrVal.UBB_Speed_AVPN__c != null && cntr ==6 &&  isPricingDataAvailable,true,false)}">                                                                                                     
                                                    <div id="bandwidthLine" class="bandwidthDiv"><apex:outputText > Bandwidth usage over the MBC is charged at a rate of ${!overgePerMb} per MB.</apex:outputText>  </div>          
                                                </apex:outputPanel>
                                                
                                                <apex:outputPanel rendered="{!IF($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='How many Concurrent Calls?',true,false)}">  
                                                    <div><span id="concurrentCallMsgDivAvpn" class="smallText">6-500</span></div>
                                                    <div id="concurrentCallErrDiv" class="smallText errorMsg" style="display:none;"><apex:outputText >Number of concurrent calls must be at least 6 and no more than 500.</apex:outputText>  </div>          
                                                </apex:outputPanel>
                                                 
                                                <apex:outputPanel rendered="{!IF($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='How many Ported Phone Numbers?',true,false)}">  
                                                    <div id="portErrDiv" class="smallText errorMsg" style="display:none;"><apex:outputText >{!$Label.configuresiteIpflex_InvalidNum}</apex:outputText>  </div>         
                                                </apex:outputPanel>
                                                
                                                <apex:outputPanel rendered="{!IF($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='How many New Local Phone Numbers?',true,false)}">   
                                                    <div id="localErrDiv" class="smallText errorMsg" style="display:none;"><apex:outputText >{!$Label.configuresiteIpflex_InvalidNum}</apex:outputText>  </div>         
                                                </apex:outputPanel> 
                                                
                                                <apex:outputPanel rendered="{!IF($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='How many New Virtual Phone Numbers?',true,false)}"> 
                                                    <div id="virtualErrDiv" class="smallText errorMsg" style="display:none;"><apex:outputText >{!$Label.configuresiteIpflex_InvalidNum}</apex:outputText>  </div>          
                                                </apex:outputPanel> 
                                                
                                                <apex:outputPanel rendered="{!IF($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Select Enhanced Features' ,true,false ) }">
                                                    <p class="onetime"> One-Time Charges </p> <br/>
                                                </apex:outputPanel>
                                                
                                                <apex:outputPanel styleClass="tooltipSpace"  rendered="{!IF(cntr == 0,true,false ) }">
                                                    <b style="font-family:omnesatt_iiregular;font-size: 16px;font-weight: normal;">{!$ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label}</b>
                                                    <span class="availablePromoTag" id="IPFLEX_PromoTag" >
                                                            <span class="glyphicon chkBoxPromoTag" data-placement="right" data-popover="true" data-toggle="tooltip" data-html="true" rel="promotionPopover" title=""><img height="24" src="{!$Resource.Promotion_Tag}" width="24" /></span>
                                                            <div class="promotionAvailableData">
                                                                <table class="promoTable">
                                                                    <div><b>Current Promotions:</b></div>
                                                                </table>
                                                            </div>
                                                    </span>
                                                </apex:outputPanel>
                                                
                                                <apex:outputPanel styleClass="tooltipSpace"  rendered="{!IF(cntr = 1 || cntr = 2 ,true,false ) }">
                                                    <b class="{!IF(cntr = 2,'vLanLabel','')}" style="font-family:omnesatt_iiregular;font-size: 16px;font-weight: normal;">{!$ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label}</b>
                                                </apex:outputPanel>
                                                
                                                <apex:outputPanel styleClass="tooltipSpace"  rendered="{!IF(cntr == 3 ,true,false ) }">
                                                    <span id="uBBLabelId" class="uBBLabel">{!$ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label}</span>
                                                </apex:outputPanel>
                                                
                                                <apex:outputPanel rendered="{!IF(cntr == 0,true,false ) }">
                                                    <div id="iflexAVPNItalicDiv" class="col-xs-12" style="margin-bottom: 20px;">
                                                        <span id="iFlexItalicId" class="uBBItalic" style="margin-left:14px;">E911 End Customer Acknowledgement required at time of order.&nbsp;</span>
                                                        <span class="glyphicon glyphicon-info-sign" data-popover="true" data-placement="right" data-html="true" data-content="<div id='iflexContent' style='width:120px;font-family:omnes_att_iimedium;font-size:12px;' >A copy of the <div><a href='{!($Resource.End_User_Customer_Acknowledgement)}' target='_blank' >End Customer Acknowledgment&nbsp;</a></div> is in Resources. At the time of order, the actual document will need to be signed electronically."></span>
                                                        <span class="availablePromoTag" id="IPFLEX_PromoTag" >
                                                            <span class="glyphicon chkBoxPromoTag" data-placement="right" data-popover="true" data-toggle="tooltip" data-html="true" rel="promotionPopover" title=""><img height="24" src="{!$Resource.Promotion_Tag}" width="24" /></span>
                                                            <div class="promotionAvailableData">
                                                                <table class="promoTable">
                                                                    <div><b>Current Promotions:</b></div>
                                                                </table>
                                                            </div>
                                                        </span>
                                                    </div>
                                                </apex:outputPanel>

                                                <apex:outputPanel rendered="{!IF(cntr == 1 ,true,false ) }">
                                                    <span class="tooltipTrigger glyphicon glyphicon-info-sign" data-popover="true" data-placement="right" data-html="true" data-content="{!$Label.CosInfo}"></span>
                                                    <span class="availablePromoTag" id="CoS_PromoTag" >
                                                        <span class="glyphicon chkBoxPromoTag" data-placement="right" data-popover="true" data-toggle="tooltip" data-html="true" rel="promotionPopover" title=""><img height="24" src="{!$Resource.Promotion_Tag}" width="24" /></span>
                                                        <div class="promotionAvailableData">
                                                            <table class="promoTable">
                                                                <div><b>Current Promotions:</b></div>
                                                            </table>
                                                        </div>
                                                    </span>
                                                    <div id="uBBItalicDiv" style="margin-bottom: 20px;">
                                                        <span id="cosItalicId" class="uBBItalic"> {!$Label.CoSInfo} </span>
                                                    </div>
                                                </apex:outputPanel>
                                                
                                                <apex:outputPanel rendered="{!IF(cntr == 2 ,true,false ) }">
                                                    <span class="tooltipTrigger glyphicon glyphicon-info-sign" data-popover="true" data-placement="right" data-html="true" data-content="{!$Label.VLAN_info}"></span>
                                                    <span class="availablePromoTag" id="VLAN_PromoTag" >
                                                        <span class="glyphicon chkBoxPromoTag" data-placement="right" data-popover="true" data-toggle="tooltip" data-html="true" rel="promotionPopover" title=""><img height="24" src="{!$Resource.Promotion_Tag}" width="24" /></span>
                                                        <div class="promotionAvailableData">
                                                            <table class="promoTable">
                                                                <div><b>Current Promotions:</b></div>
                                                            </table>
                                                        </div>
                                                    </span>
                                                    <apex:outputText rendered="{!IF((isPricingDataAvailable && itemAttr.isPricable && !listAttrVal.IP_Flex_Error__c && !listAttrVal.IGLOO_Speed_Unavailable__c && !listAttrVal.IGLOO_Call_Failure__c && itemAttr.lineItemObj.Original_Net_Price__c !=null && itemAttr.lineItemObj.Original_Net_Price__c>0),true,false)}">
                                                            <span class="{!IF(cntr==1 || cntr == 2,'listPriceCheckBox','listPrice')}">
                                                                <span class="priceAligned">
                                                                    <apex:outputText value="${0, number, ###,###,##0.00}">
                                                                        <apex:param value="{!itemAttr.lineItemObj.Original_Net_Price__c}" />
                                                                    </apex:outputText>
                                                                    <apex:outputText rendered="{!IF(cntr ==6 || (cntr ==18 && isHiCapFlex ==true) || (cntr ==17 && isHiCapFlex !=true) || (cntr ==10 && isHiCapFlex !=true) || (cntr ==11 && isHiCapFlex ==true) ,false,true)}">/mo</apex:outputText>
                                                                    <apex:outputText rendered="{!IF(cntr == 6,true,false)}">/mo*</apex:outputText>
                                                                </span>
                                                            </span>
                                                        </apex:outputText>
                                                    <div id="uBBItalicDiv" style="margin-bottom: 20px;">
                                                        <span id="vLanItalicId" class="vLanItalic">Only available for Ethernet </span>
                                                    </div>
                                                </apex:outputPanel>
                                                <apex:inputHidden id="IglooPortSpeed" value="{!listAttrVal.IGLOO_Port_Speed_Substituted__c}"/>
                                                <apex:inputHidden id="IglooAccessSpeed" value="{!listAttrVal.IGLOO_Access_Speed_Substituted__c}"/>
                                                <apex:inputHidden id="IglooInterfaceTypeFlag" value="{!listAttrVal.IGLOO_Interface_Type_Substituted__c}"/>
                                                <apex:inputHidden id="IglooCallProcessingId" value="{!listAttrVal.IGLOO_Speed_Unavailable__c}"/>
                                                
                                                <apex:outputPanel rendered="{!IF(cntr == 3,true,false)}">
                                                    <span class="tooltipTrigger glyphicon glyphicon-info-sign" data-popover="true" data-placement="right" data-html="true" data-content="{!$Label.UBBinfo}"></span>
                                                    <span class="availablePromoTag" id="UBB_PromoTag" >
                                                        <span class="glyphicon chkBoxPromoTag" data-placement="right" data-popover="true" data-toggle="tooltip" data-html="true" rel="promotionPopover" title=""><img height="24" src="{!$Resource.Promotion_Tag}" width="24" /></span>
                                                        <div class="promotionAvailableData">
                                                            <table class="promoTable">
                                                                <div><b>Current Promotions:</b></div>
                                                            </table>
                                                        </div>
                                                    </span>                                                                                                                             
                                                    <div id="uBBItalicDiv" style="margin-bottom: 20px;">
                                                        <span id="uBBItalicId" class="uBBItalic">Only available for Ethernet </span>
                                                    </div>
                                                    <div id="errorMessageFlag" class="usageDiv">Hi-Cap Flex is not available for sites that are out of region.</div>
                                                    <script>if(typeof validateAndEnableHiCapFlexCheckBox == 'function'){validateAndEnableHiCapFlexCheckBox();}</script>                                                     
                                                    <div class="OORSEErrMsg usageDiv">Configuration pricing has expired for this site.</div>
                                                    <div class="OORSEErrMsg usageDiv">Click Apply and Get Price to get pricing.</div>
                                                    <div id="rightPanelTopBorder" class="{!IF(listAttrVal.IGLOO_Port_Speed_Substituted__c == true || listAttrVal.IGLOO_Access_Speed_Substituted__c == true || listAttrVal.IGLOO_Interface_Type_Substituted__c == true ,'iglooBorder','removeIglooBorder')}"> </div>                                                
                                                </apex:outputPanel>
                                                
                                                <apex:outputPanel rendered="{!IF((cntr == 9 && listAttrVal.AT_T_IP_Flexible_Reach__c == true && listAttrVal.Hi_Cap_Flex__c == false) || (cntr == 10 && listAttrVal.AT_T_IP_Flexible_Reach__c == true && listAttrVal.Hi_Cap_Flex__c == true),true,false)}">
                                                    <div class="thinDividerLine"></div>
                                                    <div class="sectionHeader" style="font-size: 21px;">AT&amp;T IP Flexible Reach Service</div>
                                                    <div class="section">
                                                        <div class="indvSectionHeader" style="margin-top: 30px;"><label>Site Phone Number</label></div>
                                                        <div>{!selectedSitePhone}</div>
                                                    </div>
                                                </apex:outputPanel>
                                                
                                                <apex:outputPanel rendered="{!IF((cntr == 10 && listAttrVal.AT_T_IP_Flexible_Reach__c == true && listAttrVal.Hi_Cap_Flex__c == false) || (cntr == 11 && listAttrVal.AT_T_IP_Flexible_Reach__c == true && listAttrVal.Hi_Cap_Flex__c == true),true,false)}">
                                                    <div class="section">
                                                        <div class="indvSectionHeader" style="margin-top: 20px;"><label>Ported, Local and Virtual Phone Numbers</label></div><br />
                                                        <span>If a specific field below is not applicable or not available, the field will be disabled.</span><br /><br />
                                                        <span>The combined total of ported, new local, and new virtual phone numbers cannot exceed 25,000.</span>
                                                        <apex:outputPanel rendered="{!listAttrVal.IP_Flex_Error__c}">
                                                            <div class="smallText errorMsg" style="width:300px;white-space:nowrap;">
                                                                {!$Label.configuresiteIpflexTotal_ErrMsg} <br/>
                                                            </div>
                                                        </apex:outputPanel>
                                                    </div> 
                                                </apex:outputPanel>
                                            </td>
                                            
                                            <apex:outputText rendered="{!isPricingDataAvailable && itemAttr.isPricable && !listAttrVal.IP_Flex_Error__c && !listAttrVal.IGLOO_Speed_Unavailable__c && !listAttrVal.IGLOO_Call_Failure__c}">    
                                                <td>
                                                    <div class="priceAligned" style="{!IF(cntr >1, 'padding-top: 25px;', '')} {!IF(cntr == 1 ,'margin-top:-25px !important;-webkit-margin-after:26px;','' ) }{!IF(cntr == 2 ,'margin-top:-50px !important;-webkit-margin-after:26px;','' ) } {!IF(((listAttrVal.IGLOO_Port_Speed_Substituted__c == true || listAttrVal.IGLOO_Access_Speed_Substituted__c == true || listAttrVal.IGLOO_Interface_Type_Substituted__c == true)&& listAttrVal.IGLOO_Speed_Unavailable__c == false),'padding-right: 3px;', '')}">
                                                        <div id="finalListPricing_{!cntr}" style="position: absolute;color:#000000;text-align: right;width: 140px;-moz-border-radius: 6px;padding-bottom: 4px;-moz-margin-top:3px;-moz-margin-left:10px;font-weight:bold; {!IF(cntr >3, 'height: 40px !important;padding-top:20px;', 'padding-top:0px;')} {!IF(cntr ==1 && itemAttr.attr != 'Install_Option_AVPN__c', 'margin-top:11px;', '')} {!if(itemAttr.attr == 'Install_Option_AVPN__c' && cntr >3,'margin-top:22px;','')} margin-left:-178px;{!IF($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Set-up Fee','margin-top: -36px;','')}{!IF(cntr == 1, 'margin-top:9px;', '')}{!IF(cntr == 2, 'margin-top:3px;', '')}">
                                                            <apex:outputText value="${0, number, ###,###,##0.00}">
                                                                <apex:param value="{!itemAttr.lineItemObj.Apttus_Config2__NetPrice__c}" />
                                                            </apex:outputText>
                                                            <apex:outputText rendered="{!IF(cntr ==6 || (cntr ==17 && isHiCapFlex ==true) || (cntr ==16 && isHiCapFlex !=true) || (cntr ==9 && isHiCapFlex !=true) || (cntr ==10 && isHiCapFlex ==true) ,false,true)}">/mo</apex:outputText>
                                                            <apex:outputText rendered="{!IF(cntr == 6,true,false)}">/mo*</apex:outputText>
                                                            <!-- Show tooltip for promotion applied-->
                                                            <apex:outputPanel rendered="{!IF(($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Port Speed' || $ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Access Speed' || $ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Class of Service' || $ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Minimum Bandwidth Commitment (MBC)' || $ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Select Enhanced Features' || $ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='How many New Virtual Phone Numbers?' || $ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Additional DNS' || $ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Select IP Flexible Reach Plan' || $ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Set-up Fee' || $ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='VLANs/ Logical Channels' ),true,false)}" >
                                                                <apex:variable var="promoExists" value="{!wirelinePromoMap[$ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label]}"/>
                                                                <apex:outputPanel rendered="{!IF(promoExists.size>0 && (itemAttr.lineItemObj.Original_Net_Price__c !=null && itemAttr.lineItemObj.Original_Net_Price__c>0),true,false)}">
                                                                    <script>
                                                                        if(parseInt("{!cntr}")>3){
                                                                            $("#finalListPricing_{!cntr}").css("padding-top", "10px");
                                                                        }
                                                                        $("#finalListPricing_{!cntr}").css("margin-left", "-140px");
                                                                    </script>
                                                                    <span class="glyphicon glyphicon-promotionApplied promotionPopover {!SUBSTITUTE(SUBSTITUTE(SUBSTITUTE($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label,' ','_'),'(',''),')','')}_PromoATag" data-placement="bottom" data-popover="true" data-html="true" data-toggle="tooltip" rel="promotionPopover" title="<h5> Promotion Applied</h5>"><img height="24" src="{!$Resource.Promotion_AppliedTag}" width="24" /></span>
                                                                    <div class="promotionAppliedData {!SUBSTITUTE(SUBSTITUTE(SUBSTITUTE($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label,' ','_'),'(',''),')','')}_PromoABlock">
                                                                        <table class="promoTable">
                                                                            <apex:repeat rendered="{!IF((wirelinePromoMap[$ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label] != null),true,false)}" value="{!wirelinePromoMap[$ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label]}" var="promoAttr" >  
                                                                                <tr>
                                                                                    <td><apex:outputText value="{!promoAttr.Promotion_Name__c}" /></td>
                                                                                    <td>Saved 
                                                                                        <apex:outputText style="padding-left:8px;" value="{0, number, 0.##}%" >
                                                                                            <apex:param value="{!promoAttr.Discount_Percentage__c}" />
                                                                                        </apex:outputText>
                                                                                    </td>
                                                                                    <td><apex:outputText value="{0, date, MM/dd/yy}" rendered="{!promoAttr.Display_Promotion_End_Date__c}">expires on
                                                                                            <apex:param value="{!promoAttr.End_Date__c}" />
                                                                                        </apex:outputText>
                                                                                    </td>
                                                                                </tr>
                                                                            </apex:repeat>
                                                                        </table>
                                                                    </div>
                                                                </apex:outputPanel>
                                                            </apex:outputPanel>
                                                        </div>
                                                    </div>
                                                </td>
                                            </apex:outputText>
                                        </tr>
                                        <apex:variable var="cntr" value="{!cntr+1}"/>
                                    </apex:repeat>
                                </table>
                            </apex:outputPanel>
                            
                            <apex:outputPanel rendered="{!isMIS}" >
                                <apex:inputHidden id="IglooPortSpeed" value="{!listAttrVal.IGLOO_Port_Speed_Substituted__c}"/>
                                <apex:inputHidden id="IglooAccessSpeed" value="{!listAttrVal.IGLOO_Access_Speed_Substituted__c}"/>
                                <apex:inputHidden id="IglooInterfaceTypeFlag" value="{!listAttrVal.IGLOO_Interface_Type_Substituted__c}"/>
                                <apex:inputHidden id="IglooCallProcessingId" value="{!listAttrVal.IGLOO_Speed_Unavailable__c}"/>
                                <input type="hidden" id="accessSpeedCurVal" value="{!listAttrVal.IGLOO_Old_Access_Speed__c}"/>
                                <table style="margin-top: 30px;">
                                    <apex:variable var="cntr" value="{!0}"/>
                                    <apex:repeat value="{!dataWrap}" var="itemAttr" >
                                        <tr id="container{!cntr}" style="padding-bottom:10px; {!IF((cntr >10 && listAttrVal.Hi_Cap_Flex__c == false && listAttrVal.AT_T_IP_Flexible_Reach__c == false) || (cntr > 11 &&  listAttrVal.Hi_Cap_Flex__c == true && listAttrVal.AT_T_IP_Flexible_Reach__c == false), 'display:none;','')}{!IF(isManagedrouterchecked ==false && cntr==1,'display:none;','')}{!IF(isIPFlexProdChecked==false && cntr==0,'display:none;','')}">
                                            <td>
                                            </td>
                                            <td class="{!IF(cntr<3,'featureFieldMozilla','')}">
                                            <script>
                                                if(navigator.userAgent.toLowerCase().indexOf('chrome') > -1 ){
                                                    $(".featureFieldMozilla").toggleClass("featureFieldMozilla");
                                                }
                                            </script>
                                                <apex:outputPanel rendered="{!IF( AND(cntr > 3, itemAttr.attr != 'Install_Option_MIS__c') ,true,false ) }">
                                                    <apex:outputPanel rendered="{!IF((listAttrVal.IGLOO_Port_Speed_Substituted__c == true || listAttrVal.IGLOO_Access_Speed_Substituted__c == true || listAttrVal.IGLOO_Interface_Type_Substituted__c == true)&& $ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Port Type',true,false)}">
                                                            <div class="iglooErrorMsg iglooGenericErrMsgCls">
                                                                {!$Label.IGLOO_REQ_MSG1 } 
                                                                {!$Label.IGLOO_REQ_MSG2 }  
                                                            </div>
                                                    </apex:outputPanel>
                                                    <div class="rightPanelTitle {!IF(($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Minimum Bandwidth Commitment (MBC)'),'wrapLabel','')}">
                                                        <b class="labelsTextClass {!IF(($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Interface Type'),'id123','id234')}">{!$ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label}
                                                            <apex:outputPanel rendered="{!IF(listAttrVal.Hi_Cap_Flex__c == true  && cntr == 6 ,true,false ) }">
                                                                <i class="glyphicon glyphicon-info-sign">
                                                                    <span>Minimum bandwidth commitment is a monthly rate.Overage billing may apply at the rate displayed for each MB used over the selected MBC.</span>
                                                                </i>
                                                                <br />
                                                            </apex:outputPanel>
                                                            <apex:outputPanel rendered="{!IF((cntr == 11 && listAttrVal.AT_T_IP_Flexible_Reach__c == true && listAttrVal.Hi_Cap_Flex__c == false) || (cntr == 12 && listAttrVal.AT_T_IP_Flexible_Reach__c == true && listAttrVal.Hi_Cap_Flex__c == true),true,false)}">
                                                                <span class="toolTipIconPosition tooltipTrigger glyphicon glyphicon-info-sign CnfSiteTooltip" data-toggle="tooltip" rel="tooltip" data-placement="right" title="{!$Label.configureSiteIpFlex_Label1}"></span>
                                                                <br />
                                                            </apex:outputPanel>
                                                            <apex:outputPanel rendered="{!IF((cntr == 12 && listAttrVal.AT_T_IP_Flexible_Reach__c == true && listAttrVal.Hi_Cap_Flex__c == false) || (cntr == 13 && listAttrVal.AT_T_IP_Flexible_Reach__c == true && listAttrVal.Hi_Cap_Flex__c == true),true,false)}">
                                                                <span class="toolTipIconPosition tooltipTrigger glyphicon glyphicon-info-sign CnfSiteTooltip" data-toggle="tooltip" rel="tooltip" data-placement="right" title="{!$Label.configureSiteIpFlex_Label2}"></span>
                                                                <br />
                                                            </apex:outputPanel>
                                                            <apex:outputPanel rendered="{!IF((cntr == 13 && listAttrVal.AT_T_IP_Flexible_Reach__c == true && listAttrVal.Hi_Cap_Flex__c == false) || (cntr == 14 && listAttrVal.AT_T_IP_Flexible_Reach__c == true && listAttrVal.Hi_Cap_Flex__c == true),true,false)}">
                                                                <span class="toolTipIconPosition tooltipTrigger glyphicon glyphicon-info-sign CnfSiteTooltip" data-toggle="tooltip" rel="tooltip" data-placement="right" title="{!$Label.configureSiteIpFlex_Label3}"></span>
                                                                <br />
                                                            </apex:outputPanel>
                                                            <apex:outputPanel rendered="{!IF((cntr == 15 && listAttrVal.AT_T_IP_Flexible_Reach__c == true && listAttrVal.Hi_Cap_Flex__c == false) || (cntr == 16 && listAttrVal.AT_T_IP_Flexible_Reach__c == true && listAttrVal.Hi_Cap_Flex__c == true),true,false)}">
                                                                <span class="toolTipIconPosition tooltipTrigger glyphicon glyphicon-info-sign CnfSiteTooltip" data-toggle="tooltip" rel="tooltip" data-placement="right" title="{!$Label.configureSiteIpFlex_Label5}"></span>
                                                                <br />
                                                            </apex:outputPanel>
                                                            <apex:outputPanel rendered="{!IF((cntr == 16 && listAttrVal.AT_T_IP_Flexible_Reach__c == true && listAttrVal.Hi_Cap_Flex__c == false) || (cntr == 17 && listAttrVal.AT_T_IP_Flexible_Reach__c == true && listAttrVal.Hi_Cap_Flex__c == true),true,false)}">
                                                                <span class="toolTipIconPosition tooltipTrigger glyphicon glyphicon-info-sign CnfSiteTooltip" data-toggle="tooltip" rel="tooltip" data-placement="right" title="{!$Label.configureSiteIpFlex_Label6}"></span>
                                                                <br />
                                                            </apex:outputPanel>
                                                        </b> 
                                                    </div>
                                                </apex:outputPanel>
                                                <apex:outputPanel rendered="{!IF( itemAttr.attr == 'Install_Option_MIS__c' ,true,false ) }">
                                                    <div style="margin-top:35px">
                                                        <b style="font-family:omnesatt_iiregular;font-size: 18px;font-weight: normal;">One-Time Charges</b> <br />
                                                        <b style="font-family:omnes_att_iimedium;font-size: 16px;font-weight: normal;margin-top:2px;color: #000000;">Installation Type</b> <br />
                                                    </div>
                                                </apex:outputPanel>
                                                
                                                <apex:outputPanel rendered="{!IF(cntr == 0 ,true,false ) }" >                                                                                               
                                                    <div style="{!IF(cntr > 3, 'width:300px;margin-top: 5px;height:40px', 'width:325px;margin-top:-2%')} {!IF($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Set-up Fee','display: none','')}" class="{!IF((cntr > 3 && cntr < 12 && listAttrVal.Hi_Cap_Flex__c == true && listAttrVal.AT_T_IP_Flexible_Reach__c == false) || (cntr > 3 && cntr < 11 && listAttrVal.Hi_Cap_Flex__c == false && listAttrVal.AT_T_IP_Flexible_Reach__c == false) || ((cntr > 3 && cntr < 12 && listAttrVal.Hi_Cap_Flex__c == false && listAttrVal.AT_T_IP_Flexible_Reach__c == true) || (cntr == 16 && listAttrVal.Hi_Cap_Flex__c == false && listAttrVal.AT_T_IP_Flexible_Reach__c == true) ) || ((cntr > 3 && cntr < 13 && listAttrVal.Hi_Cap_Flex__c == true && listAttrVal.AT_T_IP_Flexible_Reach__c == true) || (cntr == 17 && listAttrVal.Hi_Cap_Flex__c == true && listAttrVal.AT_T_IP_Flexible_Reach__c == true)) , 'styled-select-small adjust-select-large', '')} {!IF(($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Interface Type'),'id123drop','id234drop')} {!IF(($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Port Type'),'privatedrop','')}">
                                                        <apex:inputfield rendered="{!IF($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label!='Set-up Fee',true,false)}" id="ipFlexChkBox1" value="{!listAttrVal[itemAttr.attr]}" onchange="validateFormAndEnableApply(this,'off');{!IF(($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Port Type'),'changeinterface(this);','')} {!IF(cntr == portTypeIndexInt, 'filterAndRenderPortSpeed(this, null);', '')}  {!IF(cntr == portSpeedIndexInt, 'filterAndRenderAccessSpeed(this);', '')} {!IF(cntr == 3, 'enableShowHideUBBDDL(this);', '') } {!IF(cntr == 0, 'MISAutoCheck(true);ITPAOverlay(this);managedRouterFunctionality(false);removingComafromIPFlexPhoneNumbers();disableApplyConfigurationLink(false);', '')} {!IF(($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Select IP Flexible Reach Plan'),'toggleIpflexPhoneNumber(this);CheckAndDisableIpflexFields();','')}" onkeyup="{!IF($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='How many Concurrent Calls?' ,'toggleConcurrentErrMsg(this);','' )}  {!IF($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='How many Ported Phone Numbers?' ,'togglePhoneErrMsg(this,portErrDiv);','' )}  {!IF($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='How many New Local Phone Numbers?' ,'togglePhoneErrMsg(this,localErrDiv);','' )}  {!IF($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='How many New Virtual Phone Numbers?' ,'togglePhoneErrMsg(this,virtualErrDiv);','' ) }" styleClass="dropDownValue {!IF(($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Select IP Flexible Reach Plan'),'ipFlexPlanClass','')} {!IF(($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='How many New Local Phone Numbers?')  , 'ipFlexPhoneNumberClass', '')} " style="{!IF($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Select Enhanced Features' ,'font-size:14px;','' ) }"/>
                                                    </div>
                                                </apex:outputPanel>
                                                
                                                <apex:outputPanel rendered="{!IF(cntr != 0,true,false ) }">    
                                                <div class="form-group {!IF(($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Port Speed' || $ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Access Speed' ||  $ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Minimum Bandwidth Commitment (MBC)' || $ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Select Enhanced Features' || $ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='How many New Virtual Phone Numbers?' || $ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Additional DNS' || $ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Select IP Flexible Reach Plan' || $ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Set-up Fee' ),'lineItem','')}">                                                                        
                                                    <div onclick="{!IF((($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Access Speed') || ($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Interface Type')),'populateNewInterfaceOptions();','')}" style="{!IF(cntr > 3, 'width:300px;margin-top: 5px;height:40px', 'width:325px;margin-top:-2%')} {!IF($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Set-up Fee','display: none','')}" class="{!IF((cntr > 3 && cntr < 12 && listAttrVal.Hi_Cap_Flex__c == true && listAttrVal.AT_T_IP_Flexible_Reach__c == false) || (cntr > 3 && cntr < 11 && listAttrVal.Hi_Cap_Flex__c == false && listAttrVal.AT_T_IP_Flexible_Reach__c == false) || ((cntr > 3 && cntr < 12 && listAttrVal.Hi_Cap_Flex__c == false && listAttrVal.AT_T_IP_Flexible_Reach__c == true) || (cntr == 16 && listAttrVal.Hi_Cap_Flex__c == false && listAttrVal.AT_T_IP_Flexible_Reach__c == true) ) || ((cntr > 3 && cntr < 13 && listAttrVal.Hi_Cap_Flex__c == true && listAttrVal.AT_T_IP_Flexible_Reach__c == true) || (cntr == 17 && listAttrVal.Hi_Cap_Flex__c == true && listAttrVal.AT_T_IP_Flexible_Reach__c == true)) , 'styled-select-small adjust-select-large', '')} {!IF(($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Interface Type'),'id123drop','id234drop')} {!IF(($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Port Type'),'privatedrop','')}{!IF(($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Access Speed'),'accessSpeedDivCls','')}
                                                    {!IF(($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Port Speed'),'portSpeedDivCls','')}
                                                    {!IF(($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Port Type'),'portTypeDivCls','')}">                                                                                          
                                                        <apex:inputfield rendered="{!IF($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label!='Set-up Fee',true,false)}" id="ipFlexChkBox2" value="{!listAttrVal[itemAttr.attr]}" onchange="validateFormAndEnableApply(this,'off');{!IF(($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Port Type'),'changeinterface(this);','')} {!IF(cntr == portTypeIndexInt, 'filterAndRenderPortSpeed(this, null);', '')} {!IF(($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Port Speed')||($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Port Type')||($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Managed Router (MIS Plus)')||($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='AT&T IP Flexible Reach Service'),'managedRouterFunctionality(true),removingComafromIPFlexPhoneNumbers();','')} {!IF(cntr == portSpeedIndexInt, 'filterAndRenderAccessSpeed(this);', '')} {!IF(cntr == 3, 'enableShowHideUBBDDL(this);', '') } {!IF(cntr == 0, 'MISAutoCheck(true);ITPAOverlay(this);disableApplyConfigurationLink(false);', '')} {!IF(($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Select IP Flexible Reach Plan'),'toggleIpflexPhoneNumber(this);CheckAndDisableIpflexFields();','')}" onkeyup="{!IF($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='How many Concurrent Calls?' ,'toggleConcurrentErrMsg(this);','' )}  {!IF($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='How many Ported Phone Numbers?' ,'togglePhoneErrMsg(this,portErrDiv);','' )}  {!IF($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='How many New Local Phone Numbers?' ,'togglePhoneErrMsg(this,localErrDiv);','' )}  {!IF($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='How many New Virtual Phone Numbers?' ,'togglePhoneErrMsg(this,virtualErrDiv);','' ) }" styleClass="dropDownValue {!IF(($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Select IP Flexible Reach Plan'),'ipFlexPlanClass','')} {!IF(($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='How many New Local Phone Numbers?')  , 'ipFlexPhoneNumberClass validPhoneNumCls', '')} {!IF(($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='How many Ported Phone Numbers?')  , 'validPhoneNumCls', '')} {!IF(($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='How many New Virtual Phone Numbers?')  , 'validPhoneNumCls', '')} " style="{!IF($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Select Enhanced Features' ,'font-size:14px;','' ) }"/>
                                                        
                                                    </div>
                                                    <!-- Show current promotion and list price-->
                                                    <div class="availablePromoTag availablePromoTagTop" id="{!SUBSTITUTE(SUBSTITUTE(SUBSTITUTE($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label,' ','_'),'(',''),')','')}_PromoTag">
                                                        <span class="glyphicon dropDownPromoTag" data-placement="top" data-popover="true" data-toggle="tooltip" data-html="true" rel="promotionPopover" title="<h5> Current Promotions:</h5>"><img height="24" src="{!$Resource.Promotion_Tag}" width="24" /></span>
                                                        <div class="promotionAvailableData">
                                                            <table class="promoTable">
                                                            </table>
                                                        </div>
                                                    </div>
                                                    
                                                    <apex:outputText rendered="{!IF(($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Port Speed' || $ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Access Speed' || $ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Class of Service' || $ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Minimum Bandwidth Commitment (MBC)' || $ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Select Enhanced Features' || $ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='How many New Virtual Phone Numbers?' || $ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Additional DNS' || $ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Select IP Flexible Reach Plan' || $ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Set-up Fee' || $ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='VLANs/ Logical Channels' ) && (isPricingDataAvailable && itemAttr.isPricable && !listAttrVal.IP_Flex_Error__c && !listAttrVal.IGLOO_Speed_Unavailable__c && !listAttrVal.IGLOO_Call_Failure__c && itemAttr.lineItemObj.Original_Net_Price__c !=null && itemAttr.lineItemObj.Original_Net_Price__c>0),true,false)}">
                                                        <span class="listPrice {!IF($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Select Enhanced Features' || $ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='How many New Virtual Phone Numbers?' || $ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Select IP Flexible Reach Plan','ipflexListPrice','')}">
                                                            <span class="priceAligned" style="{!IF(cntr >2, '', '')} {!IF(cntr == 2 ,'margin-top:-25px !important;-webkit-margin-after:26px;','' ) }{!IF(((listAttrVal.IGLOO_Port_Speed_Substituted__c == true || listAttrVal.IGLOO_Access_Speed_Substituted__c == true || listAttrVal.IGLOO_Interface_Type_Substituted__c == true)&& listAttrVal.IGLOO_Speed_Unavailable__c == false),'padding-right: 10px;', '')}">
                                                                <apex:outputText value="${0, number, ###,###,##0.00}">
                                                                    <apex:param value="{!itemAttr.lineItemObj.Original_Net_Price__c}" />
                                                                </apex:outputText>
                                                                <apex:outputText rendered="{!IF(cntr ==6 || (cntr ==18 && isHiCapFlex ==true) || (cntr ==17 && isHiCapFlex !=true) || (cntr ==10 && isHiCapFlex !=true) || (cntr ==11 && isHiCapFlex ==true) ,false,true)}">/mo</apex:outputText>
                                                                <apex:outputText rendered="{!IF(cntr == 6,true,false)}">/mo*</apex:outputText>
                                                            </span>
                                                        </span>                                                     
                                                    </apex:outputText>
                                                </div>
                                                </apex:outputPanel>
                                                <apex:outputPanel rendered="{!IF(listAttrVal.IGLOO_Port_Speed_Substituted__c == true &&  ($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Port Speed'),true,false)}">
                                                    <div class="iglooErrorMsg">
                                                                {!$Label.IGLOO_SUBST_MSG} {!listAttrVal.IGLOO_Old_Port_Speed__c}                                     
                                                    </div>
                                                </apex:outputPanel>
                                                <apex:outputPanel rendered="{!IF(listAttrVal.IGLOO_Access_Speed_Substituted__c == true && ($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Access Speed'),true,false)}">
                                                    <div class="iglooErrorMsg">
                                                                {!$Label.IGLOO_SUBST_MSG} {!listAttrVal.IGLOO_Old_Access_Speed__c}                                                           
                                                    </div>
                                                </apex:outputPanel>
                                                <apex:outputPanel rendered="{!IF(isIglooSpeedBump == true && listAttrVal.IGLOO_Speed_Unavailable__c == true && (listAttrVal.IGLOO_Access_Speed_Substituted__c == false && listAttrVal.IGLOO_Port_Speed_Substituted__c == false && listAttrVal.IGLOO_Interface_Type_Substituted__c == false) &&  ($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Access Speed'),true,false)}">
                                                    <div class="iglooErrorMsg iglooErrorMsgWrap">
                                                               {!listAttrVal.IGLOO_Old_Access_Speed__c} {!$Label.IGLOO_NO_RES}                                                           
                                                    </div>
                                                </apex:outputPanel>
                                                <apex:outputPanel rendered="{!IF(isIglooSpeedBump == false && listAttrVal.IGLOO_Speed_Unavailable__c == true && (listAttrVal.IGLOO_Access_Speed_Substituted__c == false && listAttrVal.IGLOO_Port_Speed_Substituted__c == false && listAttrVal.IGLOO_Interface_Type_Substituted__c == false) &&  ($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Access Speed'),true,false)}">
                                                    <div class="iglooErrorMsg iglooErrorMsgWrap">
                                                               {!listAttrVal.IGLOO_Old_Access_Speed__c} {!$Label.IGLOO_NO_RES_FALSE}                                                           
                                                    </div>
                                                </apex:outputPanel>
                                                <apex:outputPanel rendered="{!IF((inRegionSite==false && listAttrVal.IGLOO_Speed_Unavailable__c == true &&  ($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Access Speed')) ||(inRegionSite==true),true,false)}">
                                                    <script>
                                                        setTimeout(function(){ 
                                                            $('.portTypeDivCls select').on('change', function() {
                                                                removeUnEligiblileAccessSpeed();
                                                                $('.portSpeedDivCls select').on('change', function() {
                                                                    if('{!isMIS}'=='true'){onPortSpeedChange();}
                                                                });
                                                            });
                                                            $('.portSpeedDivCls select').on('change', function() {
                                                                if('{!isMIS}'=='true'){onPortSpeedChange();}
                                                            });
                                                        }, 50);
                                                    </script>
                                                </apex:outputPanel>
                                                <script>
                                                    var sessionPromotions = [{!PromotionsForSite}];//[{!$Cache.Session.Local.OrgLevel.promotionpersite}];
                                                    var selectedSiteId = '{!selectedSiteId}'; 
                                                    if(sessionPromotions != undefined && sessionPromotions != '' && sessionPromotions.length > 0 && selectedSiteId != ''){
                                                        var promotionTypesJSON = [];
                                                        var hiCapFlexFlag = $('#hdnHiCapFlexFlag').val();
                                                        if(typeof hiCapFlexFlag == 'undefined'){
                                                            hiCapFlexFlag = "{!isHiCapFlex}";
                                                        }
                                                        for(var i=0; i < sessionPromotions.length; i++){
                                                            if(sessionPromotions[i].siteId == selectedSiteId ){
                                                                if(sessionPromotions[i].IPFLEX != undefined){
                                                                    $('#IPFLEX_PromoTag').show();
                                                                }
                                                                if(sessionPromotions[i].COS != undefined){
                                                                    $('#CoS_PromoTag').show();
                                                                }
                                                                if(sessionPromotions[i].PLUS != undefined){
                                                                  //  $('#PLUS_PromoTag').show();
                                                                }
                                                                if(sessionPromotions[i].UBB != undefined){
                                                                    $('#UBB_PromoTag').show();
                                                                }                                                                
                                                                if((typeof sessionPromotions[i]["MIS Basic"] != 'undefined' || typeof sessionPromotions[i]["MIS Plus"] != 'undefined') && ('undefined' != hiCapFlexFlag && hiCapFlexFlag == "false")){
                                                                $('#Port_Speed_PromoTag').show();
                                                                }
                                                                if(sessionPromotions[i].ACCESS != undefined){
                                                                    $('#Access_Speed_PromoTag').show();
                                                                }
                                                                if(sessionPromotions[i]["MBC Basic"] != undefined || sessionPromotions[i]["MBC Plus"] != undefined ){
                                                                    $('#Minimum_Bandwidth_Commitment_MBC_PromoTag').show();
                                                                }
                                                                if(sessionPromotions[i].DNS != undefined){
                                                                    $('#Additional_DNS_PromoTag').show();
                                                                }
                                                                if(sessionPromotions[i]["One Time"] != undefined){
                                                                    $('#Installation_Option_PromoTag').show();
                                                                }
                                                                if(sessionPromotions[i].PLAN != undefined){
                                                                    $('#Select_IP_Flexible_Reach_Plan_PromoTag').show();
                                                                }
                                                                if(sessionPromotions[i]["Virtual Phone"]!= undefined){
                                                                    $('#How_many_New_Virtual_Phone_Numbers?_PromoTag').show();
                                                                }
                                                                if(sessionPromotions[i]["Enhanced Features"] != undefined){
                                                                    $('#Select_Enhanced_Features_PromoTag').show();
                                                                }
                                                            }
                                                        }
                                                    }
                                                </script>
                                                <apex:outputPanel rendered="{!IF(listAttrVal.IGLOO_Interface_Type_Substituted__c == true && ($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Interface Type'),true,false)}">
                                                    <div class="iglooErrorMsg">
                                                        {!$Label.IGLOO_INTF_MESSAGE}                                                           
                                                    </div>
                                                </apex:outputPanel>
                                                <apex:outputPanel rendered="{!IF(listAttrVal.UBB_Speed_MIS__c != null && cntr ==6 &&  isPricingDataAvailable,true,false)}">                                                                                                     
                                                    <div id="bandwidthLine" class="bandwidthDiv"><apex:outputText > Bandwidth usage over the MBC is charged at a rate of ${!overgePerMb} per MB.</apex:outputText>  </div>          
                                                </apex:outputPanel>  
                                                <apex:outputPanel rendered="{!IF($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='How many Concurrent Calls?',true,false)}">  
                                                    <div><span id="concurrentCallMsgDiv" class="smallText">6-500</span></div>
                                                    <div id="concurrentCallErrDiv" class="smallText errorMsg" style="display:none;"><apex:outputText >Number of concurrent calls must be at least 6 and no more than 500.</apex:outputText>  </div>          
                                                </apex:outputPanel> 
                                                <apex:outputPanel rendered="{!IF($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='How many Ported Phone Numbers?',true,false)}">  
                                                    <div id="portErrDiv" class="smallText errorMsg" style="display:none;"><apex:outputText >{!$Label.configuresiteIpflex_InvalidNum}</apex:outputText>  </div>         
                                                </apex:outputPanel>
                                                <apex:outputPanel rendered="{!IF($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='How many New Local Phone Numbers?',true,false)}">   
                                                    <div id="localErrDiv" class="smallText errorMsg" style="display:none;"><apex:outputText >{!$Label.configuresiteIpflex_InvalidNum}</apex:outputText>  </div>         
                                                </apex:outputPanel> 
                                                <apex:outputPanel rendered="{!IF($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='How many New Virtual Phone Numbers?',true,false)}"> 
                                                    <div id="virtualErrDiv" class="smallText errorMsg" style="display:none;"><apex:outputText >{!$Label.configuresiteIpflex_InvalidNum}</apex:outputText>  </div>          
                                                </apex:outputPanel> 
                                                <apex:outputPanel rendered="{!IF($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Select Enhanced Features' ,true,false ) }">
                                                    <p class="onetime"> One-Time Charges </p> <br/>
                                                </apex:outputPanel>
                                                <apex:outputPanel styleClass="tooltipSpace"  rendered="{!IF(cntr == 0,true,false ) }">
                                                    &nbsp;&nbsp;<b style="font-family:omnesatt_iiregular;font-size: 16px;font-weight: normal;margin-left:-1%">{!$ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label}</b>
                                                    <span class="availablePromoTag" id="IPFLEX_PromoTag">
                                                            <span class="glyphicon chkBoxPromoTag" data-placement="right" data-popover="true" data-toggle="tooltip" data-html="true" rel="promotionPopover" title=""><img height="24" src="{!$Resource.Promotion_Tag}" width="24" /></span>
                                                            <div class="promotionAvailableData">
                                                                <table class="promoTable">
                                                                    <div><b>Current Promotions:</b></div>
                                                                </table>
                                                            </div>
                                                     </span>
                                                </apex:outputPanel>
                                                <apex:outputPanel styleClass="tooltipSpace"  rendered="{!IF(cntr == 1 ,true,false ) }">
                                                    &nbsp;&nbsp;<b style="font-family:omnesatt_iiregular;font-size: 16px;font-weight: normal;margin-left:-1%">{!$ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label}</b>
                                                </apex:outputPanel>
                                                <apex:outputPanel styleClass="tooltipSpace"  rendered="{!IF(cntr == 2 ,true,false ) }">
                                                    &nbsp;&nbsp;<b style="font-family:omnesatt_iiregular;font-size: 16px;font-weight: normal;margin-left:-1%">{!$ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label}</b>
                                                </apex:outputPanel>
                                                <apex:outputPanel styleClass="tooltipSpace"  rendered="{!IF(cntr == 3 ,true,false ) }">
                                                    <span id="uBBLabelId" class="uBBLabel">{!$ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label}</span>
                                                </apex:outputPanel>
                                                <apex:outputPanel styleClass="tooltipSpace"  rendered="{!IF(cntr == 0,true,false ) }">
                                                    <div id="iflexMISItalicDiv">
                                                        <span id="iFlexItalicId" class="uBBItalic">E911 End Customer Acknowledgement required at time of order.&nbsp;</span>
                                                        <span class="glyphicon glyphicon-info-sign" data-popover="true"  data-placement="right" data-html="true" data-content="<div style='width:120px;font-family:omnes_att_iimedium;font-size:12px;' >A copy of the <div><a href='{!($Resource.End_User_Customer_Acknowledgement)}' target='_blank' >End Customer Acknowledgment&nbsp;</a></div> is in Resources. At the time of order, the actual document will need to be signed electronically."></span>
                                                        <span class="availablePromoTag" id="IPFLEX_PromoTag">
                                                            <span class="glyphicon chkBoxPromoTag" data-placement="right" data-popover="true" data-toggle="tooltip" data-html="true" rel="promotionPopover" title=""><img height="24" src="{!$Resource.Promotion_Tag}" width="24" /></span>
                                                            <div class="promotionAvailableData">
                                                                <table class="promoTable">
                                                                    <div><b>Current Promotions:</b></div>
                                                                </table>
                                                            </div>
                                                        </span>
                                                    </div>
                                                </apex:outputPanel>
                                                <apex:outputPanel styleClass="tooltipSpace"  rendered="{!IF(cntr == 1 ,true,false ) }">
                                                    <span class="tooltipTrigger glyphicon glyphicon-info-sign" data-popover="true" data-placement="right" data-html="true" data-content="{!$Label.CoSInfo}"></span>
                                                    <span class="availablePromoTag" id="PLUS_PromoTag">
                                                        <span class="glyphicon chkBoxPromoTag" data-placement="right" data-popover="true" data-toggle="tooltip" data-html="true" rel="promotionPopover" title=""><img height="24" src="{!$Resource.Promotion_Tag}" width="24" /></span>
                                                        <div class="promotionAvailableData">
                                                            <table class="promoTable">
                                                                <div><b>Current Promotions:</b></div>
                                                            </table>
                                                        </div>
                                                    </span>
                                                    <div id="uBBItalicDiv">
                                                        <span id="cosItalicId" class="uBBItalic"> {!$Label.CoSInfo} </span>
                                                    </div>
                                                </apex:outputPanel>
                                                <apex:outputPanel styleClass="tooltipSpace"  rendered="{!IF(cntr == 2 ,true,false ) }">
                                                    <span class="tooltipTrigger glyphicon glyphicon-info-sign" data-popover="true" data-placement="right" data-html="true" data-content="{!$Label.CoSInfo}"></span>
                                                    <span class="availablePromoTag" id="CoS_PromoTag">
                                                        <span class="glyphicon chkBoxPromoTag" data-placement="right" data-popover="true" data-toggle="tooltip" data-html="true" rel="promotionPopover" title=""><img height="24" src="{!$Resource.Promotion_Tag}" width="24" /></span>
                                                        <div class="promotionAvailableData">
                                                            <table class="promoTable">
                                                                <div><b>Current Promotions:</b></div>
                                                            </table>
                                                        </div>
                                                    </span>
                                                    <div id="uBBItalicDiv">
                                                        <span id="cosItalicId" class="uBBItalic"> {!$Label.CoSInfo} </span>
                                                    </div>
                                                </apex:outputPanel>
                                                <apex:outputPanel rendered="{!IF(cntr == 3,true,false)}">
                                                    <span class="tooltipTrigger glyphicon glyphicon-info-sign" data-popover="true" data-placement="right" data-html="true" data-content="{!$Label.UBBinfo}"></span>
                                                    <span class="availablePromoTag" id="UBB_PromoTag">
                                                        <span class="glyphicon chkBoxPromoTag" data-placement="right" data-popover="true" data-toggle="tooltip" data-html="true" rel="promotionPopover" title=""><img height="24" src="{!$Resource.Promotion_Tag}" width="24" /></span>
                                                        <div class="promotionAvailableData">
                                                            <table class="promoTable">
                                                                <div><b>Current Promotions:</b></div>
                                                            </table>
                                                        </div>
                                                    </span>
                                                    <br />
                                                    <div id="uBBItalicDiv">
                                                        <span id="uBBItalicId" class="uBBItalic"> Only available for Ethernet </span>
                                                    </div>
                                                    <div id="errorMessageFlag" class="usageDiv">Hi-Cap Flex is not available for sites that are out of region.</div>
                                                    <script>if(typeof validateAndEnableHiCapFlexCheckBox == 'function'){validateAndEnableHiCapFlexCheckBox();}</script>                                                    
                                                    <div class="OORSEErrMsg usageDiv">Configuration pricing has expired for this site.</div>
                                                    <div class="OORSEErrMsg usageDiv">Click Apply and Get Price to get pricing.</div>                                                
                                                    <div id="rightPanelTopBorder" class="{!IF(listAttrVal.IGLOO_Port_Speed_Substituted__c == true || listAttrVal.IGLOO_Access_Speed_Substituted__c == true || listAttrVal.IGLOO_Interface_Type_Substituted__c == true ,'iglooBorder ','removeIglooBorder')}"> </div>                                                 
                                                </apex:outputPanel>
                                                <apex:outputPanel rendered="{!IF((cntr == 10 && listAttrVal.AT_T_IP_Flexible_Reach__c == true && listAttrVal.Hi_Cap_Flex__c == false) || (cntr == 11 && listAttrVal.AT_T_IP_Flexible_Reach__c == true && listAttrVal.Hi_Cap_Flex__c == true) ,true,false)}">
                                                    <div class="thinDividerLine"></div>
                                                    <div class="sectionHeader" style="font-size: 21px;">AT&amp;T IP Flexible Reach Service</div>
                                                    <div class="section">
                                                        <div class="indvSectionHeader" style="margin-top: 30px;"><label>Site Phone Number</label></div>
                                                        <div>{!selectedSitePhone}</div>
                                                    </div>
                                                </apex:outputPanel>
                                                <apex:outputPanel rendered="{!IF((cntr == 11 && listAttrVal.AT_T_IP_Flexible_Reach__c == true && listAttrVal.Hi_Cap_Flex__c == false) || (cntr == 12 && listAttrVal.AT_T_IP_Flexible_Reach__c == true && listAttrVal.Hi_Cap_Flex__c == true),true,false)}">
                                                    <div class="section">
                                                        <div class="indvSectionHeader" style="margin-top: 20px;"><label>Ported, Local and Virtual Phone Numbers</label></div><br />
                                                        <span>If a specific field below is not applicable or not available, the field will be disabled.</span><br /><br />
                                                        <span>The combined total of ported, new local, and new virtual phone numbers cannot exceed 25,000.</span>
                                                        <apex:outputPanel rendered="{!listAttrVal.IP_Flex_Error__c}">
                                                            <div class="smallText errorMsg" style="width:300px;white-space:nowrap;">
                                                                {!$Label.configuresiteIpflexTotal_ErrMsg} <br/>
                                                            </div>
                                                        </apex:outputPanel>
                                                    </div> 
                                                </apex:outputPanel>
                                            </td>
                                            <apex:outputText rendered="{!isPricingDataAvailable && itemAttr.isPricable && !listAttrVal.IP_Flex_Error__c && !listAttrVal.IGLOO_Speed_Unavailable__c && !listAttrVal.IGLOO_Call_Failure__c}">
                                                <td>
                                                    <div class="priceAligned" style="{!IF(cntr >2, '', '')} {!IF(((listAttrVal.IGLOO_Port_Speed_Substituted__c == true || listAttrVal.IGLOO_Access_Speed_Substituted__c == true || listAttrVal.IGLOO_Interface_Type_Substituted__c == true)&& listAttrVal.IGLOO_Speed_Unavailable__c == false),'padding-right: 10px;', '')}">
                                                        <div id="finalListPricing_{!cntr}" style="position: absolute;color:#000000;text-align: right;width: 140px;height:40px;-moz-border-radius: 6px;padding-bottom: 10px;-moz-margin-top:3px;-moz-margin-left:10px;font-weight:bold;{!if(itemAttr.attr == 'Install_Option_MIS__c','margin-top:55px;','margin-top:33px;')}{!IF(cntr == 2,'margin-top:5px !important;','')};margin-left:-176px;padding-top:3px; {!IF($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Set-up Fee','margin-top: -4px;','')}">
                                                            <apex:outputText value="${0, number, ###,###,##0.00}">
                                                                <apex:param value="{!itemAttr.lineItemObj.Apttus_Config2__NetPrice__c}" />
                                                            </apex:outputText>
                                                            <apex:outputText rendered="{!IF(cntr ==6 || (cntr ==18 && isHiCapFlex ==true) || (cntr ==17 && isHiCapFlex !=true) || (cntr ==10 && isHiCapFlex !=true) || (cntr ==11 && isHiCapFlex ==true) ,false,true)}">/mo</apex:outputText>
                                                            <apex:outputText rendered="{!IF(cntr == 6,true,false)}">/mo*</apex:outputText>
                                                            <!-- Show tooltip for promotion applied-->                                          
                                                            <apex:outputPanel rendered="{!IF(($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Port Speed' || $ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Access Speed' || $ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Class of Service' || $ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Minimum Bandwidth Commitment (MBC)' || $ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Select Enhanced Features' || $ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='How many New Virtual Phone Numbers?' || $ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Additional DNS' || $ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Select IP Flexible Reach Plan' || $ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='Set-up Fee' || $ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label=='VLANs/ Logical Channels' ),true,false)}" >
                                                                <apex:variable var="promoExists" value="{!wirelinePromoMap[$ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label]}"/>
                                                                <apex:outputPanel rendered="{!IF(promoExists.size>0 && (itemAttr.lineItemObj.Original_Net_Price__c !=null && itemAttr.lineItemObj.Original_Net_Price__c>0),true,false)}">
                                                                    <script>
                                                                        $("#finalListPricing_{!cntr}").css("padding-top", "11px");
                                                                        $("#finalListPricing_{!cntr}").css("margin-top", "15px");
                                                                        $("#finalListPricing_{!cntr}").css("margin-left", "-140px");
                                                                    </script>
                                                                    <span class="glyphicon promotionPopover glyphicon-promotionApplied {!SUBSTITUTE(SUBSTITUTE(SUBSTITUTE($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label,' ','_'),'(',''),')','')}_PromoATag" data-placement="bottom" data-popover="true" data-html="true" data-toggle="tooltip" rel="promotionPopover" title="<h5> Promotion Applied</h5>"><img height="24" src="{!$Resource.Promotion_AppliedTag}" width="24" /></span>
                                                                    <div class="promotionAppliedData {!SUBSTITUTE(SUBSTITUTE(SUBSTITUTE($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label,' ','_'),'(',''),')','')}_PromoABlock">
                                                                        <table class="promoTable">
                                                                            <apex:repeat rendered="{!IF( (wirelinePromoMap[$ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label] != null),true,false)}" value="{!wirelinePromoMap[$ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label]}" var="promoAttr" >    
                                                                                <tr>
                                                                                    <td><apex:outputText value="{!promoAttr.Promotion_Name__c}" /></td>
                                                                                    <td>Saved 
                                                                                        <apex:outputText style="padding-left:8px;" value="{0, number,0.##}%" >
                                                                                            <apex:param value="{!promoAttr.Discount_Percentage__c}" />
                                                                                        </apex:outputText>
                                                                                    </td>
                                                                                    <td><apex:outputText value="{0, date, MM/dd/yy}" rendered="{!promoAttr.Display_Promotion_End_Date__c}">expires on
                                                                                            <apex:param value="{!promoAttr.End_Date__c}" />
                                                                                        </apex:outputText>
                                                                                    </td>
                                                                                </tr>                                                                           
                                                                            </apex:repeat>
                                                                        </table>
                                                                    </div>
                                                                </apex:outputPanel>
                                                            </apex:outputPanel>                                                         
                                                        </div>
                                                        <br/>
                                                    </div>
                                                </td>
                                            </apex:outputText>
                                        </tr>
                                        <apex:variable var="cntr" value="{!cntr+1}"/>
                                    </apex:repeat>
                                </table>
                            </apex:outputPanel>
                        </div>                
                    </apex:outputPanel>
                </div>
                <!-- Total Price Block-->
                <apex:commandButton rendered="{!IF((listAttrVal.IGLOO_Port_Speed_Substituted__c == true || listAttrVal.IGLOO_Access_Speed_Substituted__c == true || listAttrVal.IGLOO_Interface_Type_Substituted__c == true)&& iglooSpeedNotAvailable == false,true,false)}" id="acceptBtn" value="{!$Label.IGLOO_ACCEPT_BTN}" styleClass="col-md-2 btn-primary pull-right {!IF((listAttrVal.IGLOO_Port_Speed_Substituted__c == true || listAttrVal.IGLOO_Access_Speed_Substituted__c == true || listAttrVal.IGLOO_Interface_Type_Substituted__c == true) && listAttrVal.IGLOO_Speed_Unavailable__c == false,'acceptBtnReviewReqCls','acceptBtnNoResponseCls')}" rerender="configuresiteForm,btnId,PageBlockSelectSite"  action="{!executeIglooSpeedAcceptedLogic}" status="loading"  oncomplete="initVASARestriction();disableApplyConfigurationLink(false);scrollToWindowPos();invokeIpFlexMethods();removeContinueCSS();validateAndEnableHiCapFlexCheckBox();showPricingProcessIcon('{!selectedSiteId}','n');disableOnProcess('n');changeinterfaceonapplyandget();managedRouterFunctionality(false);"/> 
                <apex:outputPanel id="footerContent">
                    <div class="clear m-b-20 ng-scope"></div>
                    <div class="row col-xs-12 p0 ng-scope" style="margin-left:15px;">
                        <div class="col-xs-6 p0 summaryPricingBlock" style="float:right;{!IF((listAttrVal.IGLOO_Port_Speed_Substituted__c == true || listAttrVal.IGLOO_Access_Speed_Substituted__c == true || listAttrVal.IGLOO_Interface_Type_Substituted__c == true),'padding-right: 10px !important;margin-top:35px;', '')}">
                            <div class="col-xs-12" style="padding-left:0;">
                                <div id="rightPanelBotBorderId" class="{!IF(listAttrVal.IGLOO_Port_Speed_Substituted__c == true || listAttrVal.IGLOO_Access_Speed_Substituted__c == true || listAttrVal.IGLOO_Interface_Type_Substituted__c == true,'','rightPanelBotBorder')}" ></div>
                                <script>
                                    updateIglooBorderHeight();
                                </script>
                                <div class="row" style="margin: 15px 0;">
                                    <p style="font-family:omnesatt_iiregular; font-size:18px;">Site Pricing Summary </p>
                                </div>
                                <div class="row" style="margin: 10px 0;">
                                    <div class="col-xs-6 p0 text-left" style="font-family:omnes_att_iimedium; color:#000000;">
                                        Monthly Charges
                                    </div>
                                    <div class="col-xs-6 text-right p0">
                                        <apex:outputText styleClass="sitePricing" value="${0, number, ###,###,##0.00}/mo" id="siteTot">
                                            <apex:param value="{!totalPerSite}" />
                                        </apex:outputText>
                                    </div>
                                </div>
                                <div class="col-xs-6 p0 text-left" style="font-family:omnes_att_iimedium; color:#000000;">
                                    One-Time Charges
                                </div>
                                <div class="col-xs-6 text-right p0">
                                    <apex:outputText styleClass="sitePricing" value="${0, number, ###,###,##0.00}" id="otTot">
                                        <apex:param value="{!oneTimeFee}" />
                                    </apex:outputText>
                                </div>
                                <div class="col-xs-12 p0" id="submitDiv">   
                                    <p style="font-family:omnes_light !important; font-size:0.8em; margin-top: 1%;">All prices shown are pre-tax.</p>                                                    
                                </div>
                                <div class="orangeText OORSENote">Pricing expires in 90 days for out-of-region sites with switched ethernet.</div>
                                <apex:commandButton style="margin: 10px 0;" id="applyBtn" value="Apply and Get Price" styleClass="col-md-4 btn-primary pull-right createUserButtonDisable {!IF(configureSitesFlag && (listAttrVal.IGLOO_Port_Speed_Substituted__c == true && listAttrVal.IGLOO_Access_Speed_Substituted__c == true && listAttrVal.IGLOO_Interface_Type_Substituted__c == true && listAttrVal.IGLOO_Speed_Unavailable__c == true),'disableBtn','')}" rerender="thresholdPopUp" action="{!initializePricingData}" status="loading"  onclick="{!IF(inRegionSite==false,'showPopupOnIglooCall();','')}disableOnProcess('y');showPricingProcessIcon('{!selectedSiteId}','y');" oncomplete="filterSitesEligibleForIglooCallAction();"/> 
                                <div class="col-xs-12 m-b-20 m-t-20 p0 applyConfigLinkSection">
                                    <span class="tooltipTrigger glyphicon glyphicon-info-sign" data-popover="true" data-placement="top" data-html="true" data-content="{!$Label.ApplyConfigurationToolTip}"></span>
                                    <div class="col-xs-11 p0" style="float:right;">
                                        <apex:commandLink action="{!eligibleSitesPop}" value="Apply Configuration To Eligible Sites" rerender="configuresiteForm,eligibleSitesErrModal" styleClass="addaddressTrigger pull-right font14 {!IF(configureSitesFlag,'disableLink','enableSiteLink')}" onclick="disableApplyConfigurationLink(true);" oncomplete="scrollToWindowPos();errorMsgDisplay({!configureSitesFlag});prepareAndInitializePortType();validateAndEnableHiCapFlexCheckBox();managedRouterFunctionality(false);getSoftDeletedSites();disableOnProcess('n');" status="loading"></apex:commandLink>
                                    </div>
                                </div>
                                <div class="clear"></div>
                                <div  class="row" style="margin:0px 0px 20px;padding-bottom: 75px;">
                                    <div class="pull-right">
                                        <table>
                                            <tbody>
                                                <tr>
                                                    <td>
                                                        <apex:commandButton styleClass="btn paginationArrow {!IF(configureSitesFlag,'disableBtn','')}" id="prevSite1" value="<" action="{!siteTraverseMethodPrevious}" reRender="" oncomplete="" status="loading" />
                                                    </td>
                                                    <td style="vertical-align: middle;">
                                                        <apex:commandLink id="prevSite" styleClass="enableSiteLink {!IF(configureSitesFlag,'disableLink','')}" value=" Previous Site" action="{!siteTraverseMethodPrevious}" reRender="" oncomplete="" status="loading" style="border-right: 1px solid #ddd;" />
                                                    </td>&nbsp;&nbsp;
                                                    <td style="vertical-align: middle;">
                                                        <apex:commandLink id="nextSite" styleClass="enableSiteLink navLinkConfig {!IF(configureSitesFlag,'disableLink','')}" value="Next Site " action="{!siteTraverseMethodNext}" rendered="{!NOT(disableNext)}" reRender="" oncomplete="" status="loading" />
                                                    </td>
                                                    <td>
                                                        <apex:commandButton styleClass="btn paginationArrow {!IF(configureSitesFlag,'disableBtn','')}" id="nextSite1" value=">" action="{!siteTraverseMethodNext}" rendered="{!NOT(disableNext)}" reRender="" oncomplete="" status="loading" />
                                                    </td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                            <input type="hidden" id="hdnFieldIndices" value="{!fieldIndices}"/>
                            <input type="hidden" id="hdnPortTypeIndex" value="{!portTypeIndex}"/>
                            <input type="hidden" id="hdnHiCapIndex" value="{!HicapIndexInt}"/>
                            <input type="hidden" id="hdnHiCapFlexFlag" value="{!isHiCapFlex}"/>
                            <input type="hidden" id="isContinueEnabledHdn" value="{!isContinueEnabled}" />
                            <input type="hidden" id="isIPFLEXErrorHdn" value="{!listAttrVal.IP_Flex_Error__c}" />     
                            <apex:inputHidden id="configPageTimeout1" value="{!configPageTimeout1}"/>
                            <apex:inputHidden id="configPageTimeout2" value="{!configPageTimeout2}"/>
                            <apex:inputHidden id="iglooRetryCountFlag" value="{!listAttrVal.Quote_Total_Failure_Count__c}"/>
                            <apex:inputHidden id="iglooErrorFlag" value="{!listAttrVal.IGLOO_Call_Failure__c}"/>
                            <apex:inputHidden id="inRegionFlag" value="{!inRegionSite}"/>
                            <apex:inputHidden id="ReviewRequiredSites" value="{!noOfReviewRequiredSites}"/>
                            
                            <apex:actionFunction id="filterSitesEligibleForIglooCallAction" name="filterSitesEligibleForIglooCallAction" action="{!filterSitesEligibleForIglooCallerMethod}" rerender="configuresiteForm,PageBlockSelectSite,IglooCallProcessingId" oncomplete="clearIglooTimer();initVASARestriction();disableApplyConfigurationLink(false);scrollToWindowPos();invokeIpFlexMethods();removeContinueCSS();validateAndEnableHiCapFlexCheckBox();showPricingProcessIcon('{!selectedSiteId}','n');setTimeout(function(){ disableOnProcess('n'); }, 500);changeinterfaceonapplyandget();managedRouterFunctionality(false);showSecondErrorOnExceedingRetry();" status="loading">
                                <apex:param name="quoteId" value=""/>
                                <apex:param assignTo="{!selectedSiteId}" name="selectedSiteId" value="{!selectedSiteId}" />
                            </apex:actionFunction>
                            <apex:actionFunction id="pollingMethod" name="pollingMethod" action="{!pollingMethod}" reRender="" status="loading"/>
                            <apex:actionFunction id="executeIglooSpeedAcceptedLogicAction" name="executeIglooSpeedAcceptedLogicAction" action="{!executeIglooSpeedAcceptedLogic}" reRender="configuresiteForm,PageBlockSelectSite" status="loading" oncomplete="initVASARestriction();disableApplyConfigurationLink(false);scrollToWindowPos();invokeIpFlexMethods();removeContinueCSS();validateAndEnableHiCapFlexCheckBox();showPricingProcessIcon('{!selectedSiteId}','n');disableOnProcess('n');changeinterfaceonapplyandget();managedRouterFunctionality(false);">
                                <apex:param name="quoteId" value=""/>
                                <apex:param assignTo="{!selectedSiteId}" name="selectedSiteId" value="{!selectedSiteId}" />
                            </apex:actionFunction>
                            <apex:actionFunction id="af7" name="selectOptGrpAF" action="{!selectedOptGrpQuery}" reRender="configuresiteForm" status="loading" oncomplete="disableFirstOpt();selectCheckbox();">
                                <apex:param name="selectOptGrp" assignTo="{!selectOptGrp}" value=""/>
                                <apex:param name="selectOptGrpVal" assignTo="{!selectOptGrpVal}" value=""/>
                            </apex:actionFunction>
                            <apex:actionFunction id="af1" name="handleConfigureSitePage" action="{!setupCartWithSelectedSites}" reRender="configuresiteForm" status="loading" oncomplete="">
                                <apex:param name="quoteId" value=""/>
                            </apex:actionFunction>
                            <apex:actionFunction id="reConfigFuncId" name="handleReviewQuoteCallBack" action="{!setupCartWithSelectedSites}" reRender="configuresiteForm" status="loading" oncomplete="">
                                <apex:param name="quoteId" value=""/>
                            </apex:actionFunction>
                            <apex:actionFunction id="applyEligibleConfigUI" name="handleApplyEligibleConfigUI" action="{!handleApplyEligibleConfigUI}" reRender="configuresiteForm" status="loading" oncomplete="">
                                <apex:param name="quoteId" value=""/>
                                <apex:param name="cartId" value=""/>
                                <apex:param name="siteId" value=""/>
                            </apex:actionFunction>
                            <apex:actionFunction id="clearUI" name="handleClearUI" action="{!cleaFormUI}" reRender="configuresiteForm" status="loading" oncomplete="window.location.reload();">
                                <apex:param name="quoteId" value=""/>
                            </apex:actionFunction>
                            <apex:actionFunction id="fetchUpdatedPrice" name="doFetchUpdatedPrice" action="{!fetchUpdatedPriceOnLoad}" rerender="configuresiteForm" oncomplete="managedRouterFunctionality(false);scrollToWindowPos();removingComafromIPFlexPhoneNumbers();validateAndEnableHiCapFlexCheckBox();makeTableActive();validateFormAndEnableApply(null,'on');initVASARestriction();removeContinueCSS();AVPNAutoCheck(false);MISAutoCheck(false);ReadIPFlexibleReachPlan();CheckAndDisableIpflexFields();disableApplyConfigurationLink(false);" />
                            <apex:actionFunction id="checkAndEnableDisableUBBDDL" name="enableShowHideUBBDDLAjax" action="{!handleHiCapCheckUncheck}" status="loading" rerender="hdnHiCapFlexFlag" oncomplete="resetApttusFormHiCap();" >
                                <apex:param name="hicapFlex" value="" assignTo="{!isHiCapFlex}"/>
                            </apex:actionFunction>
                            <apex:actionFunction id="resetApttusFormHiCapAjax" name="resetApttusFormHiCapAjax" action="{!initializeData}" status="loading" rerender="configuresiteForm" oncomplete="managedRouterFunctionality(true);filterPortType();refreshJSVariables();setTheBgColor();makeTableActive();initVASARestriction();removeAndAddPrivateLineOnHicapFlexSelectionClone();validateFormAndEnableApply('UBB','on');setTimeout(function(){ checkUnCkeckHiCapFlex();}, 200);scrollSitesTableInsideListToPreviousView();" />
                            <apex:actionFunction name="checkForEligibleSitesCount" action="{!checkForEligibleSitesCount}" status="loading" reRender="reviewQuoteBtnSection" oncomplete=""/>
                            <apex:actionFunction name="closeApplyAllPopUp" rerender="" action="{!updateApplyAllFlag}"  />
                           </div>
                        <div class="row m0"><div id="panelFooter" class="col-xs-12"></div></div>  
                        <div style="margin-left: 115%;margin-left;margin-top: -82%;">
                            <a href="#" class="scrollToTop arrowImageDim"> <apex:image value="{!($Resource.TopArrow)}" styleClass="arrowImageDim"/></a>
                        </div>                                                 
                    </div>
                    <div id="footerHRDiv" class="col-xs-12 m-t-20 m-b-20 p0" style="{!IF((listAttrVal.IGLOO_Port_Speed_Substituted__c == true || listAttrVal.IGLOO_Access_Speed_Substituted__c == true || listAttrVal.IGLOO_Interface_Type_Substituted__c == true),'padding-right: 10px !important;', '')}"><hr class="blue_hr" /></div>
                    <apex:outputPanel id="reviewQuoteBtnSection">
                        <div class="col-xs-12 p0 reviewQuoteBtnSection" id='submitDiv1' style="{!IF((listAttrVal.IGLOO_Port_Speed_Substituted__c == true || listAttrVal.IGLOO_Access_Speed_Substituted__c == true || listAttrVal.IGLOO_Interface_Type_Substituted__c == true),'padding-right: 10px !important;', '')}">
                            <apex:commandButton styleClass="btn-primary pull-right nextToReview {!IF(configureSitesFlag,'disableBtn','')}" id="btnId" status="loading" action="{!finalizeCart}" value="Next: Review Quote"  disabled="{!!isContinueEnabled}"></apex:commandButton>
                            <apex:commandButton styleClass="pull-right btn-secondary" id="discardChangesBtn" value="Discard Changes" rendered="{!checkDiscard}" action="{!discardChanges}"></apex:commandButton>
                            <apex:commandButton styleClass="pull-right btn-secondary {!IF(configureSitesFlag,'disableBtn','')}" id="saveAndExitBtn" action="{!SaveandExit}" status="loading" value="Save and Exit" ></apex:commandButton>
                        </div> 
                    </apex:outputPanel>
                </apex:outputPanel>
                <script>
                    $('.siteListPanel tbody tr td:first-child').each(function() {
                        if($(this).hasClass( "selectedSiteHighlighted" )){
                            if($(this).find('#OORSEExpiredSite').length > 0){
                                $('.OORSEErrMsg ').css('display','block');
                                $('.OORSENote').css('display','none');
                                $("[id$=acceptBtn]").prop('disabled',true);
                            }else{
                                $('.OORSEErrMsg ').css('display','none');
                                if($(this).find('#OORSEConfiguredSite').length > 0){
                                    $('.OORSENote').css('display','block');
                                }
                            }
                        }
                    });        
                    removeAndAddPrivateLineOnLoad();
                </script>                 
            </apex:outputPanel>
            <apex:outputPanel rendered="{!isOfflineMode}">
                <apex:include pageName="offline_BulkProcessing"/>                
            </apex:outputPanel>
        </div>
    </apex:form>
   
   <!-- Modal for CAN'T REMOVE ALL SITES starts -->
    <div class="modal fade" id="requireOneSite" tabindex="-1" role="dialog" aria-hidden="true" 
         data-keyboard="false" data-backdrop="static">
        <div class="modal-dialog requireOneSite">
            <div class="modal-content requireOneSite">
               <div class="modal-body requireOneSite">
                 <div id="closeBtn">
                   <button type="button" class="close" data-dismiss="modal" aria-hidden="true"><span 
                            aria-hidden="true">&times;</span><span class="sr-only">Close</span> 
                   </button>
                 </div>
                    <p class="removeSelectedModal">The quote must have at least one site to proceed.</p>
                 <div id="okayBtn">
                    <button type="button" class="col-md-2 btn btn-primary okay pull-right" data-dismiss="modal" onclick="unselectSitesOnOkay();" styleClass="selectAllClass" >Okay</button>
                 </div>
                </div>  
            </div>
        </div>
    </div> 

    <!-- Modal for CAN'T REMOVE ALL SITES starts -->
    <div class="modal fade" id="iglooCallProcessModal" tabindex="-1" role="dialog" aria-hidden="true" 
         data-keyboard="false" data-backdrop="static">
        <div class="modal-dialog iglooCallErrorMsgModal">
            <div class="modal-content iglooCallErrorMsgModal">              
               <div class="modal-body iglooCallErrorMsgModal">                
                    <div class="waitingHolder">
                    <img class="waitingImage" src="{!$Resource.IglooProcessIcon}" title="Please Wait" />
                </div>
                <p class="">{!$Label.IGLOO_TIMER_1MSG}</p>                                    
                </div>  
            </div>
        </div>
    </div>
    
    <!-- Modal popup for igloo secong limit and error msg -->
    <div class="modal fade" id="iglooCallErrorMsg2Modal" tabindex="-1" role="dialog" aria-hidden="true" 
         data-keyboard="false" data-backdrop="static">
        <div class="modal-dialog iglooCallErrorMsgModal">
            <div class="modal-content iglooCallErrorMsgModal">
               <div class="modal-body iglooCallErrorMsgModal">                
                    <p class="iglooTimerMsg">{!$Label.IGLOO_TIMER_2MSG}</p>
                 <div id="okayBtn">
                    <button type="button" class="col-md-2 btn btn-primary okay pull-right" data-dismiss="modal" onclick="enableApplyOnIglooPopup();" styleClass="selectAllClass" >Okay</button>
                 </div>
                </div>   
            </div>
        </div>
    </div>
    
    <!-- Modal popup for igloo secong limit and error msg -->
    <div class="modal fade" id="iglooCallRetryMsgModal" tabindex="-1" role="dialog" aria-hidden="true" 
         data-keyboard="false" data-backdrop="static">
        <div class="modal-dialog iglooCallErrorMsgModal">
            <div class="modal-content iglooCallErrorMsgModal">
               <div class="modal-body iglooCallErrorMsgModal">                
                    <p class="">{!$Label.IGLOO_RETRYMSG}</p>
                 <div id="okayBtn">
                    <button type="button" class="col-md-2 btn btn-primary okay pull-right" data-dismiss="modal" onclick="enableApplyOnIglooPopup();" styleClass="selectAllClass" >Okay</button>
                 </div>
                </div>  
            </div>
        </div>
    </div>
     
    <div class="modal fade" id="applyAllPopUp" role="dialog" data-backdrop="static">
        <div class="modal-dialog">                      
            <div class="modal-content applyAllPopUp" style="margin-top: 25%;text-align:center;">
                <h3 class="modal-header">{!$Label.ApplyAll_ReviewReqMsgTitle}</h3>  
                <div class="modal-body" style="padding: 25px 25px !important;border-top:2px solid #d1d1d1;">
                    <div>{!$Label.ApplyAll_ReviewReqMsg1}</div>
                    <div>{!$Label.ApplyAll_ReviewReqMsg2}</div>
                </div>
                <div class="modal-footer" style="padding: 10px 25px 40px;">
                    <button type="button" class="btn" data-dismiss="modal" aria-hidden="true" style="width: 115px !important;padding: 8px 10px !important;" onClick="closePopup();closeApplyAllPopUp();">Okay</button>
                </div>
            </div>
        </div>
    </div>  
    <!-- Modal popup for Site remove -->
    <apex:form >
    <div class="modal fade removeSiteOnDiscardOverlay" tabindex="-1" role="dialog" aria-hidden="true" data-keyboard="false" data-backdrop="static" >
                        <div class="modal-dialog">
                            <div class="modal-content col-xs-12" style="top:200px;">
                                <apex:outputPanel id="addaddresspopup">
                                    
                                        <div class="modal-header">
                                            <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span>
                                            </button>
                                            <h4 class="modal-title" id="myModalLabelR2"></h4>
                                        </div>
                                        <div class="modal-body">
                                            <p>
                                                {!$Label.REMOVE_CONFIRM_REG_TEXT1}
                                            </p>
                                            <p>
                                                {!$Label.REMOVE_CONFIRM_REG_TEXT2}
                                            </p>
                                        </div>
                                        <div class="modal-footer text-center">
                                           <div class="pull-right p0 m0">
                                                <apex:commandLink styleclass="cancelLink" value="Cancel" rerender="addaddresspopup" html-data-dismiss="modal" oncomplete="uncheckSite('');"/>                                    
                                                <apex:commandButton styleclass="btn-primary goToSamePage" value="Continue" status="loading" action="{!removeConfigureSiteTest}" oncomplete="softDeleteSelectedSites();" rerender="addaddresspopup" html-data-dismiss="modal"/>
                                            </div>
                                        </div>
                                    
                                    </apex:outputPanel>
                            </div>
                        </div>
                        <!-- /.modal-dialog -->
                    </div>
                </apex:form>
    <script>
        var totalNumberOfSitesSoftDeleted = 0;
    
        function getSoftDeletedSites(){
           var quoteId = "{!quoteId}";
           Visualforce.remoting.Manager.invokeAction(
               '{!$RemoteAction.SiteConfigureController.fetchSoftDeletedSites}',
               quoteId,
               function(result, event){
                   if (result) {
                       totalNumberOfSitesSoftDeleted = result.length;
                       if(result.length > 0){
                           for(var id=0;id<result.length;id++){
                              var deletedRow = $('tbody').find("#undo_"+result[id]).closest('tr');
                              deletedRow.children().removeClass('active').addClass('deletedRow');
                              deletedRow.find(".checkedSite").prop("disabled", "true");
                              deletedRow.find(".siteAddressInLeftPanel").css("width", "190px"); 
                              deletedRow.find(".undoRemoveLnk").css("display", "block");
                              deletedRow.find(".undoRemoveLnk").css("pointer-events", "all");  
                          }
                       }
                    }
               }
           );        
        }
    
        function undoRemove(id) {
            var quoteId = "{!quoteId}";
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.SiteConfigureController.undoSoftDelete}',
                id,quoteId,
                function(){
                    totalNumberOfSitesSoftDeleted = totalNumberOfSitesSoftDeleted - 1;
                    var undoRow = $('tbody').find("#undo_"+id).closest('tr');
                    undoRow.find(".checkedSite").removeAttr("disabled"); 
                    undoRow.children().removeClass('deletedRow').addClass('active');  
                    undoRow.find(".undoRemoveLnk").css("display", "none");
                    undoRow.find(".siteAddressInLeftPanel").css("width", "100%");
                    checkForEligibleSitesCount();
                }
            );
        }
    
        function unselectSitesOnOkay() {
            $('.selectAllClass').prop('checked', false);
            $('.checkedSite:checked').prop('checked', false);
            $(".RmvLink").removeClass("enableLink");
        } 
    </script>

    <script>      
        function softDeleteSelectedSitesfirst(action){
            if(action != null && action == 'remove'){
                var checkremoveFlag = {!removePopupOnLoadFlag};
                if(checkremoveFlag){
                    $('.goToSamePage').show();
                    $('.removeSiteOnDiscardOverlay').modal();
                }else{
                    callRemoveFunction();
                }
            }
        }           
        function softDeleteSelectedSites() {
            var selectedSiteIDArray = [];
            var totalSites = 0;
            if(typeof {!TotalSitesCount} != 'undefined' && {!TotalSitesCount} != null){
                totalSites = {!TotalSitesCount};
            }
            if ($(".checkedSite:checked").length + totalNumberOfSitesSoftDeleted < totalSites) {               
                $(".checkedSite").each(function () {
                    var selectedID;
                    if ($(this).is(":checked")) {
                        selectedID = $(this).parent().attr('id');
                        totalNumberOfSitesSoftDeleted = totalNumberOfSitesSoftDeleted + 1;
                        selectedSiteIDArray.push(selectedID);
                        selectedSiteIDString = selectedSiteIDArray.join(',');
                    }
                });
                $(".checkedSite:checked").attr("disabled", "true");
                $(".checkedSite:checked").closest('tr').children().removeClass('active').addClass('deletedRow');
                $(".checkedSite:checked").closest('tr').find(".siteAddressInLeftPanel").css("width", "190px");
                $(".checkedSite:checked").closest('tr').find(".undoRemoveLnk").css("display", "block").css("pointer-events", "all");
                $(".checkedSite").prop("checked", false);
                $(".RmvLink").removeClass("enableLink");
                softDeletedSiteIDS(selectedSiteIDString);
            }else{
                $('#requireOneSite').modal('show');
            }
        }
    </script>
    
    <div class="waitingSearchDiv" style="background-color: #fbfbfb;  height: 100%;opacity:0.65;width:100%;position: fixed;z-index:999999; display:none; top:0; left:0; " id="loadingImg">
        <div class="waitingHolder" style="top: 40%; left: 50%; position: fixed;">
            <img class="waitingImage" src="{!$Resource.LoadingImage}" title="Please Wait" />
        </div>
    </div>
     <apex:outputPanel id="eligibleSitesErrModal">
        <script>
            var isReviewBtn;
            function errorMsgDisplay(configureSitesFlag){
                if(!configureSitesFlag){
                    isReviewBtn=!$('#btnId').attr('disabled');
                    window.scrollTo(0, 0);
                    $("body").append('<div class="blockBackground">');
                    $("body").css('overflow','hidden');
                    document.getElementById("apltConfElisiteID").style.display="block";
                    $('.configureBtnSection').css("display","none");
                    $('.modal-dialog').css("z-index","1031");
                    $('body').on('scroll mousewheel touchmove', stopScrolling);
                }           
            }
        </script> 
    <div class="modal-dialog" id="apltConfElisiteID" style="display:none; margin: 17%;position:absolute;top:0;">
        <div class="modal-content">
            <div class="modal-header">
                <button class="close" data-dismiss="modal" type="button" onclick="closeFun();"><span aria-hidden="true">X</span><span class="sr-only">Close</span></button>
                <h4 class="m-t-0">Apply Configuration to Eligible Sites</h4>  
            </div>
            <apex:form styleClass="form-horizontal" id="form1">
                <div class="modal-body">
                    <div class="row">
                        <div class="col-xs-12">
                            <apex:pageMessages escape="true" id="errmsgModal"></apex:pageMessages>  
                        </div>
                    </div>   
                </div> 
                <apex:actionFunction name="ITPAModal" action="{!ITPAInitiatePopUp}" reRender="jsFunctions,form-2,EditPhoneOverlay" status="loading"  oncomplete="$('#EditPhoneModal').modal('show');$('.modal-backdrop').not(':last-child').remove();" >
                    <apex:param name="siteIdSelected" assignTo="{!selectedSiteInfo.Id}" value=""/>
                </apex:actionFunction>  
            </apex:form>
        </div>
    </div>
     </apex:outputPanel>
    <!-- table ends --> 
    <div class="modal waitingSearchDiv" id="remotingScroll" style="display:none; background-color: #fbfbfb;  height: 40%;opacity:0.65;width:40%;position: absolute;z-index:1">
        <div class="waitingHolder" style="top: 40%; left: 50%; position: fixed;">
            <img class="waitingImage" src="{!$Resource.LoadingImage}" title="Please Wait" />
        </div>   
    </div>
    
    <script>
    var productName = '{!proposalData.product_name__c}';
    
    function enableShowHideUBBDDL(inputObj){
        sitePanelInsideScroll = $("#configaddedsitesNew").scrollTop();
        enableShowHideUBBDDLAjax(inputObj.checked);
    }
    
     
    
    function scrollSitesTableInsideListToPreviousView(){        
        $("#configaddedsitesNew").scrollTop(sitePanelInsideScroll);     
    } 
    
    function checkUnCkeckHiCapFlex(){
        var hiCap = document.getElementById("hdnHiCapFlexFlag").value;
        hiCapFlagforPromotion = hiCap;
        if( productName == 'AT&T Managed Internet Service' ||  productName == 'AT&T Virtual Private Network' ){
            var trElemId = 'container'+parseInt(hiCapFlexIndex);
            
            var currElementTr = document.getElementById(trElemId);
            if( typeof currElementTr != 'undefined' ){
                
                var innerTds = currElementTr.getElementsByTagName("td");
                var selectElem = innerTds[1].getElementsByTagName("input");
                if( typeof selectElem[0] != 'undefined' ){
                    if( hiCap == 'true' ){
                        selectElem[0].checked = true;
                    }else{
                        selectElem[0].checked = false;;
                    }
                    
                }
            }
        }
        document.getElementById('{!$Component.configuresiteForm.btnId}').disabled=true;
    }
    
    function resetApttusFormHiCap(){
        var hiCap = document.getElementById("hdnHiCapFlexFlag").value;
        setTimeout(function(){ 
            resetApttusFormHiCapAjax(Boolean(hiCap));
        }, 50);
    }
    
    function removePrivateLineIfVLANChecked(){
        if(getFieldReference(VLANLogicChannelIndex).checked){
            var trElemId = 'container'+parseInt(portTypeIndex); 
            var currElementTr = document.getElementById(trElemId);
            if( typeof currElementTr != 'undefined' ){
                var innerTds = currElementTr.getElementsByTagName("td");
                var selectElem = innerTds[1].getElementsByTagName("select");
                if( typeof selectElem[0] != 'undefined' ){
                    selectElem[0].remove(getIndexOfTheOption(selectElem[0], 'Private Line'));
                    selectElem[0].onchange();
                }
            }        
        }         
    }
    
    function removeAndAddPrivateLineOnHicapFlexSelection(){
        setTimeout(function(){
            var hiCap = document.getElementById("hdnHiCapFlexFlag").value;
            if( hiCap == 'true' ){
                var trElemId = 'container'+parseInt(portTypeIndex); 
                var currElementTr = document.getElementById(trElemId);
                if( typeof currElementTr != 'undefined' ){
                    var innerTds = currElementTr.getElementsByTagName("td");
                    var selectElem = innerTds[1].getElementsByTagName("select");
                    if( typeof selectElem[0] != 'undefined' ){
                        selectElem[0].remove(getIndexOfTheOption(selectElem[0], 'Private Line'));
                        selectElem[0].onchange();
                    }
                }   
            }
        }, 300);
    }
    
    function disableOnProcess(cmd){
        var prevElem = document.getElementById("{!$Component.configuresiteForm.prevSite}");
        var nextElem = document.getElementById("{!$Component.configuresiteForm.nextSite}");
        var prevSite1 = document.getElementById("{!$Component.configuresiteForm.prevSite1}");
        var nextSite1 = document.getElementById("{!$Component.configuresiteForm.nextSite1}"); 
        var saveExit = document.getElementById('{!$Component.configuresiteForm.saveAndExitBtn}');
        var applyBtn = document.getElementById('{!$Component.configuresiteForm.applyBtn}');
        var addnewAddressBtn = document.getElementById('{!$Component.configuresiteForm.addnewAddressBtn}');
        var reviewQuoteBtn = document.getElementById('{!$Component.configuresiteForm.btnId}');
        
        if( cmd == 'y' ){
            prevElem.className+=' disableLink';
            nextElem.className+=' disableLink';  
            prevSite1.disabled = true;
            nextSite1.disabled = true;     
            saveExit.disabled=true;
            applyBtn.disabled=true;
            addnewAddressBtn.disabled=true;
            reviewQuoteBtn.disabled=true;
            applyBtn.value='Processing...';
            $('.clearForm, .addaddressTrigger').addClass('disableClearForm');
            $('.dropDownValue').attr('disabled','disabled');            
            $.each("{!selectDropdown}".split(","),function(i,v){
                $('#container'+v+' select').attr('disabled','disabled');
            });
        }else{
            applyBtn.disabled=true;
        }
    }
    
    function disableCmdBtn(cmd){
        var arItemsToDisable = [];
        var pbTableElem = document.getElementById("{!$Component.configuresiteForm.PageBlockSelectSite.pbtable}");
        var prevElem = document.getElementById("{!$Component.configuresiteForm.prevSite}");
        var nextElem = document.getElementById("{!$Component.configuresiteForm.nextSite}");
        var arCmdBtn = pbTableElem.getElementsByTagName("input");
        for( var i = 0; i < arCmdBtn.length; i++ ){
            if( arCmdBtn[i].id.indexOf( "cmdBtn" ) != -1 ){
                arItemsToDisable.push( arCmdBtn[i] );
            }
        }
        for( var i = 0; i < arItemsToDisable.length; i++ ){
            if( cmd == 'y' ){
                arItemsToDisable[i].disabled = true;
                $('.navLinkConfig').addClass('disableClearForm');
                $('.btn').addClass('disableClearForm');
            }else{
                arItemsToDisable[i].disabled = false;
                $('.navLinkConfig').removeClass('disableClearForm');
                $('.btn').removeClass('disableClearForm');
            }
        } 
    }
    
    function initVASARestriction(){
        try{
            setTimeout(function(){ routeOrPauseTheParsingCall(); }, 50);
            setTimeout(function(){ 
                initPortSpeedOnPageLoad();
                initAccessSpeedOnPageLoad();
            }, 300);
        }catch(e){}
    }
    
    
    function disableThisApplyBtn(inpObj){
        inpObj.disabled = true;
        inpObj.value = 'Processing...';
        document.getElementById('{!$Component.configuresiteForm.saveAndExitBtn}').disabled = true;
        $('.clearForm').addClass('disableClearForm');
        $('.addaddressTrigger').addClass('disableClearForm');
        changeinterfaceonapplyandget();
        if(inpObj != null){$(inpObj).attr('disabled',true)};
    }
    
    function enableSaveAndExit(){
        document.getElementById('{!$Component.configuresiteForm.saveAndExitBtn}').disabled = false;
        $('.clearForm').removeClass('disableClearForm'); 
        $('.addaddressTrigger').removeClass('disableClearForm');
    }
    
    function selectAll(obj){
        if($(obj).is(":checked")){
            $('.checkedSite').not(':disabled').prop('checked', true);
            $(".RmvLink").addClass("enableLink");
            $(".selectedEligibleSites").removeClass('disableBtn'); 
        }else{
            $('.checkedSite').prop('checked', false);
            $(".RmvLink").removeClass("enableLink");
            $(".selectedEligibleSites").addClass('disableBtn');      
        }
    }
    
    var checkboxFlag = false;
    function uncheckSite(obj){
        checkboxFlag=true;
        if ($(".checkedSite").length == $(".checkedSite:checked").length) {
            $('.selectAllClass').prop('checked', true);
            $(".RmvLink").addClass("enableLink");            
        }
        else {
            $('.selectAllClass').prop('checked', false);
            if ($(".checkedSite:checked").length>0) {
                $(".RmvLink").addClass("enableLink");                 
            }
            else{
                $(".RmvLink").removeClass("enableLink");                 
            }
        } 
    }
    
    function uncheckSiteOnEligibleFlag(){
        checkboxFlag=true;
        if ($(".checkedSite").length == $(".checkedSite:checked").length) {
            $('.selectAllClass').prop('checked', true);
            $(".selectedEligibleSites").removeClass('disableBtn');            
        }else {
            $('.selectAllClass').prop('checked', false);
            if ($(".checkedSite:checked").length>0) {
                $(".selectedEligibleSites").removeClass('disableBtn');                  
            }
            else{
                $(".selectedEligibleSites").addClass('disableBtn');                  
            }
        }     
    }
    
    function configureSite(siteId){
        removingComafromIPFlexPhoneNumbers();
        if (!checkboxFlag) {
            toggleConfigureSite(siteId);
        }
        else{
            checkboxFlag = false;
        }
    }
    
    var removeSwitchedEthernet=false;
    var disableHicapOnMinimumSpeedAvail=false;
    var ipFlexErrMsg=false;    
    $(document).ready(function () { 
        var list = {!speedsNotAvailableITPAList};
        var inRegion = '{!inRegionSite}';

        if(typeof list != 'undefined' && list != null && list.length==9 && (typeof inRegion != 'undefined' && inRegion == 'true')){
            removeSwitchedEthernet=true;
        }
        else if(typeof list != 'undefined' && list != null && list.length>=7 && (typeof inRegion != 'undefined' && inRegion == 'true')){
            var difference = [];
            var list2 = ['5 Mbps','10 Mbps'];
            $.grep(list2, function(el) {
                    if ($.inArray(el, list) == -1) difference.push(el);
            });
            if(difference.length>0 && difference.length<=2){
                disableHicapOnMinimumSpeedAvail=true;
            }
        }
        disableApplyConfigurationLink(false);
        managedRouterFunctionality(false);
        removingComafromIPFlexPhoneNumbers();
        leftPanelOffSet=$("#leftPanelContainer").offset().top;
        $("body").tooltip({ selector: '[rel=tooltip]',placement: "top" });
        $("body").tooltip({ selector: '[rel=tooltip]',placement: "right" });
        
        
        $('.portTypeDivCls select').on('change', function() {
            removeUnEligiblileAccessSpeed();
            $('.portSpeedDivCls select').on('change', function() {
                onPortSpeedChange();
            });
        });
        var $sidePanel   = $("#{!$Component.configuresiteForm.PageBlockSelectSite}");
        
        
        $('#configaddedsitesNew tbody tr td').addClass('active');
        var leftPanelRowLength = $(".siteListPanel tbody").children('tr').length;
        
        setTimeout(function(){ validateFormAndEnableApply(null,'on'); }, 50);
        
        setTimeout(function(){ 
            routeOrPauseTheParsingCall(); 
        }, 50);
        setTimeout(function(){
            initPortSpeedOnPageLoad();
            initAccessSpeedOnPageLoad();
            
        }, 50);
        setTimeout(function(){ 
            doFetchUpdatedPriceJS();
        }, 50);
        validateAndEnableHiCapFlexCheckBox();
        removeAndAddPrivateLineOnHicapFlexSelectionClone();
        if (document.getElementById("RemoveLink")) {
            document.getElementById("RemoveLink").disabled=true;
        }
     
        fixedSiteTablePanel();
        disableFirstOpt();
        var sitePanelInsideScroll = 0;
        updateIglooBorderHeight();
        checkForReviewRequired();
        var showOORModal = false;
        $('.siteListPanel tbody tr td:first-child').each(function() {
            if($(this).hasClass( "selectedSiteHighlighted" )){
                if($(this).find('#OORSEExpiredSite').length > 0 ){
                    showOORModal = true;
                }
            }
        }); 
        
        if({!eligibleRateRefresh}){
            //$('#RatecardUpdateModal').modal('show');
            $('#DPERatecardUpdateModal').modal('show');
        }else{
            if(showOORModal){
                $('#OORSEExpiredModal').modal('show');
            }
        }        
        $('.scrollToTop').click(function(){
            $('html, body').animate({scrollTop : 0},500);
            return false;
        });
        $('.main_nav_link').on('click', function(){        
            setTimeout(function(){   
                leftPanelOffSet=$("#leftPanelContainer").offset().top;    
                if($('.active_top').length>0){      
                    footerOffSet = $('#panelFooter').offset().top+50;       
                }else{                                
                    footerOffSet = $('#panelFooter').offset().top;      
                }       
            },500);     
        });         
    });
            
    AVPNAutoCheck(false);
    MISAutoCheck(false);
    
    function doFetchUpdatedPriceJS(){
        doFetchUpdatedPrice();        
    }
    
    function initPortSpeedOnPageLoad(){
        var trElemId = 'container'+parseInt(portTypeIndex); 
        var currElementTr = document.getElementById(trElemId);
        if( typeof currElementTr != 'undefined' ){
            var innerTds = currElementTr.getElementsByTagName("td");
            var selectElem = innerTds[1].getElementsByTagName("select");
            if( typeof selectElem[0] != 'undefined' ){
                filterAndRenderPortSpeed(selectElem[0], 'y');
            }
        }
    }
    
    function initAccessSpeedOnPageLoad(){
        var portSpeedIndex = parseInt(portTypeIndex) + 1;
        var trElemId = 'container'+parseInt(portSpeedIndex); 
        var currElementTr = document.getElementById(trElemId);
        if( typeof currElementTr != 'undefined' ){
            var innerTds = currElementTr.getElementsByTagName("td");
            var selectElem = innerTds[1].getElementsByTagName("select");
            if( typeof selectElem[0] != 'undefined' ){
                filterAndRenderAccessSpeed(selectElem[0]);
            }
        }
        getSoftDeletedSites();
    }
    
    function disableFirstOpt() {   
        $('#configSites select').each(function(){
            $(this).children('option:first-child').attr('disabled', 'false');
        });
        $('#configaddedsitesNew tbody tr td a').on('click', function(){
            highlightRowId = $(this).attr('class');            
            $('#configaddedsitesNew tbody tr td a.'+highlightRowId).parent('td').parent('tr').addClass('active');
        });
    }
    
    function showPricingProcessIcon(siteId,cmd) {
        if( cmd == 'y' ){
            $('#tick'+siteId+',#oneTimeTick'+siteId).hide();
            $('#process'+siteId+',#oneTimeProcess'+siteId).show();
        }else{
            $('#tick'+siteId+',#oneTimeTick'+siteId).show();
            $('#process'+siteId+',#oneTimeProcess'+siteId).hide();
        }
    }
    
    function hidePricingProcessIcon(siteId) {
        var elemIdDollar = 'tick'+siteId;
        var elemIdProcess = 'process'+siteId;
        var elemIdOneTimeDollar = 'oneTimeTick'+siteId;
        var elemIdOneTimeProcess = 'oneTimeProcess'+siteId;
        
        var elemDollarObj = document.getElementById(elemIdDollar);
        var elemProcessObj = document.getElementById(elemIdProcess);
        var elemOneTimeDollarObj = document.getElementById(elemIdOneTimeDollar);
        var elemOneTimeProcessObj = document.getElementById(elemIdOneTimeProcess);
        
        elemDollarObj.style.display = 'block';
        elemProcessObj.style.display = 'none';
        elemOneTimeDollarObj.style.display = 'block';
        elemOneTimeProcessObj.style.display = 'none';
    }
    
    function removeContinueCSS(){
        var isEnabled = document.getElementById("isContinueEnabledHdn").value;
        var isIpFlexErrorExists = document.getElementById("isIPFLEXErrorHdn").value;
        if( isEnabled == 'true' && isIpFlexErrorExists == 'false'){
            $("[id$=btnId]").prop('disabled',false);
        }
    }
    
    function makeTableActive(){
        $('#configaddedsitesNew tbody tr td').addClass('active');
    }
    
    /*********************VASA Overlay Code Starts here.*******************************/
    var jsonVasaResponse = '{!jsonServiceAvailability}';
    var jsonObject = JSON.parse(jsonVasaResponse);
    var portTypeAr = [];
    var portSpeedAr = [];
    var firstStackRegion;
    var secondStackRegion;
    var portTypeToBeFiltered = [];
    var portSpeedToBeFiltered = [];
    var isSEAvailable = true;
    var isPLAvailble = true;
    var otherSpeedsAr = [];
    var portSpeedToBeFiltered = [];
    var spareQuantity;
    var portTypeObj;
    var accessSpeedToBeFiltered = [];
    vlanIndex = '{!vlanIndex}';
    var NumberAvailabilityIndicator = '{!NumberAvailabilityIndicator}';
    var NumberPortabilityIndicator = '{!NumberPortabilityIndicator}'; 
    var VirtualTNAvailabilityIndicator = '{!VirtualTNAvailabilityIndicator}';  
    var PortedPhoneNumbers = '';
    var NewLocalPhoneNumbers = "";
    var NewVirtualPhoneNumbers = "";
    var IPFlexibleReachPlan ="";
    var IPFlexPlans = '{!IPFlexPlans}';
    function disableVlanChkBox()
    {
        var trElemId = 'container'+parseInt(vlanIndex); 
        var currElementTr = document.getElementById(trElemId);
        if( typeof currElementTr != 'undefined' ){
            var innerTds = currElementTr.getElementsByTagName("td");
            var selectElem = innerTds[1].getElementsByTagName("input");
            if( typeof selectElem[0] != 'undefined' ){
                selectElem[0].disabled = true;
                $(".vLanLabel").addClass('vLanLabelDisable');
                $(".vLanLabel").removeClass('vLanLabel');
                $("#vLanItalicId").addClass('vLanItalicDisable');
                $("#vLanItalicId").removeClass('vLanItalic');
            }
            var labelElement = innerTds[1].getElementsByTagName("b");
            if( typeof labelElement[0] != 'undefined' ){
                $(labelElement[0]).addClass('vLanLabelDisable');                    
            }
            
        }
    }
    
    function routeOrPauseTheParsingCall(){
        try{
            for( var i = 0; i < jsonObject.AddressServiceAvailability.length; i++  ){
                if( typeof jsonObject.AddressServiceAvailability[i] != 'undefined' ){
                    if( i == 0 ){
                        firstStackRegion = jsonObject.AddressServiceAvailability[i].region;
                    }else{
                        secondStackRegion = jsonObject.AddressServiceAvailability[i].region;
                    }
                }
            }
            parseTheJsonResponseAndPrepareDataStructure();
        }catch( e ){}
    }
    
    function validateAndEnableHiCapFlexCheckBox(){
        var seRegion;
        for( var i = 0; i < jsonObject.AddressServiceAvailability.length; i++  ){
            if( typeof jsonObject.AddressServiceAvailability[i] != 'undefined' ){
                if( i == 0 ){
                    seRegion = jsonObject.AddressServiceAvailability[i].region;
                }
            }
        }
        
        if(seRegion == 'Y' || seRegion == 'y') {
            if(jsonObject.AddressServiceAvailability[0].ServiceAvailabilityDetails != null && jsonObject.AddressServiceAvailability[0].ServiceAvailabilityDetails != '') {
                // Manish : Added this check since Ethernet Check was failing for In Region Site without Ethernet Block.
                if(jsonObject.AddressServiceAvailability[0].statusCode!='4'){ 
                    if(jsonObject.AddressServiceAvailability[0].ServiceAvailabilityDetails.Ethernet != null && jsonObject.AddressServiceAvailability[0].ServiceAvailabilityDetails.Ethernet != ''  ){ 
                        
                        if( productName == 'AT&T Virtual Private Network' ){
                            var trElemId = 'container'+parseInt(hiCapFlexIndex);
                        }
                        if( productName == 'AT&T Managed Internet Service' ){
                            var trElemId = 'container'+parseInt(hiCapFlexIndex); 
                        }
                        /*Radhika 12 Dec 2015, UBB in and out region font change fix */
                        var currElementTr = document.getElementById(trElemId);
                        if( typeof currElementTr != 'undefined' ){
                            
                            var innerTds = currElementTr.getElementsByTagName("td");
                            var selectElem = innerTds[1].getElementsByTagName("input");
                            if( typeof selectElem[0] != 'undefined' ){
                                document.getElementById("errorMessageFlag").style.display = "none";
                                $("#uBBLabelId").addClass('uBBLabel');
                                $("#uBBLabelId").removeClass('uBBLabelDisable');
                                $("#uBBItalicId").addClass('uBBItalic');
                                $("#uBBItalicId").removeClass('uBBItalicDisable');
                            }
                        }
                    } 
                }
            }
        }else{
            if( productName == 'AT&T Virtual Private Network' ){
                var trElemId = 'container'+parseInt(hiCapFlexIndex);
            }
            if( productName == 'AT&T Managed Internet Service' ){
                var trElemId = 'container'+parseInt(hiCapFlexIndex); 
            }
            var currElementTr = document.getElementById(trElemId);
            if( typeof currElementTr != 'undefined' ){
                var innerTds = currElementTr.getElementsByTagName("td");
                var selectElem = innerTds[1].getElementsByTagName("input");
                if( typeof selectElem[0] != 'undefined' ){
                    selectElem[0].disabled = true;
                    document.getElementById("errorMessageFlag").style.display = "block";
                    $("#uBBLabelId").addClass('uBBLabelDisable');
                    $("#uBBLabelId").removeClass('uBBLabel');
                    $("#uBBItalicId").addClass('uBBItalicDisable');
                    $("#uBBItalicId").removeClass('uBBItalic');
                }
            }
        }
        filterPortType();
    }
    
    function parseTheJsonResponseAndPrepareDataStructure(){
        prepareAndInitializePortType();
    }
    
    function prepareAndInitializePortType(){
        portTypeToBeFiltered = [];
        for( var i = 0; i < jsonObject.AddressServiceAvailability.length; i++  ){
            
            // **Fix is done for accomodate when there is no second block. Defect-69242 -Vineet
            if(jsonObject.AddressServiceAvailability.length == 1){ 
                if(jsonObject.AddressServiceAvailability[0].ServiceAvailabilityDetails.PrivateLine == '' || jsonObject.AddressServiceAvailability[0].ServiceAvailabilityDetails.PrivateLine == null){
                    portTypeToBeFiltered.push('Private Line');
                    isPLAvailble = false;
                }
                else if(jsonObject.AddressServiceAvailability[0].ServiceAvailabilityDetails.Ethernet == '' || jsonObject.AddressServiceAvailability[0].ServiceAvailabilityDetails.Ethernet == null){
                    portTypeToBeFiltered.push('Switched Ethernet');
                    isSEAvailable = false;
                    disableChkBoxhicap();
                    if( productName == 'AT&T Virtual Private Network' ){
                        disableVlanChkBox();
                    }
                } 
            }else{
                if( i == 0 && jsonObject.AddressServiceAvailability[i].ServiceAvailabilityDetails == null ){
                    portTypeToBeFiltered.push('Switched Ethernet');
                    isSEAvailable = false;
                    disableChkBoxhicap();
                    if( productName == 'AT&T Virtual Private Network' ){
                        disableVlanChkBox();
                    }
                }else if(i == 0 && jsonObject.AddressServiceAvailability[i].statusCode!='4' && jsonObject.AddressServiceAvailability[i].statusCode!='9' && jsonObject.AddressServiceAvailability[i].statusCode!='503'){ 
                    if( i == 0 && (jsonObject.AddressServiceAvailability[i].ServiceAvailabilityDetails != null && jsonObject.AddressServiceAvailability[i].ServiceAvailabilityDetails.Ethernet != null && jsonObject.AddressServiceAvailability[i].ServiceAvailabilityDetails.Ethernet.ethernetAvailability != 'Y' ) ){
                        portTypeToBeFiltered.push('Switched Ethernet');
                        isSEAvailable = false;
                        disableChkBoxhicap();
                        if( productName == 'AT&T Virtual Private Network' ){
                            disableVlanChkBox();
                        }
                    }
                }
                if ( i == 0 && jsonObject.AddressServiceAvailability[i].statusCode =='503'){
                    portTypeToBeFiltered.push('Switched Ethernet');
                    isSEAvailable = false;
                    disableChkBoxhicap();
                    if( productName == 'AT&T Virtual Private Network' ){
                        disableVlanChkBox();
                    }
                }   
                if ( i == 0 && jsonObject.AddressServiceAvailability[i].statusCode =='4'){
                    portTypeToBeFiltered.push('Switched Ethernet');
                    isSEAvailable = false;
                    disableChkBoxhicap();
                    if( productName == 'AT&T Virtual Private Network' ){
                        disableVlanChkBox();
                    }
                }
                if ( i == 0 && jsonObject.AddressServiceAvailability[i].statusCode =='9'){
                    portTypeToBeFiltered.push('Switched Ethernet');
                    isSEAvailable = false;
                    disableChkBoxhicap();
                    if( productName == 'AT&T Virtual Private Network' ){
                        disableVlanChkBox();
                    }
                } 
                if( i == 1 && jsonObject.AddressServiceAvailability[i].ServiceAvailabilityDetails == null ){
                    portTypeToBeFiltered.push('Private Line');
                    isPLAvailble = false;
                }   
                if( i == 1 && jsonObject.AddressServiceAvailability[i].ServiceAvailabilityDetails.PrivateLine == null ){
                    portTypeToBeFiltered.push('Private Line');
                    isPLAvailble = false;
                }  
                if(i == 1 && jsonObject.AddressServiceAvailability[i].statusCode =='4'){
                    portTypeToBeFiltered.push('Private Line');
                    isPLAvailble = false;
                }    
                if(i == 1 && jsonObject.AddressServiceAvailability[i].statusCode =='9'){
                    portTypeToBeFiltered.push('Private Line');
                    isPLAvailble = false;
                }                
            }
        }
        filterPortType();
        ReadIPFlexibleReachPlan();
        toggleIpflexPhoneNumber('.ipFlexPlanClass');
        CheckAndDisableIpflexFields();
    }
    
    function disableChkBoxhicap(){
        var trElemId = 'container'+parseInt(hiCapFlexIndex);
        var currElementTr = document.getElementById(trElemId);
        if( typeof currElementTr != 'undefined' ){
            var innerTds = currElementTr.getElementsByTagName("td");
            var selectElem = innerTds[1].getElementsByTagName("input");
            if( typeof selectElem[0] != 'undefined' ){
                selectElem[0].disabled = true;
                $("#uBBLabelId").addClass('uBBLabelDisable');
                $("#uBBLabelId").removeClass('uBBLabel');
                $("#uBBItalicId").addClass('uBBItalicDisable');
                $("#uBBItalicId").removeClass('uBBItalic');
            }
        }
    }
    
    
    
    function filterPortType(){
        var inRegion = '{!inRegionSite}';
        if(removeSwitchedEthernet==true){
            portTypeToBeFiltered.push('Switched Ethernet');
            disableChkBoxhicap();
            if( productName == 'AT&T Virtual Private Network' ){
                disableVlanChkBox();
            }
        }
        else if(typeof inRegion != 'undefined' && inRegion == 'true'){
            removeUnEligiblileAccessSpeed();
        }
        if(disableHicapOnMinimumSpeedAvail==true){
            disableChkBoxhicap();
        }
        var trElemId = 'container'+parseInt(portTypeIndex); 
        var currElementTr = document.getElementById(trElemId);
        if( typeof currElementTr != 'undefined' ){
            var innerTds = currElementTr.getElementsByTagName("td");
            var selectElem = innerTds[1].getElementsByTagName("select");
            if( typeof selectElem[0] != 'undefined' ){
                for( var i = 0; i < portTypeToBeFiltered.length; i++ ){
                    selectElem[0].remove(getIndexOfTheOption(selectElem[0], portTypeToBeFiltered[i]));
                }
            }
        }   
    }
    
    
    function filterAndRenderPortSpeed(inpObj, cmd){
        var portSpeedIndex = parseInt(portTypeIndex) + 1;
        var hiCap = document.getElementById("hdnHiCapFlexFlag").value;
        if( inpObj.value == 'Switched Ethernet' ){
            if( cmd != null ){
                setTimeout(function(){ prepareTheEthernetSpeedCollection(); }, 50);
            }else{
                setTimeout(function(){ prepareTheEthernetSpeedCollection(); }, 50);
            }
        }else if( inpObj.value == 'Private Line' && secondStackRegion != 'Y' ){
            if( cmd != null ){
                setTimeout(function(){ prepareThePrivateLineSpeedCollection(); }, 50);
            }else{
                setTimeout(function(){ prepareThePrivateLineSpeedCollection(); }, 50);
            }
        }
        if( hiCap == 'true' && inpObj.value == 'Switched Ethernet' ){
            setTimeout(function(){
                var trElemId = 'container'+parseInt(portSpeedIndex); 
                var currElementTr = document.getElementById(trElemId);
                if( typeof currElementTr != 'undefined' ){
                    var innerTds = currElementTr.getElementsByTagName("td");
                    var selectElem = innerTds[1].getElementsByTagName("select");
                    
                    if( typeof selectElem[0] != 'undefined' ){
                        var fivembs = getIndexOfTheOption(selectElem[0], '5 Mbps');
                        if(typeof fivembs != -1 ){
                            selectElem[0].remove(fivembs);
                        }
                        validateFormAndEnableApply(null,'on');
                        var tenmbs = getIndexOfTheOption(selectElem[0], '10 Mbps');
                        selectElem[0].remove(tenmbs);
                    }
                }  
                    var inRegion = '{!inRegionSite}';
                    if(typeof inRegion != 'undefined' && inRegion == 'true'){
                        removeUnEligiblileAccessSpeed();
                    }               
            }, 50); 
        }
    }
    
    function prepareTheEthernetSpeedCollection(){           
        for( var i = 0; i < jsonObject.AddressServiceAvailability.length; i++  ){
            if( i == 0 ){                   
                if( jsonObject.AddressServiceAvailability[i].ServiceAvailabilityDetails != null && jsonObject.AddressServiceAvailability[i].ServiceAvailabilityDetails.Ethernet != null && jsonObject.AddressServiceAvailability[i].ServiceAvailabilityDetails.Ethernet.OtherSpeed != null ){
                    filterPortSpeedSwitchedEthernetOptions(jsonObject.AddressServiceAvailability[i].ServiceAvailabilityDetails.Ethernet.OtherSpeed, jsonObject.AddressServiceAvailability[i].ServiceAvailabilityDetails.Ethernet.maxAvailableSpeed)
                }
            }
        }
    }
    
    function filterPortSpeedSwitchedEthernetOptions( otherSpeeds, maxSpeeds ){
        otherSpeedsAr = [];
        otherSpeedsAr.push('--None--');
        if( firstStackRegion == 'Y' ){
            setTimeout(function(){ limitPortSpeedByMaxAvailableSpeed(maxSpeeds); }, 50);
        }else if( firstStackRegion != 'Y' && productName != 'AT&T Virtual Private Network' ){
            for( var i = 0; i < otherSpeeds.length; i++  ){
                if( typeof otherSpeeds[i].speed != 'undefined' && parseInt(otherSpeeds[i].speed) <= parseInt(maxSpeeds) ){
                    otherSpeedsAr.push(otherSpeeds[i].speed+' Mbps' );        
                }
            }
            filterTheOptionsAndRenderUI();
        }else{
            setTimeout(function(){ limitPortSpeedByMaxAvailableSpeed(maxSpeeds); }, 50);
        }
    }
    
    function limitPortSpeedByMaxAvailableSpeed(maxAvailSpeed){
        var portSpeedIndex = parseInt(portTypeIndex) + 1;
        var trElemId = 'container'+parseInt(portSpeedIndex); 
        var currElementTr = document.getElementById(trElemId);
        if( typeof currElementTr != 'undefined' ){
            var innerTds = currElementTr.getElementsByTagName("td");
            var selectElem = innerTds[1].getElementsByTagName("select");
            if( typeof selectElem[0] != 'undefined' ){
                var optionList = [];
                for(var i = 0; i < selectElem[0].options.length; i++){
                    optionList.push( selectElem[0].options[i].innerHTML );
                }
                
                for( var i = 0; i < optionList.length; i++ ){
                    if( optionList[i].indexOf('M') != -1 ){
                        if( parseInt(optionList[i].substring(0, optionList[i].indexOf('M') - 1)) > parseInt(maxAvailSpeed)  ){
                            selectElem[0].remove(getIndexOfTheOption(selectElem[0], optionList[i]));
                        }
                    }
                }
            }
        }
    }
    
    function segragateTheUnavailableSpeeds( elem ){
        portSpeedToBeFiltered = [];
        for( var i = 0; i < elem.options.length; i++ ){
            var checkFoundFlag = false;
            for( var j = 0; j < otherSpeedsAr.length; j++ ){
                if( elem.options[i].innerHTML == otherSpeedsAr[j]  ){
                    checkFoundFlag = true;
                }
            }
            if( !checkFoundFlag ){
                portSpeedToBeFiltered.push(elem.options[i].innerHTML);
            }
        }
    }
    
    function filterTheOptionsAndRenderUI(){
        var portSpeedIndex = parseInt(portTypeIndex) + 1;
        var trElemId = 'container'+parseInt(portSpeedIndex); 
        var currElementTr = document.getElementById(trElemId);
        if( typeof currElementTr != 'undefined' ){
            var innerTds = currElementTr.getElementsByTagName("td");
            var selectElem = innerTds[1].getElementsByTagName("select");
            if( typeof selectElem[0] != 'undefined' ){
                segragateTheUnavailableSpeeds(selectElem[0]);
                for( var i = 0; i < portSpeedToBeFiltered.length; i++ ){
                    selectElem[0].remove(getIndexOfTheOption(selectElem[0], portSpeedToBeFiltered[i]));
                } 
            }
        }
    }
    
    function prepareThePrivateLineSpeedCollection(){
        for( var i = 0; i < jsonObject.AddressServiceAvailability.length; i++  ){
            if( i == 1 ){
                if( jsonObject.AddressServiceAvailability[i].ServiceAvailabilityDetails != null && jsonObject.AddressServiceAvailability[i].ServiceAvailabilityDetails.PrivateLine != null ){
                    filterPortSpeedPrivateLineOptions(jsonObject.AddressServiceAvailability[i].ServiceAvailabilityDetails.PrivateLine[0])
                }
            }
        }
    }
    
    function filterPortSpeedPrivateLineOptions(privateLineObj){
        if(privateLineObj && privateLineObj.spareQuantity){
            spareQuantity = privateLineObj.spareQuantity;
            if( parseInt(privateLineObj.spareQuantity) < 8 ){
                filterThePLOptionsAndRenderUI();
            }            
        }
    }
    
    function prepareTheListOFUnavailablePLSpeeds( elem ){
        var chkToken;
        portSpeedToBeFiltered = [];
        for( var i = 0; i < elem.options.length; i++ ){
            if( elem.options[i].innerHTML.substring(0,1) != '-') {  
                if( elem.options[i].innerHTML.substring(0,1) == 'T' ){
                    chkToken = parseInt('1');
                }else {
                    chkToken = parseInt(elem.options[i].innerHTML.substring(0,1));
                }
                if( chkToken > parseInt(spareQuantity) ){
                    portSpeedToBeFiltered.push(elem.options[i].innerHTML);
                }
            }
        }
    }
    
    function filterThePLOptionsAndRenderUI(){
        var portSpeedIndex = parseInt(portTypeIndex) + 1;
        var trElemId = 'container'+parseInt(portSpeedIndex); 
        var currElementTr = document.getElementById(trElemId);
        if( typeof currElementTr != 'undefined' ){
            var innerTds = currElementTr.getElementsByTagName("td");
            var selectElem = innerTds[1].getElementsByTagName("select");
            if( typeof selectElem[0] != 'undefined' ){
                prepareTheListOFUnavailablePLSpeeds(selectElem[0]);
                for( var i = 0; i < portSpeedToBeFiltered.length; i++ ){
                    selectElem[0].remove(getIndexOfTheOption(selectElem[0], portSpeedToBeFiltered[i]));
                }
            }
        }    
    }
    
    var selectedPortSpeed='';
    function filterAndRenderAccessSpeed( inpObj ){
        var portTypeData;
        var trElemId = 'container'+parseInt(portTypeIndex); 
        var currElementTr = document.getElementById(trElemId);
        if( typeof currElementTr != 'undefined' ){
            var innerTds = currElementTr.getElementsByTagName("td");
            var selectElem = innerTds[1].getElementsByTagName("select");
            if( typeof selectElem[0] != 'undefined' ){
                portTypeData = selectElem[0].value;
            }
        }
        if( portTypeData == 'Switched Ethernet'){
            if( inpObj.value != 'Switched Ethernet' && inpObj.value != 'Private Line' && inpObj.value != '' && inpObj.value != '-  -'){  
                setTimeout(function(){  
                    selectedPortSpeed = inpObj.value.substring(0, inpObj.value.indexOf('M')-1);
                    for( var i = 0; i < jsonObject.AddressServiceAvailability.length; i++  ){
                        if( i == 0 ){
                            if( firstStackRegion != 'Y' ){
                                if( jsonObject.AddressServiceAvailability[i].ServiceAvailabilityDetails != null && jsonObject.AddressServiceAvailability[i].ServiceAvailabilityDetails.Ethernet != null && (jsonObject.AddressServiceAvailability[i].ServiceAvailabilityDetails.Ethernet.OtherSpeed != null && jsonObject.AddressServiceAvailability[i].ServiceAvailabilityDetails.Ethernet.OtherSpeed.length > 0 ) && ( selectedPortSpeed != '' || typeof selectedPortSpeed != 'undefined') ){
                                    filterAccessSpeedSwitchedEthernetOptions(jsonObject.AddressServiceAvailability[i].ServiceAvailabilityDetails.Ethernet.OtherSpeed, jsonObject.AddressServiceAvailability[i].ServiceAvailabilityDetails.Ethernet.maxAvailableSpeed, selectedPortSpeed);
                                }
                            }else{
                                restrictAccessSpeedUpToMaxSpeed(jsonObject.AddressServiceAvailability[i].ServiceAvailabilityDetails.Ethernet.maxAvailableSpeed);
                            }
                        }
                    }
                }, 50);                    
            }  
        } else if( portTypeData == 'Private Line' ){
            setTimeout(function(){
                for( var i = 0; i < jsonObject.AddressServiceAvailability.length; i++  ){
                    if( i == 1 ){
                        if( jsonObject.AddressServiceAvailability[i].ServiceAvailabilityDetails != null && jsonObject.AddressServiceAvailability[i].ServiceAvailabilityDetails.PrivateLine != null ){
                            filterPortSpeedPrivateLineAccessSpeedOptions(jsonObject.AddressServiceAvailability[i].ServiceAvailabilityDetails.PrivateLine[0])
                        }
                    }
                }   
            }, 50); 
        }
    }
    
    function restrictAccessSpeedUpToMaxSpeed(maxAvailSpeed){
        var accessSpeedIndex = parseInt(portTypeIndex) + 3;
        var trElemId = 'container'+parseInt(accessSpeedIndex); 
        var currElementTr = document.getElementById(trElemId);
        if( typeof currElementTr != 'undefined' ){
            var innerTds = currElementTr.getElementsByTagName("td");
            var selectElem = innerTds[1].getElementsByTagName("select");
            if( typeof selectElem[0] != 'undefined' ){
                var optionList = [];
                for(var i = 0; i < selectElem[0].options.length; i++){
                    optionList.push( selectElem[0].options[i].innerHTML );
                }
                for( var i = 0; i < optionList.length; i++ ){
                    if( optionList[i].indexOf('M') != -1 ){
                        if( parseInt(optionList[i].substring(0, optionList[i].indexOf('M') - 1)) > parseInt(maxAvailSpeed)  ){
                            selectElem[0].remove(getIndexOfTheOption(selectElem[0], optionList[i]));
                        }
                    }
                }
            }
        }
    }
    
    function filterPortSpeedPrivateLineAccessSpeedOptions(privateLineObj){
        if(privateLineObj && privateLineObj.spareQuantity){
            spareQuantity = privateLineObj.spareQuantity;
            if( parseInt(privateLineObj.spareQuantity) < 8 ){
                filterThePLAccessSpeedOptionsAndRenderUI();
            }            
        }
    }
    
    function prepareTheListOFUnavailablePLAccessSpeeds( elem ){
        var chkToken;
        accessSpeedToBeFiltered = [];
        for( var i = 0; i < elem.options.length; i++ ){
            if( elem.options[i].innerHTML.substring(0,1) != '-') {  
                if( elem.options[i].innerHTML.substring(0,1) == 'T' ){
                    chkToken = parseInt('1');
                }else {
                    chkToken = parseInt(elem.options[i].innerHTML.substring(0,1));
                }
                if( chkToken > parseInt(spareQuantity) ){
                    accessSpeedToBeFiltered.push(elem.options[i].innerHTML);
                }
            }
        }
    }
    
    function filterThePLAccessSpeedOptionsAndRenderUI(){
        var accessSpeedIndex = parseInt(portTypeIndex) + 3;
        var trElemId = 'container'+parseInt(accessSpeedIndex); 
        var currElementTr = document.getElementById(trElemId);
        if( typeof currElementTr != 'undefined' ){
            var innerTds = currElementTr.getElementsByTagName("td");
            var selectElem = innerTds[1].getElementsByTagName("select");
            if( typeof selectElem[0] != 'undefined' ){
                prepareTheListOFUnavailablePLAccessSpeeds(selectElem[0]);
                for( var i = 0; i < accessSpeedToBeFiltered.length; i++ ){
                    selectElem[0].remove(getIndexOfTheOption(selectElem[0], accessSpeedToBeFiltered[i]));
                }
            }
        }    
    }
    
    function filterAccessSpeedSwitchedEthernetOptions( otherSpeeds, maxSpeeds, portSpeed ){
        otherSpeedsAr = [];
        otherSpeedsAr.push('--None--');
        for( var i = 0; i < otherSpeeds.length; i++  ){
            if( typeof otherSpeeds[i].speed != 'undefined' && parseInt(otherSpeeds[i].speed) <= parseInt(maxSpeeds) && parseInt(otherSpeeds[i].speed) >= parseInt(portSpeed) ){
                otherSpeedsAr.push(otherSpeeds[i].speed+' Mbps' );        
            }
        }
        filterTheAccessSpeedOptionsAndRenderUI();
    }
    
    function segragateTheUnavailableAccessSpeeds( elem ){
        accessSpeedToBeFiltered = [];
        for( var i = 0; i < elem.options.length; i++ ){
            var checkFoundFlag = false;
            for( var j = 0; j < otherSpeedsAr.length; j++ ){
                if( elem.options[i].innerHTML == otherSpeedsAr[j]  ){
                    checkFoundFlag = true;
                }
            }
            if( !checkFoundFlag ){
                accessSpeedToBeFiltered.push(elem.options[i].innerHTML);
            }
        }
    }
    
    var interfaceTypeForOR ;        
    function filterTheAccessSpeedOptionsAndRenderUI(){
        var accessSpeedIndex = parseInt(portTypeIndex) + 3;
        var trElemId = 'container'+parseInt(accessSpeedIndex); 
        var currElementTr = document.getElementById(trElemId);
        if( typeof currElementTr != 'undefined' ){
            var innerTds = currElementTr.getElementsByTagName("td");
            var selectElem = innerTds[1].getElementsByTagName("select");
            if( typeof selectElem[0] != 'undefined' ){
                segragateTheUnavailableAccessSpeeds(selectElem[0]);
                for( var i = 0; i < accessSpeedToBeFiltered.length; i++ ){
                    selectElem[0].remove(getIndexOfTheOption(selectElem[0], accessSpeedToBeFiltered[i]));
                }
            }
        }
        InterfaceOptionsForOR(selectedPortSpeed+' Mbps');
    }
    
    function InterfaceOptionsForOR(input){
        if(input == '5 Mbps'){
            interfaceTypeForOR= '{!interfaceType5}';
        }else if(input == '10 Mbps'){
            interfaceTypeForOR= '{!interfaceType10}';
        }else if(input == '20 Mbps'){
            interfaceTypeForOR= '{!interfaceType20}';
        }else if(input == '50 Mbps'){
            interfaceTypeForOR= '{!interfaceType50}';
        }else if(input == '100 Mbps'){
            interfaceTypeForOR= '{!interfaceType100}';
        }
        if(typeof interfaceTypeForOR != 'undefined' && interfaceTypeForOR != null  && interfaceTypeForOR.length>0)
        {
            interfaceTypeForOR = interfaceTypeForOR.replace('[', '');
            interfaceTypeForOR = interfaceTypeForOR.replace(']', '');
        }
    }
    
    function populateNewInterfaceOptions(){
        if( firstStackRegion != 'Y' && interfaceTypeForOR != "" && interfaceTypeForOR != null && typeof interfaceTypeForOR != 'undefined'){
            var trElemId1 = 'container'+(interfaceTypeIndex-1);
            var currElementTr1 = document.getElementById(trElemId1);
            if( typeof currElementTr1 != 'undefined' && (typeof currElementTr1 != '' && typeof currElementTr1 != null)){
                var innerTds1 = currElementTr1.getElementsByTagName("td");
                var selectElem1 = innerTds1[1].getElementsByTagName("select");
                if(selectElem1[0].value != '--None--' && selectElem1[0].value != '' && ((selectElem1[0].value).split(' '))[0] <= 100){
                    var trElemId = 'container'+interfaceTypeIndex;
                    var currElementTr = document.getElementById(trElemId);
                    if( typeof currElementTr != 'undefined' && (typeof currElementTr != '' && typeof currElementTr != null)){
                        var innerTds = currElementTr.getElementsByTagName("td");
                        var selectElem = innerTds[1].getElementsByTagName("select");
                        var array = [];
                        array =  interfaceTypeForOR.split(',');
                        if(array.length == selectElem[0].options.length - 1){
                            
                        }else if(array.length == 2){
                            for(j=0;j<array.length;j++){
                                for( var i = 0; i < selectElem[0].options.length; i++ ){
                                    if(selectElem[0].options[i].innerHTML != '--None--'){
                                        if( selectElem[0].options[i].innerHTML == array[j].trim() ){
                                            break;
                                        }else{
                                            if(i > j){
                                                selectElem[0].remove(i);
                                                break;
                                            }
                                        }                               
                                    }
                                }
                            }                            
                        }else{
                            for( var i = 0; i < selectElem[0].options.length; i++ ){
                                if(selectElem[0].options[i].innerHTML != '--None--' && selectElem[0].options[i].innerHTML != array[0].trim()){
                                    selectElem[0].remove(i);
                                    i--;
                                }
                            }                             
                        }
                    }                       
                }    
            }  
        }
    }
    
    $('.close').on('click',function(){
        $('.blockBackground').remove();
    });
    
    function removeAndAddPrivateLineOnHicapFlexSelectionClone(){
        setTimeout(function(){
            if( productName == 'AT&T Managed Internet Service' ){
                var HiCapOnPageLoad = 'container'+'3'; 
            }else if(productName == 'AT&T Virtual Private Network'){
                var HiCapOnPageLoad = 'container'+'3'; 
            }
            
            var currElementTr1 = document.getElementById(HiCapOnPageLoad);
            var porttypecheck ="";
            var innerTds1 = currElementTr1.getElementsByTagName("td");
            var selectElem1 = innerTds1[1].getElementsByTagName("input");
            
            if( selectElem1[0].checked){
                document.getElementById("hdnHiCapFlexFlag").value='true';
                var trElemId = 'container'+parseInt(portTypeIndex); 
                
                var currElementTr = document.getElementById(trElemId);
                if( typeof currElementTr != 'undefined' ){
                    var innerTds = currElementTr.getElementsByTagName("td");
                    var selectElem = innerTds[1].getElementsByTagName("select");
                    if( typeof selectElem[0] != 'undefined' && typeof selectElem[0] != 'null' && typeof selectElem[0] != ''){
                        selectElem[0].remove(getIndexOfTheOption(selectElem[0], 'Private Line'));
                        hicap = true;
                        porttypecheck = selectElem[0].value;
                    }   
                }
                
                if(porttypecheck == 'Switched Ethernet'){
                    setTimeout(function(){
                        var trElemId2 = 'container'+parseInt(portTypeIndex+1); 
                        var currElementTr2 = document.getElementById(trElemId2);
                        if( typeof currElementTr2 != 'undefined' ){
                            var innerTds2 = currElementTr2.getElementsByTagName("td");
                            var selectElem2 = innerTds2[1].getElementsByTagName("select");
                            if( typeof selectElem2[0] != 'undefined' ){
                                var fivembs = getIndexOfTheOption(selectElem2[0], '5 Mbps');
                                if(typeof fivembs != -1 ){
                                    selectElem2[0].remove(fivembs);
                                }
                                var tenmbs = getIndexOfTheOption(selectElem2[0], '10 Mbps');
                                selectElem2[0].remove(tenmbs);
                                validateFormAndEnableApply(null,'on');
                            }
                        }  
                    }, 10); 
                }
            }
        }, 10);
    }
    
    //returns the value of the slect list element 
    //Parmater should be the index or the container counter of the Field
    function getFieldReference(elemIndex){
        var trElemId = 'container'+parseInt(elemIndex); 
        var currElementTr = document.getElementById(trElemId);
        if( typeof currElementTr != 'undefined' ){
            var innerTds = currElementTr.getElementsByTagName("td");
            var selectElem = innerTds[1].getElementsByTagName("input");
            if( typeof selectElem[0] != 'undefined' ){
                return selectElem[0];
            }
        }
    }
    
    var isVLANChecked = false;
    function updateVLANFLag(){
        var startElemId = 'container' + 2;
        var startElementTr = document.getElementById(startElemId);
        if (typeof startElementTr != 'undefined'){
            var startTds = startElementTr.getElementsByTagName("td");
            var selectElem = startTds[1].getElementsByTagName("input");
            if (selectElem[0].checked == true) {
                isVLANChecked = true;
            }else{
                isVLANChecked = false;
            }
        }
        var inRegion = '{!inRegionSite}';
        if(typeof inRegion != 'undefined' && inRegion == 'true'){
            $('.portTypeDivCls select').on('change', function() {
                removeUnEligiblileAccessSpeed();
                $('.portSpeedDivCls select').on('change', function() {
                    if('{!isAVPN}'=='true'){onPortSpeedChange();}
                });
            });
            $('.portSpeedDivCls select').on('change', function() {
                if('{!isAVPN}'=='true'){onPortSpeedChange();}
            });
    }
    }
    
    function updateVLANCheckBox(){
        var startElemId = 'container' + 2;
        var startElementTr = document.getElementById(startElemId);
        if (typeof startElementTr != 'undefined'){
            var startTds = startElementTr.getElementsByTagName("td");
            var selectElem = startTds[1].getElementsByTagName("input");
            if (isVLANChecked) {
                selectElem[0].checked = true;
            }
        }
        var hiCap = document.getElementById("hdnHiCapFlexFlag").value;
            if( hiCap == 'true' ){
                portTypeToBeFiltered = [];
                portTypeToBeFiltered.push('Private Line');
            }
    }
    
    function ipFlexAutoCheck(){
        var isAVPN = '{!isAVPN}';
        var isMIS =  '{!isMIS}';
        $('#container1 .dropDownValue').attr('disabled','disabled');
        if(isMIS)
            $('#container2 .dropDownValue').attr('disabled','disabled');
    }
    
    function AVPNAutoCheck(flag) {
        var avpnProduct = '{!isAVPN}';
        var startElemId = 'container' + 0;
        var startElementTr = document.getElementById(startElemId);
        var trElemId = 'container' + 1;
        var currElementTr = document.getElementById(trElemId);
        if (typeof currElementTr != 'undefined' && typeof startElementTr != 'undefined' && typeof avpnProduct != 'undefined' && avpnProduct == 'true') {
            var innerTds = currElementTr.getElementsByTagName("td");
            var selectElem = innerTds[1].getElementsByTagName("input");
            var startTds = startElementTr.getElementsByTagName("td");
            var startElem = startTds[1].getElementsByTagName("input");
            if (startElem[0].checked == true) {
                selectElem[0].checked = true;
                $(selectElem[0]).attr('disabled','disabled');
            }else {
                if(flag){
                    selectElem[0].checked = false;
                    selectElem[0].disabled = false;
                }
            }
        }
        if(typeof avpnProduct != 'undefined' && avpnProduct == 'true'){
            updateVLANCheckBox();
        }
    }
    
    function MISAutoCheck(flag) {
        var misProduct = '{!isMIS}';
        var startElemId = 'container' + 0;
        var startElementTr = document.getElementById(startElemId);
        var trElemId = 'container' + 1;
        var currElementTr = document.getElementById(trElemId);
        var lastElemId = 'container' + 2;
        var lastElementTr = document.getElementById(lastElemId);
        if (typeof currElementTr != 'undefined' && typeof startElementTr != 'undefined' && typeof lastElementTr != 'undefined' && typeof misProduct != 'undefined' && misProduct == 'true') {
            var innerTds = currElementTr.getElementsByTagName("td");
            var selectElem = innerTds[1].getElementsByTagName("input");
            var startTds = startElementTr.getElementsByTagName("td");
            var startElem = startTds[1].getElementsByTagName("input");
            var lastTds = lastElementTr.getElementsByTagName("td");
            var lastElem = lastTds[1].getElementsByTagName("input");
            
            if (startElem[0].checked == true) {
                selectElem[0].checked = true;
                $(selectElem[0]).attr('disabled','disabled');  
                lastElem[0].checked = true;
                $(lastElem[0]).attr('disabled','disabled');
            }else {  
                if(flag){
                    selectElem[0].checked = false;
                    selectElem[0].disabled = false;
                    lastElem[0].checked = false;
                    lastElem[0].disabled = false;  
                }
            }
        }
    }

    $('body').popover({ 
        selector: '[data-popover]', 
        trigger: 'click hover', 
        content: function () {
            if($(this).parent().find('.promotionAppliedData').length > 0){
                return $(this).parent().find('.promotionAppliedData').html();
            }else if($(this).parent().find('.promotionAvailableData').length > 0){
                $(this).parent().find('.promotionAvailableData .promoTable tr').remove();
                createTooltipContentforAvailablePromotion($(this));
                return $(this).parent().find('.promotionAvailableData').html();
            }            
        }
    });
    
    function createTooltipContentforAvailablePromotion(thisEle){
        var sessionPromotions = [{!$Cache.Session.Local.OrgLevel.promotionpersite}];
        var selectedSiteId = '{!selectedSiteId}'; 
        if(sessionPromotions != undefined && sessionPromotions != '' && sessionPromotions.length > 0 && selectedSiteId != ''){
            for(var i=0; i < sessionPromotions.length; i++){
                if(thisEle.parent().attr('id') == 'Port_Speed_PromoTag'){
                    console.log('Port_Speed_PromoTag '+JSON.stringify(sessionPromotions[i]));
                    if(sessionPromotions[i]["MIS Basic"] != undefined){
                        for(var j=0;j<sessionPromotions[i]["MIS Basic"].length;j++){
                            var eligibleDiscount = parseFloat(sessionPromotions[i]["MIS Basic"][j].Discount);
                            var speedData = sessionPromotions[i]["MIS Basic"][j].Speed;
                            if("undefined" != typeof speedData && speedData != null && speedData != "" && speedData.indexOf(",")>-1){
                                 speedData = speedData.replace(/,/g, ", ");
                            }
                            $('<tr>').html(
                            '<td><div class="promotionSpeeds" id="'+thisEle.parent().attr('id')+'_Speed'+[j]+'">'+speedData+'</div></td><td class="promotionPercentage"  id="'+thisEle.parent().attr('id')+'_Discount'+[j]+'">Save '+eligibleDiscount+'%</td>').appendTo(thisEle.parent().find('.promotionAvailableData .promoTable'));
                        }                        
                    }
                    if(sessionPromotions[i]["MIS Plus"] != undefined){
                        for(var j=0;j<sessionPromotions[i]["MIS Plus"].length;j++){
                            var eligibleDiscount = parseFloat(sessionPromotions[i]["MIS Plus"][j].Discount);
                            var speedData = sessionPromotions[i]["MIS Plus"][j].Speed;
                            if("undefined" != typeof speedData && speedData != null && speedData != "" && speedData.indexOf(",")>-1){
                                 speedData = speedData.replace(/,/g, ", ");
                            }
                            $('<tr>').html(
                            '<td><div class="promotionSpeeds" id="'+thisEle.parent().attr('id')+'_Speed'+[j]+'">'+speedData+'</div></td><td class="promotionPercentage"  id="'+thisEle.parent().attr('id')+'_Discount'+[j]+'">Save '+eligibleDiscount+'%</td>').appendTo(thisEle.parent().find('.promotionAvailableData .promoTable'));                         
                        }
                    }
                }else if(thisEle.parent().attr('id') == 'Access_Speed_PromoTag'){
                    for(var j=0;j<sessionPromotions[i].ACCESS.length;j++){
                        var eligibleDiscount = parseFloat(sessionPromotions[i].ACCESS[j].Discount);
                        var speedData = sessionPromotions[i].ACCESS[j].Speed;
                        if("undefined" != typeof speedData && speedData != null && speedData != "" && speedData.indexOf(",")>-1){
                             speedData = speedData.replace(/,/g, ", ");
                        }
                        $('<tr>').html(
                        '<td><div class="promotionSpeeds" id="'+thisEle.parent().attr('id')+'_Speed'+[j]+'">'+speedData+'</div></td><td class="promotionPercentage"  id="'+thisEle.parent().attr('id')+'_Discount'+[j]+'">Save '+eligibleDiscount+'%</td>').appendTo(thisEle.parent().find('.promotionAvailableData .promoTable'));
                    }
                }
                
                else if(thisEle.parent().attr('id') == 'Minimum_Bandwidth_Commitment_MBC_PromoTag'){
                    if ( undefined!= sessionPromotions[i]["MBC Basic"] )
                    {
                        if ( '{!isAVPN}' == 'false' )
                        {
                            $('<tr style="line-height:14px;">').html(
                            '<td><b>MIS Basic</b></td>').appendTo(thisEle.parent().find('.promotionAvailableData .promoTable'));
                        }
                        for(var j=0;j<sessionPromotions[i]["MBC Basic"].length;j++){
                            var eligibleDiscount = parseFloat(sessionPromotions[i]["MBC Basic"][j].Discount);
                            var speedData = sessionPromotions[i]["MBC Basic"][j].Speed;
                            if("undefined" != typeof speedData && speedData != null && speedData != "" && speedData.indexOf(",")>-1){
                                 speedData = speedData.replace(/,/g, ", ");
                            }
                            $('<tr>').html(
                            '<td><div class="promotionSpeeds" id="'+thisEle.parent().attr('id')+'_Speed'+[j]+'">'+speedData+'</div></td><td class="promotionPercentage"  id="'+thisEle.parent().attr('id')+'_Discount'+[j]+'">Save '+eligibleDiscount+'%</td>').appendTo(thisEle.parent().find('.promotionAvailableData .promoTable'));
                            }
                     }
                     if (undefined != sessionPromotions[i]["MBC Plus"] )
                     { 
                        if ( '{!isAVPN}' == 'false' )
                        {
                            $('<tr style="line-height:14px;">').html(
                            '<td><b>MIS Plus</b></td>').appendTo(thisEle.parent().find('.promotionAvailableData .promoTable'));
                        }
                         for(var j=0;j<sessionPromotions[i]["MBC Plus"].length;j++){
                            var eligibleDiscount = parseFloat(sessionPromotions[i]["MBC Plus"][j].Discount);
                            var speedData = sessionPromotions[i]["MBC Plus"][j].Speed;
                            if("undefined" != typeof speedData && speedData != null && speedData != "" && speedData.indexOf(",")>-1){
                                 speedData = speedData.replace(/,/g, ", ");
                            }
                            $('<tr>').html(
                            '<td><div class="promotionSpeeds" id="'+thisEle.parent().attr('id')+'_Speed'+[j]+'">'+speedData+'</div></td><td class="promotionPercentage"  id="'+thisEle.parent().attr('id')+'_Discount'+[j]+'">Save '+eligibleDiscount+'%</td>').appendTo(thisEle.parent().find('.promotionAvailableData .promoTable'));
                        }
                      }  
                }
                else if(thisEle.parent().attr('id') == 'Select_IP_Flexible_Reach_Plan_PromoTag'){                   
                    if(sessionPromotions[i].PLAN["PLANA"] != undefined){
                        var eligibleDiscount = parseFloat(sessionPromotions[i].PLAN["PLANA"]);
                        $('<tr>').html(
                        '<td class="promotionPlan" id="'+thisEle.parent().attr('id')+'_Speed">PLAN A</td><td class="promotionPercentage" style="float:right;" id="'+thisEle.parent().attr('id')+'_Discount">Save '+eligibleDiscount+'%</td>').appendTo(thisEle.parent().find('.promotionAvailableData .promoTable'));
                    }
                    if(sessionPromotions[i].PLAN["PLANB"] != undefined){
                        var eligibleDiscount = parseFloat(sessionPromotions[i].PLAN["PLANB"]);
                        $('<tr>').html(
                        '<td class="promotionPlan" id="'+thisEle.parent().attr('id')+'_Speed">PLAN B</td><td class="promotionPercentage" style="float:right;" id="'+thisEle.parent().attr('id')+'_Discount">Save '+eligibleDiscount+'%</td>').appendTo(thisEle.parent().find('.promotionAvailableData .promoTable'));
                    }
                    if(sessionPromotions[i].PLAN["PLANC"] != undefined){
                        var eligibleDiscount = parseFloat(sessionPromotions[i].PLAN["PLANC"]);
                        $('<tr>').html(
                        '<td class="promotionPlan" id="'+thisEle.parent().attr('id')+'_Speed">PLAN C</td><td class="promotionPercentage" style="float:right;" id="'+thisEle.parent().attr('id')+'_Discount">Save '+eligibleDiscount+'%</td>').appendTo(thisEle.parent().find('.promotionAvailableData .promoTable'));
                    }
                }else if(thisEle.parent().attr('id') == 'Additional_DNS_PromoTag'){
                    console.log('sessionPromotions[i]  '+JSON.stringify(sessionPromotions[i]));
                    if(sessionPromotions[i].DNS["Primary"] != undefined){                   
                        $('<tr style="line-height:14px;">').html(
                        '<td><b>Primary</b></td>').appendTo(thisEle.parent().find('.promotionAvailableData .promoTable'));
                        var inputObj = sessionPromotions[i].DNS["Primary"];
                        for(var objIndex = 0; objIndex<inputObj.length;objIndex++){
                            if((inputObj[objIndex]).toString() != null && (inputObj[objIndex]).toString() != 'undefined'){          
                                inputString = (inputObj[objIndex]).toString();
                                var inputStringArray = inputString.split(':');
                                var discountName = inputStringArray[0];   
                                var eligibleDiscount = parseFloat(inputStringArray[1]);
                                $('<tr>').html(
                                    '<td><div class="promotionSpeeds" id="'+thisEle.parent().attr('id')+'_Primary'+[j]+'">'+discountName+'</div></td><td class="promotionPercentage"  id="'+thisEle.parent().attr('id')+'_Discount'+[j]+'">Save '+eligibleDiscount+'%</td>').appendTo(thisEle.parent().find('.promotionAvailableData .promoTable'));
                                }
                        }
                    }
                    if(sessionPromotions[i].DNS["Secondary"] != undefined){
                        //var eligibleDiscount = parseFloat(sessionPromotions[i].DNS["Secondary"]);
                        $('<tr style="line-height:14px;">').html(
                        '<td><b>Secondary</b></td>').appendTo(thisEle.parent().find('.promotionAvailableData .promoTable'));
                        var inputObj = sessionPromotions[i].DNS["Secondary"];
                        for(var objIndex = 0; objIndex<inputObj.length;objIndex++){
                            if((inputObj[objIndex]).toString() != null && (inputObj[objIndex]).toString() != 'undefined'){          
                                inputString = (inputObj[objIndex]).toString();
                                var inputStringArray = inputString.split(':');
                                var discountName = inputStringArray[0];   
                                var eligibleDiscount = parseFloat(inputStringArray[1]);
                                $('<tr>').html(
                                    '<td><div class="promotionSpeeds" id="'+thisEle.parent().attr('id')+'_Secondary'+[j]+'">'+discountName+'</div></td><td class="promotionPercentage"  id="'+thisEle.parent().attr('id')+'_Discount'+[j]+'">Save '+eligibleDiscount+'%</td>').appendTo(thisEle.parent().find('.promotionAvailableData .promoTable'));
                                }
                        }
                    }
                }else{
                    var discount = [];
                    var discountName = [];
                    var inputString ='';
                    var inputObj=[];
                    if(thisEle.parent().attr('id') == 'IPFLEX_PromoTag'){
                        inputObj = sessionPromotions[i].IPFLEX.Discount;
                        var discountNameStr = [];
                        var discountPertStr = [];
                        for(var objIndex = 0; objIndex<inputObj.length;objIndex++){
                            if((inputObj[objIndex]).toString() != null && (inputObj[objIndex]).toString() != 'undefined'){          
                                inputString = (inputObj[objIndex]).toString();
                                var inputStringArray = inputString.split(':');
                                discountNameStr.push(inputStringArray[0]);
                                discountPertStr.push(inputStringArray[1]);                              
                            }
                        }   
                        discountName = discountNameStr;
                        discount = discountPertStr;                        
                    }else if(thisEle.parent().attr('id') == 'CoS_PromoTag'){
                        inputObj = sessionPromotions[i].COS.Discount;
                        var discountNameStr = [];
                        var discountPertStr = [];
                        for(var objIndex = 0; objIndex<inputObj.length;objIndex++){
                            if((inputObj[objIndex]).toString() != null && (inputObj[objIndex]).toString() != 'undefined'){          
                                inputString = (inputObj[objIndex]).toString();
                                var inputStringArray = inputString.split(':');
                                discountNameStr.push(inputStringArray[0]);
                                discountPertStr.push(inputStringArray[1]);                              
                            }
                        }   
                        discountName = discountNameStr;
                        discount = discountPertStr;  
                    }else if(thisEle.parent().attr('id') == 'VLAN_PromoTag'){
                        inputObj = sessionPromotions[i].VLAN.Discount;
                        var discountNameStr = [];
                        var discountPertStr = [];
                        for(var objIndex = 0; objIndex<inputObj.length;objIndex++){
                            if((inputObj[objIndex]).toString() != null && (inputObj[objIndex]).toString() != 'undefined'){          
                                inputString = (inputObj[objIndex]).toString();
                                var inputStringArray = inputString.split(':');
                                discountNameStr.push(inputStringArray[0]);
                                discountPertStr.push(inputStringArray[1]);                              
                            }
                        }   
                        discountName = discountNameStr;
                        discount = discountPertStr;  
                    }else if(thisEle.parent().attr('id') == 'UBB_PromoTag'){
                        discount = sessionPromotions[i].UBB.Discount;
                    }else if(thisEle.parent().attr('id') == 'PLUS_PromoTag'){
                        discount = sessionPromotions[i].PLUS.Discount;
                    }/*else if(thisEle.parent().attr('id') == 'Minimum_Bandwidth_Commitment_MBC_PromoTag'){
                        discount = sessionPromotions[i].MBC.Discount;
                    }*/else if(thisEle.parent().attr('id') == 'Installation_Option_PromoTag'){
                        discount = sessionPromotions[i]["One Time"].Discount;
                    }else if(thisEle.parent().attr('id') == 'How_many_New_Virtual_Phone_Numbers?_PromoTag'){
                        discount = sessionPromotions[i]["Virtual Phone"].Discount;
                    }else if(thisEle.parent().attr('id') == 'Select_Enhanced_Features_PromoTag'){
                        discount = sessionPromotions[i]["Enhanced Features"].Discount;
                    }
                    for(var i=0;i<discount.length;i++){
                        var eligibleDiscount = parseFloat(discount[i]);
                        $('<tr>').html(
                        '<td><div class="featurePromotionName" id="'+thisEle.parent().attr('id')+'_Speed'+[j]+'">'+discountName[i]+'</div></td><td class="promotionPercentage" id="'+thisEle.parent().attr('id')+'_Discount'+[i]+'">Save '+eligibleDiscount+'%</td>').appendTo(thisEle.parent().find('.promotionAvailableData .promoTable'));
                    }                    
                }
            }
        }
                                                    
    }
    </script>
    
    <div class="modal fade" id="EditPhoneModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" data-backdrop="static">
        <apex:form id="EditPhoneOverlay" >
            <div class="modal-dialog modal-lg" style="margin-top:200px">
                <div class="modal-content">
                    <div class="modal-header ITPA-custom-header"> <button type="button" id="closeBtnForEditModal" class="close" style="margin-top: -25px;margin-right: 0px;" data-dismiss="modal" onclick="clearITPACheckBox();disableApplyConfigurationLink(false);managedRouterFunctionality(true);removingComafromIPFlexPhoneNumbers();removePrivateLineIfVLANChecked();"><span aria-hidden="true">&times;</span></button>
                        <h1 class="modal-title" style="font-family: omnes_light;color: #000000;font-weight: bold;font-size: 30px !important;" id="myModalLabel">Landline Phone Number Required</h1>
                    </div>
                    <div class="modal-body ITPA-custom-body" style="height: 210px;">
                        A current landline phone number (not wireless) is required for AT&amp;T IP Flexible Reach Service. Add a number, edit the one below, or confirm that the number shown is correct and <strong style="font-weight: bold;"> Save &amp; Check Service Availability</strong> for IP Flexible Reach Service.
                        <div><br/><br/><label style="display:block;font-weight: bold;" class="control-label m-b-10">Landline Phone Number</label>
                            
                            <div class="col-xs-12 p0">
                                <apex:inputText value="{!selectedSitePhone}" styleClass="phoneNumId" label="Phone Number" style="width:400px" onkeyup="checkPhone(this);" /> 
                                <input type="button" id="checkServiceAvailabilityBtn" value="Save & Check Service Availability" class="btn-primary addressMatchbtn" 
                                       onclick="updateSiteForITPA(this);" data-dismiss="modal"  style="float:right;width: 300px !important" />
                            </div>
                            <div class="displayPhoneError col-xs-8 p0 m-t-10"></div>
                        </div>
                    </div>
                </div>
                <script>
                if(($('.phoneNumId').val()=='') ){
                    $('#checkServiceAvailabilityBtn').addClass('disablethebtn');
                }
                else if( (!$.isNumeric($('.phoneNumId').val())) || ($('.phoneNumId').val().length != 10)){
                    $('#checkServiceAvailabilityBtn').addClass('disablethebtn');
                    $(".displayPhoneError").html("Phone number must be 10 digits and numerical.");
                }
                </script>
            </div>
            <apex:actionFunction name="initiateITPA" action="{!initiateITPAService}" reRender="initiateITPABtnId"  onComplete="callIPFlexService();" ></apex:actionFunction>  
            <apex:actionFunction name="initiateCall" action="{!initiateITPAServiceCall}" reRender="jsFunctions"> </apex:actionFunction>
            <apex:actionFunction name="startITPAPollingFn"  action="{!startITPAPolling}" rerender="jsFunctions, numberSuccessModalForm,svcUnAvailableModalForm " oncomplete="checkPollingStatusITPA()"  > </apex:actionFunction>                  
        </apex:form>
    </div>

    <div class="modal fade" id="numberSuccessModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" data-backdrop="static">
        <apex:form id="numberSuccessModalForm">
            <div class="modal-dialog modal-lg" style="margin-top:200px">
                <div class="modal-content">
                    <div class="modal-header ITPA-custom-header">
                        <h1 class="modal-title" style="color: #027A3D;font-family: omnes_att_iimedium;line-height: 36px;font-size:32px !important;padding-right:200px !important" id="myModalLabel">AT&amp;T IP Flexible Reach Service is available for this number.</h1></div>
                    <div class="modal-body ITPA-custom-body" style="height: 175px;">However, if you want to change the number, enter a new number and <strong style="font-weight: bold;">Resubmit.</strong> If this number is the intended one,<strong style="font-weight: bold;"> Confirm </strong>to continue.
                        <div><br/><label style="display:block;font-weight: bold;" class="control-label m-b-10">Landline Phone Number</label>
                            <div class="col-xs-12 p0"><apex:inputText value="{!selectedSitePhone}" styleClass="col-md-5 phoneTextSuccessModal" label="Phone Number" onkeyup="checkPhone(this);isPhoneChange(this);" style="padding-left:10px !important"/>
                                <input type="button"  value="Confirm" class="col-md-2 p0 btn-primary addressMatchbtn" 
                                       onClick="confirmITPA()" oncomplete="CheckAndDisableIpflexFields();" data-dismiss="modal" id="confirmBtn" style="float:right"/>
                                <input type="button"  value="Resubmit" class="col-md-2 p0 btn-primary addressMatchbtn" 
                                       onclick="updateSiteForITPAResubmit(this);"   id="resubmitBtn" disabled="true" data-dismiss="modal" style="float:right;margin:0 10px;"/>
                                <input type="button"  value="Restore" class="col-md-2 p0 btn-primary addressMatchbtn" 
                                       onclick="restoreFunc();" disabled="true" id="restoreBtn"  style="float:right"/>
                            </div>
                            <div class="displayPhoneError col-xs-8 p0 m-t-10"></div>
                        </div>
                    </div>
                </div>
            </div>
            <apex:actionFunction name="initiateITPAResubmit" action="{!initiateITPAService}" reRender="jsFunctions, initiateITPABtnId" onComplete="callIPFlexServiceResubmit();"  ></apex:actionFunction>  
            <apex:actionFunction name="initiateCallResubmit" action="{!initiateITPAServiceCall}" reRender="jsFunctions"> </apex:actionFunction>
            <apex:actionFunction name="startITPAPollingFnResubmit" action="{!startITPAPolling}" rerender="jsFunctions, svcUnAvailableModalForm " oncomplete="checkPollingStatusITPAResubmit()"  > </apex:actionFunction>  
            <apex:actionFunction name="commitITPABackend" action="{!handleIPFlexAvailability}" rerender="configuresiteForm,PageBlockSelectSite,IglooCallProcessingId,rightSectionContent" oncomplete="removeAndAddPrivateLineOnLoad();managedRouterFunctionality(true);scrollToWindowPos();changeinterfaceonapplyandget();CheckAndDisableIpflexFields();removingComafromIPFlexPhoneNumbers();AVPNAutoCheck(false);MISAutoCheck(false);ReadIPFlexibleReachPlan();toggleIpflexPhoneNumber('.ipFlexPlanClass');removePrivateLineIfVLANChecked();updateFooterOffset(true);validateAndEnableHiCapFlexCheckBox();updateIglooBorderHeight();" status="loading"> </apex:actionFunction>  
            <apex:actionFunction name="hideIPFlexSection" action="{!removeIPFlexService}" rerender="configuresiteForm,PageBlockSelectSite,IglooCallProcessingId,rightSectionContent" oncomplete="removeAndAddPrivateLineOnLoad();managedRouterFunctionality(true);scrollToWindowPos();changeinterfaceonapplyandget();removingComafromIPFlexPhoneNumbers();AVPNAutoCheck(false);MISAutoCheck(false);ReadIPFlexibleReachPlan();toggleIpflexPhoneNumber('.ipFlexPlanClass'); validateFormAndEnableApply(null,'on');removePrivateLineIfVLANChecked();updateFooterOffset(false);validateAndEnableHiCapFlexCheckBox();updateIglooBorderHeight();" status="loading"> </apex:actionFunction>  
        </apex:form>
    </div>

    <div class="modal fade" id="svcUnAvailableModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" data-backdrop="static">
        <apex:form id="svcUnAvailableModalForm">
            <div class="modal-dialog modal-lg" style="margin-top:200px">
                <div class="modal-content">
                    <div class="modal-header ITPA-custom-header" style="padding-right:100px !important"> <button type="button" class="close" style="margin-right: -90px;margin-top: -25px;"  data-dismiss="modal" id="closeBtnServiceUn" onclick="clearITPACheckBox();disableApplyConfigurationLink(false);managedRouterFunctionality(true);removingComafromIPFlexPhoneNumbers();"><span aria-hidden="true">&times;</span></button>
                        <h1 class="modal-title" style="color: #CC212B ;font-size: 32px;font-family: omnes_att_iimedium;line-height: 36px;" id="myModalLabel">AT&amp;T IP Flexible Reach Service is not available for this number.</h1> </div>
                    <div class="modal-body ITPA-custom-body" style="height: 190px;">You can edit the number and resubmit for validation or close (X) to proceed without AT&amp;T IP Flexible Reach Service.
                        <div><br/><br/><label style="display:block;font-weight: bold;" class="control-label m-b-10">Landline Phone Number</label>
                            <div class="col-xs-12 p0"><apex:inputText value="{!selectedSitePhone}" label="Phone Number" id="svcUnAvailableModalTextBox" styleClass="testStyle svcUnAvailableModalTextBoxClass" style="width:400px" onkeyup="checkPhone(this);isPhoneSame(this);"/>
                                <input type="button" id="svcUnAvailableResubmitBtn" value="Resubmit" class="col-md-4 p0 btn-primary addressMatchbtn" 
                                       onclick="disableCrossBtn();updateSiteForITPAResubmitFail(this);" style="float:right" rerender="jsFunctions"/>
                            </div>      
                            <div class="displayPhoneError col-xs-10 p0 m-t-10"></div>
                        </div>
                    </div>
                </div>
            </div>
            <apex:actionFunction name="initiateITPAResubmitFail" action="{!initiateITPAService}" reRender="jsFunctions, initiateITPABtnId" onComplete="callIPFlexServiceResubmitFail();"  ></apex:actionFunction>  
            <apex:actionFunction name="initiateCallResubmitFail" action="{!initiateITPAServiceCall}" reRender="jsFunctions"> </apex:actionFunction>
            <apex:actionFunction name="startITPAPollingFnResubmitFail" action="{!startITPAPolling}" rerender="jsFunctions, numberSuccessModalForm" oncomplete="checkPollingStatusITPAResubmitFail()"  > </apex:actionFunction>  
            <apex:actionFunction name="callperformRateRefresh" action="{!performRateRefresh}" rerender="BatchPanel" onComplete="isBatchCompleted();" status="loading" />
            <apex:actionFunction name="checkBatchStatus" action="{!rateRefreshBatchStatus}" rerender="BatchPanel" onComplete="isBatchCompleted();" status="loading" />
            <apex:actionFunction id="callPerformPromotionUpdate" name="callPerformPromotionUpdate" action="{!callDPERateRefresh}" status="loading">
            </apex:actionFunction>
        </apex:form>
    </div>
    
    <!-- Rate Card Update Modal-->
    <div class="modal fade" id="RatecardUpdateModal" role="dialog" data-backdrop="static">
        <div class="modal-dialog" style="width:700px;">                      
            <div class="modal-content" style="margin-top: 25%;text-align:center;">
                <h3 class="modal-header">New Rates</h3>  
                <div class="modal-body" style="padding: 25px 25px !important;border-top:2px solid #d1d1d1;">
                    <div>Effective {!$Label.Effective_Rate_Card_Date}, rate cards have been updated for this product. </div>
                    <div>Click <b>Okay</b> to apply the current rates.</div><br/>
                    <div>Please note: Special pricing applied prior to the rate refresh will be removed.</div>
                    <div>You may resubmit for approval, if needed.</div><br/>
                    <div>You can view the updated rate card on the product page.</div>
                </div>
                <div class="modal-footer" style="padding: 10px 25px 40px;">
                    <button type="button" class="btn--primary" data-dismiss="modal" aria-hidden="true" style="width: 115px;padding: 8px 10px !important;" onClick="$('#RatecardUpdateModal').modal('hide');callperformRateRefresh();">Okay</button>
                </div>
            </div>
        </div>
    </div>

    <!-- DPE Price Update Modal-->
    <div class="modal fade" id="DPERatecardUpdateModal" role="dialog" data-backdrop="static">
        <div class="modal-dialog" style="width:700px;">                      
            <div class="modal-content" style="margin-top: 25%;text-align:center;">
                <h3 class="modal-header">New Rates</h3>  
                <div class="modal-body" style="padding: 25px 25px !important;border-top:2px solid #d1d1d1;">
                    <div>Effective {!$Label.Effective_Rate_Card_Date}, rate cards have been updated for this product. </div>
                    <div>Click <b>Okay</b> to apply the current rates.</div><br/>
                    <div>Please note: Special pricing applied prior to the rate refresh will be removed.</div>
                    <div>You may resubmit for approval, if needed.</div><br/>
                    <div>You can view the updated rate card on the product page.</div>
                </div>
                <div class="modal-footer" style="padding: 10px 25px 40px;">
                    <button type="button" class="btn--primary" data-dismiss="modal" aria-hidden="true" style="width: 115px;padding: 5px 10px !important;" onClick="$('#DPERatecardUpdateModal').modal('hide');callPerformPromotionUpdate();">Okay</button>
                </div>
            </div>
        </div>
    </div> 

    <!-- DPE Price Update Modal2 -->
    <div class="modal fade DPERatecardUpdateModal1" id="DPERatecardUpdateModal1" tabindex="-1" role="dialog" aria-hidden="true" data-keyboard="false" data-backdrop="static">
        <div class="modal-dialog">
            <div class="modal-content col-xs-12">
                <apex:outputPanel rendered="{!(isAVPN || isMIS)}">
                    <div class="modal-body">
                        <p>
                            {!$Label.CONFIRM_REG_TEXT1}
                        </p>
                        <p>
                            {!$Label.CONFIRM_REG_TEXT2}
                        </p>
                        <p>
                            {!$Label.CONFIRM_REG_TEXT3}
                        </p>
                    </div>
                    <div class="modal-footer text-center">
                        <div class="pull-right p0 m0">                                                                 
                        <button type="button" class="btn--primary" data-dismiss="modal" aria-hidden="true" style="width: 115px;padding: 5px 10px !important;" onClick="$('#DPERatecardUpdateModal').modal('hide');callPerformPromotionUpdate();">Okay</button>
                        </div>
                    </div>
                </apex:outputPanel>
            </div>
        </div>
    </div>    
    
    <!-- Out-of-region Switched Ethernet Modal-->
    <div class="modal fade" id="OORSEExpiredModal" role="dialog" data-backdrop="static">
        <div class="modal-dialog">                      
            <div class="modal-content" style="margin-top: 25%;text-align:center;">
                <h3 class="modal-header">Configuration Expired</h3>  
                <div class="modal-body" style="padding: 25px 25px !important;border-top:2px solid #d1d1d1;">
                    <div>Configurations for out-of-region switched ethernet sites</div>
                    <div>expire at 90 days. Please resubmit your configuration, and</div>
                    <div>if applicable, request special pricing again. Thank you.</div>
                </div>
                <div class="modal-footer" style="padding: 10px 25px 40px;">
                    <button type="button" class="btn" data-dismiss="modal" aria-hidden="true" style="width: 115px;padding: 8px 10px !important;" onClick="$('#OORSEExpiredModal').removeClass('in');">Close</button>
                </div>
            </div>
        </div>
    </div>   
    
    <div class="modal fade" id="ErrorConfirmModal" tabindex="-1" role="dialog" aria-hidden="true" data-keyboard="false" data-backdrop="static">
        <div class="modal-dialog iglooCallErrorMsgModal">
            <div class="modal-content iglooCallErrorMsgModal">
                <div class="modal-body iglooCallErrorMsgModal">                
                    <p>We are experiencing a problem processing your validation, please try again later.</p>
                    <div id="okayBtn">
                        <button type="button" class="btn btn-primary okay" data-dismiss="modal" onclick="clearITPACheckBox();disableApplyConfigurationLink(false);managedRouterFunctionality(true);removingComafromIPFlexPhoneNumbers();" styleClass="selectAllClass" >Okay</button>
                    </div>
                </div>   
            </div>
        </div>
    </div> 
    
    <div class="modal fade" id="thresholdPopUp" tabindex="-1" role="dialog" aria-hidden="true" data-keyboard="false" data-backdrop="static">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-body ">
                    <div id="okayBtn">
                        <button type="button" class="btn btn-primary okay"
                                data-dismiss="modal"
                                styleClass="selectAllClass">Okay</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <apex:outputPanel id="BatchPanel">
        <script>
            function isBatchCompleted(){
                var pollingvar = '{!doBatchPolling}';
                if (pollingvar == 'true') {
                    checkBatchStatus();
                }else{
                    location.reload();
                }
            } 
        </script>
    </apex:outputPanel>    
    <script>
    $(".testStyle").focus(function() {
        $('#textDiv').find('input, button').removeAttr('disabled');
    });
    
    function ITPAOverlay(inpObj) {
        $("[id$=acceptBtn]").prop('disabled',true);
        $('[id$=IglooPortSpeed]').val('false');
        $('[id$=IglooAccessSpeed]').val('false');
        $('[id$=IglooInterfaceTypeFlag]').val('false');
        if(inpObj.checked){
            ITPAModal();
        }
        else{
            hideIPFlexSection();
        }   
    }
    
    function clearITPACheckBox() {
        var checkboxCount = '';
        if ( productName == 'AT&T Virtual Private Network' ){
            checkboxCount = 2;
        }
        else {
            checkboxCount = 3; 
        }
        for (var i = 0; i < checkboxCount; i++) {
            var trElemId = 'container' + [i];
            var currElementTr = document.getElementById(trElemId);
            if (typeof currElementTr != 'undefined') {
                var innerTds = currElementTr.getElementsByTagName("td");
                var selectElem = innerTds[1].getElementsByTagName("input");
                selectElem[0].checked = false;
                selectElem[0].disabled = false;
            }
        }
    }
    
    function checkPhone(form) {
        var reg = /^[0-9]*$/;
        if (form.value == "") {
            $(".displayPhoneError").html("Phone number must be 10 digits and numerical.");
            document.getElementById("checkServiceAvailabilityBtn").disabled = true;
            document.getElementById("resubmitBtn").disabled = true;
            document.getElementById("svcUnAvailableResubmitBtn").disabled = true;
            
        }else if (!reg.test(form.value)) {
            $(".displayPhoneError").html("Phone number must be 10 digits and numerical.");
            document.getElementById("checkServiceAvailabilityBtn").disabled = true;
            document.getElementById("svcUnAvailableResubmitBtn").disabled = true;
            document.getElementById("resubmitBtn").disabled = true;
            
        }else if (form.value.length != 10) {
            $(".displayPhoneError").html("Phone number must be 10 digits and numerical.");
            document.getElementById("checkServiceAvailabilityBtn").disabled = true;
            document.getElementById("svcUnAvailableResubmitBtn").disabled = true;
            document.getElementById("resubmitBtn").disabled = true;
        }else {
            $(".displayPhoneError").html("");
            document.getElementById("checkServiceAvailabilityBtn").disabled = false;
            document.getElementById("svcUnAvailableResubmitBtn").disabled = false;
            document.getElementById("resubmitBtn").disabled = false;
            $('#checkServiceAvailabilityBtn').removeClass('disablethebtn');
        }
    }
    function checkPhoneOnLoad(phoneNo) {
        var reg = /^[0-9]*$/;
        if (phoneNo == "") {
            $(".displayPhoneError").html("Phone number must be 10 digits and numerical.");
            document.getElementById("checkServiceAvailabilityBtn").disabled = true;
            document.getElementById("resubmitBtn").disabled = true;
            document.getElementById("svcUnAvailableResubmitBtn").disabled = true;
            
        }
        else if (phoneNo.toString().length != 10) {
            $(".displayPhoneError").html("Phone number must be 10 digits and numerical.");
            document.getElementById("checkServiceAvailabilityBtn").disabled = true;
            document.getElementById("svcUnAvailableResubmitBtn").disabled = true;
            document.getElementById("resubmitBtn").disabled = true;
        }
    }
    var currentTextId;
    var resubmitFailBtn;
    var resubmitBtn;
    
    </script>
    <apex:outputPanel id="jsFunctions">
        <script>
        function disableCheckServiceAval(inpObj) {
            inpObj.disabled = true;
            inpObj.value = 'Processing..';
            document.getElementById("restoreBtn").style.visibility = "hidden";
            document.getElementById("confirmBtn").style.visibility = "hidden";
        }
        
        function callIPFlexService() {
            initiateCall();
            checkPollingStatusITPA();
        }
        
        function updateSiteForITPA(inpObj) {
            $('.phoneNumId').attr('disabled', 'disabled');
            $('.close').not($('#apltConfElisiteID').find('.close')).attr('disabled', 'disabled');
            $('#closeBtnForEditModal').css("display","none");
            inpObj.disabled = true;
            inpObj.value = 'Processing...';
            initiateITPA();
        }
        
        function updateSiteForITPAResubmit(inpObj) {
            inpObj.disabled = true;
            inpObj.value = 'Processing...';
            resubmitBtn=inpObj;
            $('.phoneTextSuccessModal').attr('disabled', 'disabled');
            document.getElementById("restoreBtn").style.visibility = "hidden";
            document.getElementById("confirmBtn").style.visibility = "hidden";
            initiateITPAResubmit();
        }
        
        function callIPFlexServiceResubmit() {
            initiateCallResubmit();
            checkPollingStatusITPAResubmit();
        }
        
        function updateSiteForITPAResubmitFail(inpObj) {
            resubmitFailBtn=inpObj;
            inpObj.disabled = true;
            inpObj.value = 'Processing...';
            $('.svcUnAvailableModalTextBoxClass').attr('disabled', 'disabled');
            $('#closeBtnServiceUn').css("display","none");
            initiateITPAResubmitFail();
        }
        
        function callIPFlexServiceResubmitFail() {
            initiateCallResubmitFail();
            checkPollingStatusITPAResubmitFail();
        }
        
        function isPhoneChange(mNumber) {
            var savedPhone = '{!selectedSitePhone}';
            currentTextId = mNumber;
            var currentPhone = mNumber.value;
            if (savedPhone == currentPhone) {
                document.getElementById("restoreBtn").disabled = true;
                document.getElementById("resubmitBtn").disabled = true;
                document.getElementById("confirmBtn").disabled = false;
            }
            else {
                document.getElementById("confirmBtn").disabled = true;
                document.getElementById("restoreBtn").disabled = false;
            }
        }
        
        function disableCrossBtn() {
            document.getElementById("closeBtnServiceUn").disabled = false;
        }
        
        function restoreFunc() {
            var savedPhone = '{!selectedSitePhone}';
            currentTextId.value = savedPhone;
            document.getElementById("confirmBtn").disabled = false;
            document.getElementById("restoreBtn").disabled = true;
            document.getElementById("resubmitBtn").disabled = true;
            $(".displayPhoneError").html("");
        }
        
        function checkPollingStatusITPAResubmitFail() {
            var pollingvar = '{!doITPAPolling}'.toString();
            if (pollingvar == 'true') {
                startITPAPollingFnResubmitFail();
            }else {
                var itpaResponse = '{!ITPAServiceRespose}'.toString();
                if (itpaResponse == 'true') {
                    $('#svcUnAvailableModal').modal('hide');
                    $('#numberSuccessModal').modal('show');
                }else {
                    var itpaError='{!ITPAError}'.toString();
                    if(itpaError=='true') {
                        $('#svcUnAvailableModal').modal('hide');
                        $('#ErrorConfirmModal').modal('show');
                    }else{
                        resubmitFailBtn.disabled = false;
                        resubmitFailBtn.value = 'Resubmit';
                        $('.svcUnAvailableModalTextBoxClass').removeAttr('disabled');  
                        $('#closeBtnServiceUn').css("display","block");
                    }
                }
            }
        }
        
        function checkPollingStatusITPAResubmit() {
            var pollingvar = '{!doITPAPolling}'.toString();
            if (pollingvar == 'true') {
                startITPAPollingFnResubmit();
            }
            else {
                var itpaResponse = '{!ITPAServiceRespose}'.toString();
                if (itpaResponse == 'true') {
                    resubmitBtn.value='Resubmit';
                    document.getElementById("restoreBtn").style.visibility = "visible";
                    document.getElementById("confirmBtn").style.visibility = "visible";
                    document.getElementById("restoreBtn").disabled = true;
                    document.getElementById("resubmitBtn").disabled = true;
                    document.getElementById('confirmBtn').disabled = false;
                    $('#numberSuccessModal').modal('show');
                    $('.phoneTextSuccessModal').removeAttr('disabled'); 
                }else {
                    var itpaError='{!ITPAError}'.toString();
                    if(itpaError=='true')
                    {
                        $('#numberSuccessModal').modal('hide');
                        $('#ErrorConfirmModal').modal('show');
                    }
                    else
                    {
                        $('#numberSuccessModal').modal('hide');
                        $('#svcUnAvailableModal').modal('show');
                    }
                }
            }
        }
        
        function checkPollingStatusITPA() {
            var pollingvar = '{!doITPAPolling}'.toString();
            if (pollingvar == 'true') {
                startITPAPollingFn();
            }else {
                var itpaResponse = '{!ITPAServiceRespose}'.toString();
                if (itpaResponse == 'true') {
                    $('#EditPhoneModal').modal('hide');
                    $('#numberSuccessModal').modal('show');
                }else {
                    var itpaError='{!ITPAError}'.toString();
                    if(itpaError=='true'){
                        $('#EditPhoneModal').modal('hide');
                        $('#ErrorConfirmModal').modal('show');
                    }else{
                        $('#EditPhoneModal').modal('hide');
                        $('#svcUnAvailableModal').modal('show');
                    }
                }
            }
        }
        function isPhoneSame(pNumber) {
            var savedPhone = '{!selectedSitePhone}';
            currentTextId1 = pNumber;
            var currentPhone = pNumber.value;
            if (savedPhone == currentPhone) {
                document.getElementById("svcUnAvailableResubmitBtn").disabled = true;
                $(".displayPhoneError").html("You have entered the same number which does not have  service available");
            }
        }
        
        function checkIpFlexFields(inpobj){
            var totalPhoneNo = 0;
            for (var i = 12; i < 15; i++) {
                var trElemId = 'container' + [i];
                var currElementTr = document.getElementById(trElemId);
                if (typeof currElementTr != 'undefined') {
                    var innerTds = currElementTr.getElementsByTagName("td");
                    var selectElem = innerTds[1].getElementsByTagName("input");
                    if(!isNaN(selectElem[i].value)){
                        totalPhoneNo += parseInt(selectElem[0].value);
                    }
                }
            }
        }
        
        function confirmITPA(){
            commitITPABackend();
        }
        function invokeIpFlexMethods(){
            if(getFieldReference('0').checked){
                toggleIpflexPhoneNumber('.ipFlexPlanClass');
                ReadIPFlexibleReachPlan();
                removingComafromIPFlexPhoneNumbers();
            }
        }
        function toggleIpflexPhoneNumber(inputObj){
            var selectedValue = $(inputObj).val();
            $('.ipFlexPhoneNumberClass').each(function() {
                if(selectedValue != null && selectedValue=='Plan A'){
                    var currentElement = $(this);
                    var value = currentElement.val();
                    currentElement.val('0');
                    currentElement.attr('disabled','disabled');
                    togglePhoneErrMsg(this,'#portErrDiv');
                }
                else{
                    var currentElement = $(this);
                    currentElement.removeAttr('disabled','disabled');
                }
            }); 
        }
        
        function CheckAndDisableIpflexFields(){
            NumberAvailabilityIndicator = '{!NumberAvailabilityIndicator}';
            NumberPortabilityIndicator = '{!NumberPortabilityIndicator}'; 
            VirtualTNAvailabilityIndicator = '{!VirtualTNAvailabilityIndicator}';     
            var trElemId = 'container'+PortedPhoneNumbers ;
            var currElementTr = document.getElementById(trElemId);
            if (typeof currElementTr != 'undefined') {
                var innerTds = currElementTr.getElementsByTagName("td");
                var selectElem = innerTds[1].getElementsByTagName("input");
                if (typeof selectElem[0] != 'undefined') {
                    if(NumberPortabilityIndicator == 'false' || NumberPortabilityIndicator == 'False' ){
                        selectElem[0].disabled = true;
                        selectElem[0].value = 0;
                    }
                }
                
            }
            
            var trElemId1 = 'container'+NewLocalPhoneNumbers ;
            var currElementTr1 = document.getElementById(trElemId1);
            
            if (typeof currElementTr1 != 'undefined') {
                var innerTds1 = currElementTr1.getElementsByTagName("td");
                var selectElem1 = innerTds1[1].getElementsByTagName("input");
                if (typeof selectElem1[0] != 'undefined') {
                    if(NumberAvailabilityIndicator  == 'false' || NumberAvailabilityIndicator  == 'False' ){
                        selectElem1[0].disabled = true;
                        selectElem1[0].value = 0;
                    }
                }
                
            }
            
            var trElemId2 = 'container'+NewVirtualPhoneNumbers ;
            var currElementTr2 = document.getElementById(trElemId2);
            
            if (typeof currElementTr2 != 'undefined') {
                var innerTds2 = currElementTr2.getElementsByTagName("td");
                var selectElem2 = innerTds2[1].getElementsByTagName("input");
                if (typeof selectElem2[0] != 'undefined') {
                    if(VirtualTNAvailabilityIndicator   == 'false' || VirtualTNAvailabilityIndicator   == 'False' ){
                        selectElem2[0].disabled = true;
                        selectElem2[0].value = 0;
                    }
                }
                
            }
        }
        function ReadIPFlexibleReachPlan(){
            if(IPFlexPlans == "Plan A"){
                $('container'+IPFlexibleReachPlan +'option[value="Plan B"]').remove();
                $('container'+IPFlexibleReachPlan +'option[value="Plan C"]').remove();
            }
        }
        
        function toggleConcurrentErrMsg(inputObj){
            var element = $(inputObj);
            var value = element.val();
            var pattern = new RegExp("^[0-9]*$");
            
            if(value != null && pattern.test(value)==true){
                var intval = Math.abs(parseInt(value, 10));
                if(intval >500 || intval <6){
                    $('#concurrentCallErrDiv').css('display','block');
                    ipFlexErrMsg = true;
                    disableApplyAndGetPrice(true);
                }else{
                    $('#concurrentCallErrDiv').css('display','none');
                    ipFlexErrMsg = false;
                    disableApplyAndGetPrice(false);
                }
            }else{
                $('#concurrentCallErrDiv').css('display','block');
                ipFlexErrMsg = true;
                disableApplyAndGetPrice(true);
            }
        }
        
        function togglePhoneErrMsg(inputObj,fieldLabel){
            var element = $(inputObj);
            var divObj='';
            var value = element.val();
            if(value != null){
                value = value.replace(',','');
            }
            var pattern = new RegExp("^[0-9]*$");
            
            if(value != null && pattern.test(value)==true){
                var intval = Math.abs(parseInt(value, 10));
                if(intval >25000 || intval <0){
                    $(fieldLabel).css('display','block');
                    ipFlexErrMsg = true;
                    disableApplyAndGetPrice(true);
                }else{
                    $(fieldLabel).css('display','none');
                    ipFlexErrMsg = false;
                    disableApplyAndGetPrice(false);
                }
            }else{
                $(fieldLabel).css('display','block');
                ipFlexErrMsg = true;
                disableApplyAndGetPrice(true);
            }
        }
        
        function disableApplyAndGetPrice(isError){
            if(isError){
                document.getElementById("{!$Component.configuresiteForm.applyBtn}").disabled = true;
            }else{
                validateFormAndEnableApply(null,'on');
            }
        }
        </script>
        
        <!-- this fix is specific to the tooltip/popover -->
        <script>
        var originalLeave = $.fn.popover.Constructor.prototype.leave;
        $.fn.popover.Constructor.prototype.leave = function(obj){
            var self = obj instanceof this.constructor ?
                obj : $(obj.currentTarget)[this.type](this.getDelegateOptions()).data('bs.' + this.type)
            var container, timeout;
            
            originalLeave.call(this, obj);siteListPanel
            
            if(obj.currentTarget) {
                container = $(obj.currentTarget).siblings('.popover')
                timeout = self.timeout;
                container.one('mouseenter', function(){
                    clearTimeout(timeout);
                    container.one('mouseleave', function(){
                        $.fn.popover.Constructor.prototype.leave.call(self, self);
                    });
                })
            }
        };
        
        function disableApplyConfigurationLink(flag){
            var ASEProduct = '{!isASE}';
            var isIPFlexChecked = ASEProduct == 'false'?getFieldReference('0').checked:false;
            if(isIPFlexChecked || flag){
                $('.addaddressTrigger').addClass('disableLink');
                $('.addaddressTrigger').removeClass('enableSiteLink');
            }
            else{
                $('.addaddressTrigger').removeClass('disableLink');
                $('.addaddressTrigger').addClass('enableSiteLink');
            }
        }
        
        function updateFooterOffset(flag){
            var leftPanelOffSet=$("#leftPanelContainer").offset().top;
            var leftPanelHeight=$("#leftPanelContainer").height(); 
            var headerHeight=$('#top_nav_bar').height();
            var panelPosition=footerOffSet-leftPanelHeight-leftPanelOffSet;
            if(flag){
                footerOffSet = $('#panelFooter').offset().top+50;
                leftPanelOffSet=$("#leftPanelContainer").offset().top;
            }
            else{
                footerOffSet = $('#panelFooter').offset().top;
                leftPanelOffSet=$("#leftPanelContainer").offset().top;
            }
        }
         
         function removingComafromIPFlexPhoneNumbers(){
             $('.validPhoneNumCls').each(function() {
                 var currentElement = $(this);
                 var value = currentElement.val();
                 res = value.replace(',','');
                 currentElement.val(res);
              }); 
          }
        </script> 
       </apex:outputPanel>
</apex:page>