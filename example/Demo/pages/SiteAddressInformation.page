<apex:page id="siteMgmntPageId" controller="SiteAddressInformationController" standardStylesheets="false" sidebar="false" showHeader="false" cache="false" action="{!doFetchQuoteInfo}">

    <style type="text/css">
    .addressMatchbtn{
        margin: 0px 30px !important;
    }
    .addressUpdateTitle{
        padding-left: 55px;
        padding-top: 10px;
        padding-bottom: 10px;
    }
    .grey_hr{
            background: #ccc;
            border-bottom: 1px solid #ccc;
        }
    .tab-contentAddSite{
        padding: 10px 0px 10px 0px;
        min-height: 472px;
    }
    #clearFormBlock{
        margin: 40px 0;
    }
    .form-control{
        height:30px !important;
    }
    .inputAdd_error{
        height: 18px;
    }
    .inputCity_error{
        height: 18px;
    }
    #siteCity{
        margin-top:18px;
    }
    
        #addedsitescontainer{
            margin-top: 0;
            background: #fff !important;
            height: 395px;
            overflow-y: auto;
            border: 1px solid #ddd;           
        } 
        #addSiteTabs {text-align:center;}
        #addSiteSuccessMsgSpan{
            color:green;
            margin:10px 0;  
            font-weight:bold;
        }
        .modal-header {
            border-bottom: 2px solid #e5e5e5;
        }
        #addInfoDialog,#maxSitesRestrictModal .modal-header, .modal-body {padding: 15px 25px 15px 25px;}
        .addInfoText{font-family: omnes_att_iimedium;font-size:16px;color:#ea7400;margin-bottom: 35px;margin-top: -20px;font-weight:bold;display:none;}
        .modal-footer {
            border-top: 2px solid #e5e5e5;
        }

        .modal{
            background-color: rgba(0, 0, 0, 0.6);
        }
    
       .arrow-right {
            width: 0;
            height: 0;
            border-top: 16px solid transparent;
            border-bottom: 16px solid transparent;
            border-left: 16px solid #eee;
            float: left;
            position: relative;
            right: 17px;
        }
        .button {
            float: left;
            height: 32px;
            width: auto !important;
            line-height: 32px;
            font-weight: bold;
         }
        .siteAddText {
            color: orange !important;
            font-family: omnes_att_iimedium;
            font-size: 20px !important;
            float:right;
            margin-bottom: 40px;
        }
        .messageCell { color: #32cd32; }
            #closeMatch .has-error .control-label {
            color: rgb(51, 51, 51);
         }
        .message.errorM3 {
            margin-top:0px;
        }
        #addaddress {
            z-index: 999;
        }
        .container {
            margin-top: 0;
        }
            .messageCell,
            .errorMsg {
                color: #cc0000;
                font-weight: bold;
            }
            .messageCell h4 {
                color: #cc0000;
                font-weight: normal;
            }
            .container h4,.h4, h5,.h5,h6,.h6 {
                margin-top: 0;
                margin-bottom: 0;
            }
            .tab-pane h4 {
                margin-top: 0;
                margin-bottom: 10px;
                font-weight:600 !important;
            }
            .messageTable tr{
                background:none !important;
            }
            .messageText h4{
                margin-bottom: 0 !important;
                margin-top: 2px !important;                
            }        
            #addSiteTabs {
                border-bottom: 3px solid #056fab;
            }
            #addSiteTabs li {
                width: 25.00% !important;
            }
            #selectExisting {
                background: none;
            }
            #addSite {
                background: none;
            }
            #bulkUpload {
                background: none;
            }
            #retrieveToken {
                background: none;
            }

            .errorDiv {color: #cf2a2a !important;font-weight:bold;height:22px;clear:both;}

            /**** added for Selct product Modal **/
            #oppurtunityModal .modal-body p {
                border-bottom: 1px solid #e5e5e5;
                margin-bottom: 10px;
                padding-bottom: 10px;
            }
            #oppurtunityModal .modal-body label {
                font-family: inherit;
                margin: 0 0 0 10px;
            }
            #oppurtunityModal .modal-body div {
                margin-bottom: 10px;
            }
            #headerFormId label {
                font-size: 18px;
            }
            .panel-group h4 {
                padding: 10px;
                margin: 0;
            }
            .panel-default>.panel-heading {
                background: #fff;
                border-bottom: 1px dashed #ddd;
                padding:0;
            }
            .panel-default {
                border: 0;
                box-shadow: none;
            }
            .listItemSpan{
                display: list-item;
                list-style-type: disc;
                margin-left: 20px;
            }
            .closeMatchLi {
                margin: 10px 0 0 !important;float: left;width: 100%;
            }
            #closeMatch input {
                line-height: 15px;
            }
            #closeMatch label {
                margin-bottom: 5px !important;
            }
            #addSiteTabs .active {
                border-bottom: 1px solid transparent !important;
            }
            li.ng-isolate-scope.active::after {
                content: ' ';
                display: inline;
                width: 0;
                height: 0;
                border-left: 20px solid transparent;
                border-right: 20px solid transparent;
                position: absolute;
                border-top: 14px solid #056fab;
                bottom: -15px;
                left: 40%;
                z-index: 99999;
            }
            .eligibleSitesDataTable {
                width: 100% !important;
                margin-top: -15px;
            }
            .eligibleSitesDataTable thead th:first-child div.reorder_btn {
                display: none;
            }
            #enterAddress .dataTables_info {
                right: 2px;
            }
            #enterAddress .dataTables_paginate {
                float: right;
                margin-left: 20px;
                margin-top: -8px;
            }
            .btn-complete-parent-disabled {
                cursor: not-allowed;
            }
            .selectExistingSiteTable{
                word-break: break-all;
            }
            .addressMatchContainer {
                display: inline;
            }
            #legend { margin-top: 20px; font-size: 12px; }
            
          .nav-tabs>li.active>a, .nav-tabs>li.active>a:hover, .nav-tabs>li.active>a:focus { color: #555; cursor: default; background-color: #056fab; border: 0px; border-bottom-color: transparent; }          
        
        .eligibleSitesSearchButton {
            position: absolute;
            display: inline;
            top: 9px;
            z-index: 9;
        }
        .eligibleSitesSearch {
            margin-top: 10px;
            margin-bottom: 20px;
        }
        .eligibleSitesDataTable thead th:nth-child(1) {
            width: 25px !important;
        }
        .eligibleSitesDataTable thead th:nth-child(2) {
            width: 350px !important;
        }
        .eligibleSitesDataTable thead th:nth-child(3) {
            width: 300px !important;
        }
        .eligibleSitesDataTable thead th:nth-child(4) {
            width: 200px !important;
        }
        .eligibleSitesDataTable thead th:nth-child(5) {
            width: 150px !important;
        }
        .eligibleSitesDataTable thead th:nth-child(6) {
            width: 130px !important;
        }
        .eligibleSitesDataTable thead th:nth-child(7) {
            width: 135px !important;
        }
        .eligibleSitesDataTable thead th:nth-child(8) {
            width: 180px !important;
        }
        .eligibleSitesDataTable .searchField {
            width: 370px !important;margin-top: -8px;margin-bottom: 10px;
        }
    .fade.in{
        display: block !important;
    }
    /* Additional styles to match the wireframes */
    .m-t-20, #manage_content label.m-t-20{
        margin-top: 20px !important;
    }
    #manage_content label.m-b-10{
        margin-bottom: 10px !important;
        margin-left: -16px;
    }

    #manage_content label.m-t-15 {
        margin-top: 15px !important;
    }

    #manage_content label.m-t-10{
        margin-top: 10px !important;
    }
    .m-b-40{
        margin-bottom: 40px;
    }
    #manage_content label.m-r-10{
        margin-right: 10px !important;
    }
    #addSiteTabs li a{
        font-size: 16px;
    }
    #addSiteTabs li.active a  {
        color: #fffefe;
    }
    #addSiteTabs li a {
        color: #0076b4;
    }
    .eligibleSitesSearch{
        margin: 30px 0;
    }
    .eligibleSitesSearchButton{
        top: 29px;
    }
    .eligibleSitesDataTable thead th {
        font-size: 16px;
        color: #0568ad;
        font-weight: normal;
        letter-spacing: 0;
        height: 38px !important;
        max-height: 38px !important;
        padding: 10px 0 0 16px;
    }
    /* Pointer for table headers */
    .eligibleSitesDataTable thead th span.headerLink:hover{
        cursor: pointer;
    }
    /* reorder button styles */
    .eligibleSitesDataTable thead th .reorder_btn{
        top: -20px;
    }
    .eligibleSitesDataTable>tbody>tr>td:nth-child(2) {
        font-size: 16px;
        color: #0568ad;
        font-weight: normal;
        letter-spacing: 0;
        padding-left: 16px;
        letter-spacing: 0;
        cursor: default;
    }
    #EligibleSitesTable_info {
        margin-left: 0;
        padding-top: 0;
    }
    .paginate_button{
        color: #009add;
    }
    input.siteAddressValidateBtn:disabled, input.clearMsg:disabled, input.exportBtn:disabled{
        background-color: #eeeeee !important;
        color: #fff !important;
    }
    .addedSiteName {    
        font-size: 16px;
        color: #333333;
        font-weight: bold;
        vertical-align: top;
    }
    span.addedSiteInfo{
        font-size: 14px;
        color: #333333;
    }
    select.inputLocation, select.inputState{
        height: 34px;
    }
    span.listItemSpan{
        margin-bottom: 10px;
    }
    table.eligibleSitesDataTable>thead>tr>th{
        padding-bottom:0;
    }
    #addSite .addNewValidateAddBtn{
        margin-right: 0;
    }

    .arrow-right.addNewSiteArrow {
        float: right;
        right: 0;
        margin-left:-2px;
    }    
    
    .arrow-right.bulkUploadArrow {
        float: right;
        right: 0;
    }

    #bulkUpload .bulkUploadSiteAdd:hover{
        cursor: default;
    }
    /* Fix for Firefox specific issue */
    @-moz-document url-prefix() { 
        .inputState, .inputLocation {
            padding-top:2px !important;
        }
    }
    .messageText{display: flex;}
    .headerErrorMsg .messageCell{background: #f7f7f7;}
    .headerErrorMsg .messageText{margin:0 !important;}
    #EligibleSitesTable:indeterminate {
      opacity: 0.5;
    }
    .addSiteLocation{
        color:#555; 
        padding:6px 8px; 
        height:34px;
        width: 100%;
    }
    .addSiteState{
        color:#555; 
        padding:6px 8px;
        width: 100%;
    }
    #addSite .form-group{
        margin-bottom:0px !important;
    }
    #inputName_error{
        height: 18px !important;
    }
    .emailChkBoxSection{
        padding:40px 0 0 0 !important;
    }
    .inputPadding{
        padding: 3px 12px 5px 12px !important;
    }
    /* End Additional styles */
    div#siteAddressBtnAction .btn-secondary{
        min-width: 175px;
        width: auto;
        height: 40px;
        color: #595959 !important;
        background: #ffffff !important;
        border: 1px solid #595959;
        border-radius: 4px;
        padding: 0 15px;
        text-align: center;
        margin-right: 25px;
    }
    .clear_form { 
    border:1px solid #595959 !important; 
    color: #595959 !important
    }
    div#siteAddressBtnAction .btn-primary{
        min-width: 175px;
        width: auto !important;
        height: 40px;
        color: #ffffff !important;
        background: #0568ad !important;
        border: 1px solid #0568ad;
        border-radius: 4px;
        padding: 0 15px;
        text-align: center;
    }
    div#retrieveTokenActionBlock .btn-primary{
        min-width: 175px;
        width: auto;
        height: 40px;
        color: #ffffff !important;
        background: #0568ad !important;
        border: 1px solid #0568ad;
        border-radius: 4px;
        padding: 0 15px;
        text-align: center;
        font-size: 16px;
        margin-top: 34px;
    }
    div#retrieveTokenBlock{
        margin-top: 16px;
    }
    div#siteAddressBtnAction .btn-primary[disabled]{
        background: #d1d1d1 !important;
        border: 1px solid #d1d1d1;
    }
    .RetrieveButton{
            width: 50%;
            padding-right: 25px;
            padding: 5px 19px !important;
        }
    .tokenDiv{
        padding-right:0px;
        padding-left:0px;
        padding-top:5px;
    }
    .retreiveTokenSiteDetails{
        color:#939393;
        font-weight:bolder;
    }
    .tokenIconImage{
        margin-top: -4px;
        height: 24px;
        width: 24px;
    }
    .tooltip.fade.top.in {
        margin-left: -129px !important;
    }
    div#addedsitescontainer .popover{
        width: 100px; 
        min-width: 100px; 
        height: 50px;
    }
    .popover-title{
        background-color: #fff; 
        border-bottom: 0px solid #fff;
        margin-bottom: 0px !important;
        font-weight: 700 !important;
        font-family: omnesatt_iiregular;
        font-size : 14px !important;
        padding : 14px !important;
        color: #333333;
    }
    .popover-content{
        padding : 20px !important;
    }
    .popover.right > .arrow {
        margin-left: 0px;
    }
    #addSiteStaticContentOnRetrieve{
        display: none;      
    }
    #addSiteStaticContentOnRetrieve p{
        margin-top:34px;
        margin-bottom: 34px;
        font-size:16px;
        font-family: omnesatt_iiregular;
        color: #333333;
    }
    div.retreiveTokenAddSite{
        margin-bottom: 6px;
    }
    div.retreiveTokenUploadSite{
        margin-top: 162px;
    }
    div.retreiveTokenAddSite .arrow-right{
        width: 0;
        height: 0;
        border-top: 16px solid transparent;
        border-bottom: 16px solid transparent;
        border-left: 16px solid #eee;
        float: left;
        position: relative;
        left: 750px;
    }
    div.retreiveTokenUploadSite .arrow-right{
        width: 0;
        height: 0;
        border-top: 16px solid transparent;
        border-bottom: 16px solid transparent;
        border-left: 16px solid #eee;
        float: left;
        position: relative;
        left: 772px;
    }
    .tokenIconTooltip{
        padding-left: 5px;
    }
    div#retrieveToken_error{
        padding-top:18px;
    }
    div.retrieveToken,div.retrieveTokenSingleSite{
        border: 1px solid #e1e1e1;
        margin-top: -10px;
        margin-left: -1px;
        padding-left: 10px !important;
    }
    div.retrieveToken{
        min-height:462px;
    }
    div.blue_hr_OnRetrieve{
        margin-top: 20px;
    }

     #manage_content div.removeSiteOnDiscardOverlay input.btn-primary{           
            font-family: omnes_att_iimedium !important;
            background-color: #0568ad !important;
            border-color: #0568ad !important;
            height: 40px;
            font-size: 16px;
            text-align: center;
            vertical-align: middle;
            width: 175px !important;
        }
        #manage_content div.removePop input.btn-primary{           
            font-family: omnes_att_iimedium !important;
            background-color: #0568ad !important;
            border-color: #0568ad !important;
            height: 40px;
            font-size: 16px;
            text-align: center;
            vertical-align: middle;
            width: 175px !important;
        }
        #manage_content input.btn-primary[disabled], div.removeSiteOnDiscardOverlay input.btn-primary[disabled]{
            background: #d1d1d1 !important;
            border: 1px solid #d1d1d1;
        }
        .cancelLink{
            float: left;
            padding: 8px 38px 4px 4px;
            font-family: omnes_att_iimedium;
            font-size: 19px;
            color:  #0568ad !important;
        }
        .cancelLink:hover, .goToDashboardLink:hover{
            color:  #70c4e8 !important;
        }
        div.removeSiteOnDiscardOverlay p{
            font-family: omnes_att_iimedium;
            font-size: 26px !important;
            line-height: 0.8em;
            font-weight: 500;
        }
        div.removePop p{
            font-family: omnes_att_iimedium;
            font-size: 26px !important;
            line-height: 1.2em;
        }
        #successMsgSection{
            margin: 32px 0 !important;
        }
        .tableDataSection .table>tbody>tr>td.putDollarSign{
            font-size: 16px;
            text-align: right;
            white-space: nowrap;
        }
        .tableDataSection .table>tbody>tr>td.highlightPriceUpdate{
            font-size: 16px;
            white-space: nowrap;
            background: #ea740070 !important;
        }
        span.listPrice{
            text-decoration-line: line-through;
            color: #00000087;
        }
        .pricingSummary{
            padding-top: 10px;
        }
        .dropDivider{
            color:#595959;
            border-top: 1px solid #939393;
        }
        div.removeSiteOnDiscardOverlay .modal-body{
            padding: 7px 36px;
            white-space: nowrap;
        }
        div.removePop .modal-body{
            position: relative !important;
            padding: 0 32px !important;
            padding-bottom: 4px !important;
        }
        div.removeSiteOnDiscardOverlay .modal-header{
            border: 0;
            padding-top: 0px !important;
            width: 950px;
            margin: 0px 0px 4px 0px;
        }
        div.removePop .modal-header{
            border: 0;
            padding-top: 9px;
            width: 750px;
        }
        div.removeSiteOnDiscardOverlay button.close{
            background:none;
            margin-right: 35px;
        }
        div.removeSiteOnDiscardOverlay .modal-footer{
            padding: 8px 35px 37px 0;
        }
        div.removePop .modal-footer{
            padding: 20px 35px 40px 0;
        }
        .sitesDataTable {
            width: 100% !important;
            font-family: omnes_att_iimedium;
        }
        div.removeSiteOnDiscardOverlay .modal-content{
            top: 200px;
            width: 950px;
            right: 160px;
        }
        div.removePop .modal-content{
            top: 200px;
            width: 750px;
            right: 100px;
        }
        .table.subTotalSummary{
            margin-bottom: 8px !important;
            margin-top: 20px;
        }
        
        .promotionAppliedData{
            display:none;
            background: #fff;
            border: 1px solid #ccc;
            padding: 10px;
            margin-left: 10px;
            margin-bottom: 24px;
        }
        .promotionAppliedData h5{
            margin-bottom: 10px;
        }
        table.promoTable td:first-child{           
            width:200px !important;
            max-width: 200px;
            text-overflow: ellipsis;
            overflow: hidden;
            padding: 0 0px;
        }
        
        table.promoTable td:nth-child(2){
            color: #ea7400 !important;
        }
        
        table.promoTable td:last-child{
            color: red !important;
            font-size: 10px;
            padding: 5px 10px;
            vertical-align: top;
        }
        
        table.promoTable td{
            padding: 2px 0px;
            white-space: nowrap;
            font-size: 14px;
            line-height: 1.2em;
            font-family: omnes_light;
            background: #fff;
            font-weight: 700 !important;
        }
        .additionalDiscount{
            color:#ea7200;          
        }
        div.promotionAppliedData h5{
            font-family: omnes_att_iimedium;
            font-size: 18px;
        }
        span.quoteSummaryTitle{
            font-size: 28px !important;
            font-weight: 700;
            font-family: omnes_light;
        }
        .grey_hr{
            border-bottom:1px solid #000;
            height: 1px;
            background: #000;
            margin-left: 10px;
            margin-bottom: -11px;
            margin-top: 8px;
        }
        .pricingSummarydiv{
            margin-top: 15px;
            padding: 0;
            margin-bottom: -55px;
        }
        .registerQuote{
            border:1px solid #939393 !important;
            border-right:none !important;
            width: 138px !important;
            border-top-right-radius: 0 !important;
            border-bottom-right-radius: 0 !important;
            padding: 7px 12px !important;
            color: #fff !important;" 
            margin-right: -4px;
        }
        
        .dropdownStyling{
                font-size: 18px;
        }
        .continueButton{
            font-family: omnes_att_iimedium !important;
            background-color: #0568ad !important;
            border-color: #0568ad !important;
            height: 40px;
            font-size: 16px;
            text-align: center;
            vertical-align: middle;
            width: 175px !important;
            color: white;
        }
        #addSiteTabs li.disabled a:hover{
            border:none !important;
        }
    div#bulkUpload a.downloadtemplatehover:hover{
             background-color: #70c4e8 !important;
             border-color: #70c4e8 !important; 
             color: #ffffff !important;
        }
    div#bulkUpload a.downloadtemplatehover{
             background-color: #0568ad !important;
             border-color: #70c4e8 !important; 
             color: #ffffff !important;
        }
    div#bulkUpload a:hover{
             color: #70c4e8 !important;
        }
    div#bulkUpload .a{
            color:#0568ad !important;
        }
    div#retrieveTokenMultiUpload{
        white-space: nowrap;
        font-family: omnes_att_iimedium;
    }
    div#retrieveTokenMultiUpload li,div#retrieveTokenMultiUpload li:hover{
        width: 100%;
        background: none;
        text-decoration:none;
        pointer-events: none;
        list-style: none;
        counter-increment: foo;
        color: #333333;
        line-height: 1.5em;
    }
    div#retrieveTokenMultiUpload li a{
        display: inline;
        pointer-events: auto !important;
        padding-left: 10px;
        color: #0568ad !important;
    }
    div#retrieveTokenMultiUpload li::before {
        content: counter(foo) ":";
        padding-right: 2px;
    }
    #retrieveTokenMulti{
        padding-top: 20px;
    }
    .custom-file-input{
        width: 150px;
        margin-top:10px;
    }
    div#retrieveToken label.fileName{
        vertical-align: middle;
        padding-top: 14px;
        padding-left: 20px;
        font-weight: normal;
    }
    div.uploadRetreiveBlock{
        white-space: nowrap;
        position: absolute;
        margin-top: 50px;
    }
    a#backToRetrieveTokenLink{
        pointer-events: visible;
        cursor: pointer;
        float: right;
        padding-top: 4px;
        margin-right: 25px;
        font-family: omnes_att_iimedium;
        font-size: 16px;
        color: #0568ad !important;
    }
    div#retrieveTokenMulti a#retreiveMultipleTokenLink{
        pointer-events: visible;
        cursor: pointer;
        font-family: omnes_att_iimedium;
        font-size: 16px;
        color: #0568ad !important;
    }
    
    div#retrieveTokenMulti a#retreiveMultipleTokenLink:hover, a#backToRetrieveTokenLink:hover{
        pointer-events: visible;
        cursor: pointer;
        font-family: omnes_att_iimedium;
        font-size: 16px;
        color: #70c4e8 !important;
    }
        table.validationErrorTabl_scroll>thead>tr, table.validationErrorTabl_scroll>tbody>tr{
        display:table;
        width:100%;
        table-layout:fixed;
    }
    table.validationErrorTabl_scroll>thead, table.validationErrorTabl_scroll>tbody{
        display:block;
        border-bottom: 1px dashed #ddd !important;
    }
    table.validationErrorTabl_scroll>tbody{
        overflow-x:hidden;
        overflow-y:scroll;
        height:320px;
    } 
    table.validationErrorTabl_scroll_moz>tbody{
        overflow-x:hidden;
        overflow-y:scroll;
        height:316px;
    }
    table.validationErrorTabl_scroll>thead>tr>th:first-child{
        width: 40px !important;
        border-left-style: none !important;
    }
    table.validationErrorTabl_scroll_moz>thead>tr>th:first-child{
        width: 43px !important;
        border-left-style: none !important;
    }
    table.validationErrorTabl_scroll>tbody>tr>td:first-child{
        width: 43px !important;
        border-left-style: none !important;
    }
    table.validationErrorTabl_scroll_moz>tbody>tr>td:first-child{
        width: 45px !important;
        border-left-style: none !important;
    }
    span.retrieveSuccessMsg{
        color: #007a3d;
        font-family: omnes_light;
        font-weight: bold;
    }
    div.retrieveSuccessMsgDiv{
        margin-top:18px;
    }
    .addSitetoQuotestyle{ 
        padding-top:270px;
    }

    </style>
    <div class="container" style="padding: 0;">
        <apex:outputPanel rendered="{!!isReviewAddress}">
        <div class="col-xs-12 p0">
            <apex:form id="headerFormId">               
                <apex:outputPanel rendered="{!checkServErr}" >
                    <div class="headerErrorMsg">
                        <apex:pageMessages />
                    </div><br/>
                </apex:outputPanel>
                <div class="row m0">
                    <div class="col-xs-12 col-md-12 p0">
                        <h3 style="font-size: 21px !important;">{!quote.End_Customer__r.Name}</h3>
                        <div class="row m0 p0 m-t-20 m-b-40">
                            <div class="col-xs-3 p0">
                                <label class = "m-r-10" >Quote Name</label>{!quote.Apttus_Proposal__Proposal_Name__c}</div>
                            <div class="col-xs-3 p0">
                                <label class = "m-r-10" >Quote ID</label>{!quote.Name}</div>
                            <div class="col-xs-4 p0">
                                <label class = "m-r-10" style="padding-right: 10px;">Product</label>{!quote.Product_New_Name__c}</div>
                            <div class="p0" style="text-align:right;">
                                <label class = "m-r-10" style="padding-left: 5%;" >Term</label>{!quote.Apttus_Proposal__Payment_Term__c}</div>
                        </div>
                    </div>
                </div>
                <div class="col-xs-12 m-t-10 p0"><hr class="blue_hr"/>
                    <div id="addSiteStaticContent">
                        <p class="m-t-20 m-b-10" style="font-size:16px;font-family: omnesatt_iiregular;color: black;">Create your site list for the quote, then validate and check availability. If multiple sites are being processed, you can let processing go on while you do something else and we will notify you when processing is complete. Just check the box: <strong>Email me when address processing is complete.</strong></p>
                        <p class="m-b-20" style="font-size:16px;font-family: omnes_att_iimedium;color: #ea7400;font-weight:bold;"><strong>There cannot be more than {!$Label.BulkUploadLimit} total sites in a single quote. No combination of selected existing , new add and upload sites can total more than {!$Label.BulkUploadLimit} sites.</strong></p>
                        <div class="addInfoText">
                            <p>Please provide additional address information such as Structure/Level/Unit in the Location text field if applicable.<span id="moreElipses">...<a style="color:#056FAB;cursor:pointer;" onclick="$('#moreAddInfoText').css('display','block');$('#moreElipses').hide()">Read More </a></span></p>
                            <div id="moreAddInfoText" style="display:none;">Some of the examples:
                                <p>If Building A, Floor 2 and Apt 301, enter A/2/301</p>
                                <p>If Floor 2 and Apt 301, enter /2/301</p>
                                <p>If Only Apt 301, enter //301</p>
                            </div>
                        </div>
                    </div>
                    <div id="addSiteStaticContentOnRetrieve">
                        <p>Create your site list for the quote, then validate and check availability.</p>
                    </div>
                </div>
                <apex:outputPanel rendered="{!displayNoSiteAdded}">
                    <script>
                        if($('#addSiteTabs .active a').text() != 'Select Existing Site'){
                            $('#vasaITPAErrorModal').addClass('in');
                            disableValidate();
                        } 
               </script>
                    <div class="modal fade" id="vasaITPAErrorModal" role="dialog" data-backdrop="static">
                        <div class="modal-dialog">                      
                            <div class="modal-content" style="margin-top: 25%;text-align:center;">
                                <div class="modal-header"> </div>  
                                <div class="modal-body" style="padding: 10px 25px !important;">
                                    <div>The new site was saved to your Customer Sites list</div>
                                    <div>but has not been added to the quote due to the processing error.</div><br/>
                                    <div>When you are ready to try adding the site to the quote again,</div>
                                    <div>select it from the list on the Select Existing Site tab.</div>
                                </div>
                                <div class="modal-footer" style="padding: 30px 25px 40px;">
                                    <button type="button" class="btn" data-dismiss="modal" aria-hidden="true" style="width: 115px;padding: 8px 10px !important;" onClick="$('#vasaITPAErrorModal').removeClass('in');">Okay</button>
                                </div>
                            </div>
                        </div>
                    </div>                  
                </apex:outputPanel>           
                <div class="modal fade" id="addInfoDialog" role="dialog" data-backdrop="static">
                    <div class="modal-dialog">
                        <div class="modal-content" style="margin-top: 25%">
                            <div class="modal-header" style="border-bottom: 1px solid #c0c0c0 !important;">
                                <h3 class="modal-title">Additional Address Information</h3>
                            </div>
                            <div class="modal-body">
                                <div>Please provide additional address information such as Structure/Level/Unit in the Location text field if applicable.</div>
                                <br/><p>Some of the examples:</p>
                                <p>If Building A, Floor 2 and Apt 301, enter <strong>A/2/301</strong></p>
                                <p>If Floor 2 and Apt 301, enter <strong>/2/301</strong></p>
                                <p>If Only Apt 301, enter <strong>//301</strong></p>
                            </div>
                            <div class="modal-footer" style="padding: 10px 15px 40px 15px;">
                                <button type="button" class="btn btn-primary" data-dismiss="modal" aria-hidden="true" style="width: 175px;" onClick="updateusersASE()">Okay</button>
                            </div>
                        </div>
                    </div>
                </div>
                <apex:actionFunction name="updateusersASE" action="{!updateusersASE}"  reRender=""/>
            </apex:form>
            <div class="clear"></div>
            <div class="col-xs-9 col-md-9" style="padding-left: 0;">
                <div class="">
                    <div class="col-xs-12" style="padding: 0;">
                        <div class="tabbed_menu p0 m0" style="margin: 0;">
                            <ul class="nav nav-tabs" id="addSiteTabs" role="tablist" ng-class="{'nav-stacked': vertical, 'nav-justified': justified}" ng-transclude="">
                                <li ng-class="{active: active, disabled: disabled}" heading="Select from Existing" class="ng-isolate-scope active">
                                    <a href="#selectExisting" role="tab" data-toggle="tab" ng-click="select()" tab-heading-transclude="" class="ng-binding">Select Existing Site</a>
                                </li>
                                <li ng-class="{active: active, disabled: disabled}" heading="Add A Site" class="ng-isolate-scope" >
                                    <a href="#addSite" id="addNewSiteId" role="tab" data-toggle="tab" ng-click="select()" tab-heading-transclude="" class="ng-binding">Add New Site</a>
                                </li>
                                <li ng-class="{active: active, disabled: disabled}" heading="Bulk Upload" class="bulkUploadTab {!IF(checkDiscard == true,'disabled','ng-isolate-scope')}">
                                    <a href="#bulkUpload" role="tab" data-toggle="tab" ng-click="select()" tab-heading-transclude="" class="ng-binding">Upload Sites List</a>
                                </li>
                                <li ng-class="{active: active, disabled: disabled}" heading="Retrieve Site Token" class="ng-isolate-scope">
                                    <a href="#retrieveToken" role="tab" data-toggle="tab" ng-click="select()" tab-heading-transclude="" class="ng-binding">Retrieve Site Token</a>
                                </li> 
                            </ul>

                            <div class="tab-content tab-contentAddSite" >
                                <div id="selectExisting" class="tab-pane ng-scope active" ng-repeat="tab in tabs" ng-class="{active: tab.active}" tab-content-transclude="tab" style="margin-top: 10px;">
                                    <div class="row m0 ng-scope">
                                        <div class="col-xs-12 p0">
                                            <div class="row m0" id="search">
                                                <div class="col-xs-12 p0">
                                                    <div class="input-group col-xs-4 p0">
                                                    <div class="eligibleSitesSearchButton search_button"></div>
                                                    <input type="text" class="eligibleSitesSearch custom_filter" placeholder="Search by Site Name or Address" />
                                                    </div>
                                                </div>  
                                           </div>                            
                                       </div>
                                        <div class="row p0 m0">
                                            <apex:form styleClass="form-horizontal" id="form1">
                                                <apex:pageBlock >
                                                    <div class="col-md-12" style="padding: 0;">

                                                        <table id="EligibleSitesTable" class="eligibleSitesDataTable table table-bordered table-striped table-hover">
                                                            <thead>
                                                                <tr>
                                                                    <th>&nbsp;</th>
                                                                    <!--<th><input type="checkbox" name="selectAllAddress" id="selectAllAddress" value="" class="selectAllChkbox"/></th>-->
                                                                    <th><span class="headerLink">Site Name</span></th>
                                                                    <th><span class="headerLink">Site Address</span></th>
                                                                    <th><span class="headerLink">Location</span></th>
                                                                    <th><span class="headerLink">City</span></th>
                                                                    <th><span class="headerLink">State</span></th>
                                                                    <th><span class="headerLink">Zip</span></th>
                                                                    <th><span class="headerLink">Phone</span></th>
                                                                </tr>
                                                            </thead>
                                                            <tbody class="selectExistingSiteTable">
                                                            </tbody>
                                                        </table>
                                                    </div>
                                                    <div class="col-xs-12 emailChkBoxSection">
                                                        <p style="font-size: 16px;padding: 0px;color: black;white-space:nowrap;float:right;">Email me when address processing is complete</p>
                                                        <input type="checkbox" name="EmailTo" value="" id="selectSiteTabCheckBox" onclick="EmailFlagChecked(this);" style="float:right;" />
                                                    </div>
                                                    <div class="col-md-12" style="margin-top:40px;">
                                                        <a class="arrow-right m-b-10 pull-right" style="right:-11px;"></a>
                                                        <input type="button" class="btn btn-primary col-md-4 p0 pull-right siteAddressValidateBtn" 
                                                        style="padding: 7px 20px !important; border-top-right-radius: 0px !important;border-bottom-right-radius: 0px !important;margin-right: -11px;" value="Add Selected Sites to Quote" onclick="callSelectSite();" />
                                                                                                                
                                                    </div>
                                                </apex:pageblock>
                                                <apex:actionFunction status="loading" name="selectSiteExecute" action="{!doSitesSelection}" 
                                                    reRender="form-2,form4,form3,form1,headerFormId" oncomplete="duplicateSiteCheck();" >
                                                    <apex:param name="selectedCustomerIds" value="" />
                                                </apex:actionFunction>
                                                <apex:actionFunction status="loading" name="selectSiteForAIAExecute" action="{!doMultipleSitesSelectionForAIA}"  reRender="form4,form3,form1,form6" oncomplete="checkAIAPageMsg();pageRefreshed();callEligibleSitesDataTable('loadDefault');">
                                                     <apex:param name="selectedCustomerIds" value="" />
                                                </apex:actionFunction>
                                                <apex:actionFunction name="doConfigureVasa" action="{!doConfigure}" status="loading"  rerender="form4,form-2,headerFormId,resetErrFlag,form-bulk-input2" oncomplete="pageRefreshed();callEligibleSitesDataTable('loadDefault');" />
                                                <apex:outputPanel id="resetErrFlag">
                                                    <script>
                                                        vasaITPAErr = {!checkServErr};
                                                    </script>
                                                </apex:outputPanel>
                                                <script>
                                                    duplicateSiteErr = {!checkServErr};
                                                    function duplicateSiteCheck(){
                                                        if(duplicateSiteErr){
                                                            chkValArr=[]; 
                                                            pageRefreshed();
                                                            callEligibleSitesDataTable('loadDefault');
                                                        }else{
                                                            callDoConfigure();                                                       
                                                        }
                                                    }
                                                </script>
                                            </apex:form>
                                        </div>
                                    </div>
                                </div>
                                <!-- end ngRepeat: tab in tabs -->
                                <!-- ngRepeat: tab in tabs -->
                                <div id="addSite" class="tab-pane ng-scope" ng-repeat="tab in tabs" ng-class="{active: tab.active}" tab-content-transclude="tab">
                                    <div class="col-md-12 m-t-0 p0 ng-scope">
                                        <apex:form styleClass="form form-2" id="form-2">
                                            <apex:outputPanel id="addSiteSuccessMsg" rendered="{!addSiteSuccess}" >
                                                <div class="messageText" >
                                                    <span id="addSiteSuccessMsgSpan" >The new site was added successfully.
                                                    </span>
                                                </div>
                                            </apex:outputPanel>
                                            <div class="col-xs-12 col-md-6" style="padding-left:0;">
                                                <div class="form-group" id="siteNameAddSite">
                                                    <label class = "m-t-20 m-b-10">Site Name</label>
                                                    <apex:inputField value="{!CustomerSite.Site_Name__c}" styleClass="form-control inputName required" html-maxlength="30" html-placeholder="Site Name"  />
                                                    <div id="inputName_error" class="errorDiv">&nbsp;</div>
                                                </div>
                                                <div class="form-group" id="siteAddress">
                                                    <label class="m-b-10">Address</label>
                                                    <div class="requiredInput">
                                                        <div class="requiredBlock"></div>
                                                        <apex:inputText label="Address Line" value="{!addressLine}" styleClass="form-control inputAdd required inputPadding" html-placeholder="Address Line" />
                                                        <div id="inputAdd_error" class="errorDiv">&nbsp;</div>
                                                    </div>
                                                </div>
                                                
                                                <!--<div class="form-group" id="siteLoc">
                                                    <label class="m-b-10" style="width:100%;">Location (Optional)</label>
                                                    <div class="col-xs-8" style="margin-left:-15px">
                                                        <div class="">                                                            
                                                            <apex:selectList value="{!location}" label="Location" multiselect="false" size="1" styleClass="form-control styled-select-small addSiteLocation" onchange="onchangeLocationPicListFun(this,'main')">
                                                                <apex:selectOptions value="{!LocationPicklist}" />
                                                            </apex:selectList>
                                                        </div>
                                                    </div>
                                                    <div class="col-xs-4" id="siteRoom">
                                                        <apex:inputField styleclass="form-control pull-right" html-placeholder="#" value="{!customerSite.RoomBuildingFloorInput__c}" />
                                                    </div>
                                                </div>-->
                                                <div class="form-group row m0" id="siteLoc">
                                                    <div class="pull-left" style="width: 60%; padding-right: 15px;">
                                                        <label class="m-b-10">Location (Optional)</label>
                                                        <div class="">
                                                            <apex:selectList value="{!location}" label="Location" multiselect="false" size="1" styleClass="form-control styled-select-small addSiteLocation inputPadding" onchange="onchangeLocationPicListFun(this,'main')">
                                                                <apex:selectOptions value="{!LocationPicklist}" />
                                                            </apex:selectList>
                                                        </div>
                                                    </div>
                                                    <div id="siteRoom" class="pull-left" style="width: 40%; padding-left: 15px;">
                                                        <label class="m-b-10">&nbsp;</label>
                                                        <apex:inputField styleclass="form-control pull-right" html-placeholder="#" value="{!customerSite.RoomBuildingFloorInput__c}" />
                                                    </div>
                                                </div>
                                                
                                                
                                                 <div class="form-group" id="siteCity">
                                                    <label class="m-b-10">City</label>
                                                    <apex:inputField value="{!CustomerSite.City__c}" styleClass="form-control inputCity required inputPadding" html-placeholder="City" />
                                                    <div id="inputCity_error" class="errorDiv">&nbsp;</div>
                                                </div>
                                                <!-- Robyn 1/26/16: modify columns and update inlines styles on select list -->
                                                <div class="form-group row m0" id="siteStateZip">
                                                    <div class="pull-left" style="width: 60%; padding-right: 15px;">
                                                        <label class=" m-b-10">State</label>
                                                        <div class="requiredInput">
                                                            <div class="requiredBlock"></div>
                                                            <apex:selectList value="{!state}" label="State" multiselect="false" id="statePickList" size="1" styleClass="form-control inputState required styled-select-small addSiteState">
                                                                <apex:selectOptions value="{!statePickList}" />
                                                            </apex:selectList>
                                                        </div>
                                                        <div id="inputState_error" class="errorDiv">&nbsp;</div>
                                                    </div>
                                                    <div class="pull-left" style="width: 40%; padding-left: 15px;">
                                                        <label class="m-b-10">{!$Label.ZIP}</label>
                                                        <apex:inputField value="{!CustomerSite.Zip_Code__c}" styleClass="form-control inputZip required inputPadding" html-placeholder="Zip Code" />
                                                    </div>
                                                </div>
                                                <!-- End Robyn 1/26/16 -->
                                            </div>
                                            <div class="col-xs-12 col-md-6" style="padding-right:0px;padding-left:0px;padding-top:5px;">                      
                                                <div class="form-group" id="sitePhone">
                                                    <label class = "m-t-15 m-b-10">Phone Number (Optional)</label>
                                                    <apex:inputField value="{!customerSite.Phone__c}" styleClass="form-control inputPhone inputPadding" html-placeholder="Optional" required="false" />
                                                </div>
                                            </div>
                                            <div class="col-xs-12 col-md-12 emailChkBoxSection">
                                                <p style="font-size: 16px;padding: 0px;color: black;white-space:nowrap;float:right;">Email me when address processing is complete</p>
                                                <input type="checkbox" name="EmailTo" value="" id="addNewSiteTabCheckBox" onclick="EmailFlagChecked(this);" style="float:right;" />
                                            </div>                                            
                                            <div class="col-xs-12 col-md-12 p0" id="clearFormBlock">
                                                <div class="btn-complete-parent btn-complete-parent-disabled">
                                                    <div class="arrow-right addNewSiteArrow"></div>
                                                    <input type="button" value="Add Site to Quote" 
                                                           onclick="{!IF(isAIASelected == true,'validateSiteForAIAExecute();','callValidateSiteExecute();')}" 
                                                           class="btn btn-primary pull-right completeBtn addNewValidateAddBtn col-md-3" style="padding: 7px 20px !important;"/>
                                                    <apex:actionFunction name="validateSiteExecute" status="loading" action="{!doValidate}" 
                                                                         rerender="form-2,closeMatchTable,form3,form1,addedsites,form6" 
                                                                         oncomplete="callDoConfigure();$( '#clearBtn' ).trigger( 'click' );">
                                                    </apex:actionFunction>                                                          
                                                    
                                                    <apex:actionFunction name="validateSiteForAIAExecute" status="loading" 
                                                                         action="{!doSitesSelectionForAIA}" 
                                                                         rerender="form-2,closeMatchTable,form3,form1,addedsites,form6" oncomplete="pageRefreshed();callEligibleSitesDataTable('loadDefault');checkAIAPageMsg();">
                                                    </apex:actionFunction>
                                                    <script>
                                                    function checkStatus(){
                                                        if('{!quote.Product_New_Name__c}' == 'AT&T Switched Ethernet Service'){
                                                            checkPollingStatusASE();
                                                        }else{
                                                         doRequest();
                                                            }                                                        
                                                        
                                                    }
                                                    
                                                    function checkRetrigger(){
                                                        checkRetriggerEvent();
                                                    }
                                                    function checkRetriggerSecond(){
                                                        checkRetriggerEventSecond();
                                                    }
                                                    function checkRetriggerThird(){
                                                        checkRetriggerEventThird();
                                                    }
                                                    function createITSupport(){
                                                        createITSupportTickets();
                                                    }

                                                    var isContinuePollingASE = '{!doPolling}';
                                                    function checkPollingStatusASE() {
                                                        isContinuePollingASE = $('[id$=doPollingASE]').val();
                                                        if (isContinuePollingASE == 'true'){
                                                            startPollingFnASE();
                                                        }else{
                                                            reviewAddress();
                                                        }
                                                    }                                                                                                        
                                                    </script>
                                                </div>
                                                <apex:commandButton id="clearBtn" value="Clear Form" onclick="this.form.reset();initializeFieldValidations_Step3();initializeFieldValidations_ExactMatch();return false;" styleClass="btn-secondary pull-right col-md-2 p0 clear_form" style="border:0;margin-right:20px;"/>                                                        
                                            </div>
                                        </apex:form>
                                        <div class="clear"></div>
                                    </div>
                                    <div class="clear"></div>
                                </div>
                                
                                <div id="retrieveToken" class="tab-pane ng-scope retrieveToken" ng-repeat="tab in tabs" ng-class="{active: tab.active}" tab-content-transclude="tab">
                                    <div ng-app='RetrieveApp' id="RetrieveAppId" class="row ng-scope">
                                        <div ng-controller="RetrieveController" class="col-md-12 m-t-0" style="margin-bottom: 33px;"> 
                                            <apex:form styleClass="form form-2" id="form-9">
                                            <apex:outputPanel id="SuccessMessage" rendered="{!retrieveBulkSuccessFlag}">
                                                 <div class="retrieveSuccessMsgDiv" ><span class="retrieveSuccessMsg">{!$Label.RETRIEVE_SUCCESS_MSG}</span></div>
                                                 <script>
                                                        $('.addSitetoQuotestyle').css('padding-top','346px');
                                                        $('.btn-complete-parent-disabled').css('cursor','default');
                                                 </script>
                                              </apex:outputPanel> 
                                                <apex:inputHidden value="{!showRelatedSites}" id="showRelatedSites"/>
                                                <apex:inputHidden value="{!tokenBulkBatchPolling}" id="tokenBulkBatchPolling"/>
                                                <apex:inputHidden value="{!retrieveTokenOffline}" id="retrieveTokenOffline"/>
                                                <apex:outputPanel id="testId" rendered="{!IF(retrieveBulkErrorFlag == false && retrieveBulkSuccessFlag == false,true,false)}">
                                                    <div class="col-xs-12 col-md-6" style="padding-right:10px;">
                                                        <div class="form-group" id="retrieveTokenBlock">
                                                            <label style="margin-bottom:6px !important;">Token ID</label>
                                                            <apex:inputText value="{!userInputToken}" id="tokenIdInput" styleClass="form-control inputName required tokenIdInput" maxlength="15" html-placeholder="Token ID"  />
                                                            <apex:outputPanel id="errorPanel" rendered="{!IF(retreiveTokenErrorMsg != '' && showRelatedSites == false,true,false)}">
                                                                <div id="retrieveToken_error" class="errorDiv">{!retreiveTokenErrorMsg}</div>
                                                            </apex:outputPanel>
                                                        </div>
                                                        <div class="form-group" id="retrieveTokenMulti">
                                                            <apex:outputPanel id="retreiveMultipleTokenPanel" rendered="{!!showRelatedSites}" >
                                                                <a id="retreiveMultipleTokenLink" name="retreiveMultipleTokenLink" onclick="showUploadMultipleRetrieve('true');" style="pointer-events:visible;cursor: pointer;">{!$Label.RETRIEVE_MULTI_TOKEN_LB}</a>
                                                                <apex:actionFunction status="loading" name="showUploadMultipleRetrieveAction" action="{!renderMultiTokenUpload}" rerender="form-9" oncomplete="callRetrieve();removeSigleSiteSpace();">
                                                                <apex:param name="showBulk" value="" />
                                                            </apex:actionFunction>
                                                            <script>$('.btn-complete-parent-disabled').css('cursor','default');</script>
                                                            </apex:outputPanel>
                                                        </div>
                                                        <apex:outputPanel id="retrieveMultiPanel" rendered="{!IF(retrieveBulkTokenFlag == true && showRelatedSites == false, true, false)}" styleClass="p0 m0">
                                                            <div class="form-group" id="retrieveTokenMultiUpload">
                                                                <ol>
                                                                    <li>
                                                                        <span>
                                                                        {!$Label.RETRIEVE_MULTI_P1}
                                                                            <apex:outputLink value="{!strRetrieveTokenDocUrl}" id="retrieveTemplateLink" target="_blank" styleClass="" >{!$Label.DOWNLOAD_TEMPLATE}</apex:outputLink>
                                                                        </span>
                                                                    </li>
                                                                    <li>
                                                                        <span>{!$Label.RETRIEVE_MULTI_P2}</span>
                                                                    </li>
                                                                </ol>
                                                            </div>
                                                            <div class="uploadRetreiveBlock">
                                                                <input type="file" name="retreiveMultiExcelFile" accept=".xlsx" onchange="processFileForParsing(this, this.files,'uploadToken')" required="true" class="retreiveMultiExcelFile" style="background: none !important; width: auto; float: left; text-align: left !important;display:none;"></input>
                                                                <input type="button" name="upload" value="Browse" class="btn-default custom-file-input"/>
                                                                <label class="fileName">No file selected</label>
                                                                <div class="errorBlock">
                                                                    <apex:outputPanel id="retrieveBulkError" style="display:none;padding-top:10px;" styleClass="errorText">
                                                                        {!$Label.RETRIEVE_LIMIT_ERR_MSG}
                                                                    </apex:outputPanel>
                                                                </div>
                                                                <apex:inputTextArea value="{!retrieveExcelBody}" id="retrieveMultipleTokenExcel" style="display:none;" />
                                                            </div>
                                                        </apex:outputPanel>
                                                    </div>
                                                    <div class="col-xs-12 col-md-6 p0 m0 pull-right" id="retrieveTokenActionBlock">
                                                        <div class="form-group">
                                                            <!--<label class = "m-t-20 m-b-10">&nbsp;</label>-->
                                                            <apex:commandButton id="retrieveTokenBtn" value="Retrieve Token" styleClass="btn btn-primary retrieveTokenBtn disableBtn" disabled="true" rerender="form-9,closeMatchTable,form3,form1,addedsites,form6"/> 
                                                            <apex:actionFunction status="loading" name="retrieveSiteTokenAction" action="{!retrieveSiteToken}" 
                                                                reRender="form-9,closeMatchTable,form3,form1,addedsites,form6" oncomplete="initializeFieldValidations_Step3();callEligibleSitesDataTable('loadDefault');callRetrieve();">
                                                                    <apex:param name="userInputToken" value="{!userInputToken}" assignTo="{!userInputToken}" />
                                                            </apex:actionFunction>
                                                            <!-- Multiple Token -->
                                                            <apex:actionFunction status="loading" name="retrieveMultipleSiteTokenAction" action="{!retrieveMultipleSiteToken}" 
                                                                reRender="form-9,closeMatchTable,form3,form1,addedsites,form6,tokenBulkBatchPolling,retrieveTokenOffline" oncomplete="isBatchCompleted();" >
                                                                    <apex:param name="retrieveExcelBody" value="{!retrieveExcelBody}" assignTo="{!retrieveExcelBody}" />
                                                            </apex:actionFunction>
                                                            <apex:actionFunction status="loading" name="checkBatchStatus" action="{!checkTokenBatchStatus}" 
                                                                rerender="form-9,closeMatchTable,form3,form1,addedsites,form6" oncomplete="isBatchCompleted();initializeFieldValidations_Step3();callEligibleSitesDataTable('loadDefault');callRetrieve();" >
                                                            </apex:actionFunction>
                                                            <apex:actionFunction status="loading" name="redirectToOfflinePageAction" action="{!redirectToOfflinePage}" 
                                                                rerender="form-9,closeMatchTable,form3,form1,addedsites,form6">
                                                            </apex:actionFunction>
                                                            <apex:actionFunction status="loading" name="onRetrieveBatchCompletion" action="{!RefreshBatchpolling}" 
                                                                reRender="form-9,closeMatchTable,form3,form1,addedsites,form6" oncomplete="initializeFieldValidations_Step3();callEligibleSitesDataTable('loadDefault');callDoConfigure();callRetrieve();" >
                                                            </apex:actionFunction>
                                                        </div>
                                                    </div> 
                                                    <apex:outputPanel id="retrieveMultiUploadBtn" rendered="{!IF((retrieveBulkTokenFlag == true || retrieveBulkErrorFlag == true) && showRelatedSites == false, true, false)}" styleClass="p0 m0">
                                                        <div class="col-xs-11 col-md-11 p0 retreiveTokenUploadSite">
                                                            <div class="btn-complete-parent btn-complete-parent-disabled" style="margin:-10px;margin-top:62px;">
                                                                <div class="arrow-right uploadRetreiveSiteArrow"></div>
                                                                <input type="button" value="Upload File to Quote" class="btn btn-primary pull-right completeBtn uploadRetrieveSiteValidateBtn col-md-3 disabled" style="padding: 7px 20px !important;border-top-right-radius: 0px !important;border-bottom-right-radius: 0px !important;"/>
                                                            </div>
                                                        </div>   
                                                    </apex:outputPanel>
                                                    <script>
                                                            $('#retrieveTokenBlock .inputName').bind('blur keyup', function () {
                                                                if($(this).val() != 'undefined' && $(this).val().length>0){
                                                                    $('.retrieveTokenBtn').removeClass('disableBtn');
                                                                    $('.retrieveTokenBtn').prop("disabled",false);
                                                                }
                                                                else{
                                                                    $('.retrieveTokenBtn').addClass('disableBtn');
                                                                    $('.retrieveTokenBtn').prop("disabled",true);
                                                                }
                                                            });
                                                            $('.retrieveTokenBtn').on('click',function(){
                                                                var tokenData = $('[id$=tokenIdInput]').val();
                                                                retrieveSiteTokenAction(tokenData);
                                                                
                                                            });
                                                            $('.uploadRetrieveSiteValidateBtn').on('click',function(){
                                                                var tokenData = $('[id$=retrieveMultipleTokenExcel]').val();
                                                                retrieveMultipleSiteTokenAction(tokenData);
                                                                
                                                            });
                                                            $('.custom-file-input,.fileName').bind('click', function(){
                                                                $(".retreiveMultiExcelFile").val("");
                                                                $('.retreiveMultiExcelFile').click();
                                                            });
                                                    </script>
                                                <!--<apex:pageMessages id="showmsg"></apex:pageMessages>-->
                                                </apex:outputPanel> 
                                                <apex:outputPanel id="retrieveBulkValidationError" rendered="{!retrieveBulkErrorFlag}">
                                                    <div style="padding:10px 15px; color: black;" class="retrieveMultiTokenErr">
                                                        <p style="color:#cc0000;font-weight:700;padding:10px 0px;">{!$Label.RETRIEVE_BULK_ERR_TITLLE}</p>
                                                        <apex:dataTable styleClass="table table-bordered table-striped table-hover tableClass validationErrorTable" id="validationErrorList" value="{!tokenErrorMap}" var="item">
                                                            <apex:column >
                                                                    <apex:facet name="header"><span style="color:#333333">Token ID</span></apex:facet>
                                                                    <apex:outputText title="{!item}" value="{!item}" />
                                                            </apex:column>
                                                            <apex:column >
                                                                    <apex:facet name="header"><span style="color:#333333">Reason</span></apex:facet>
                                                                    <apex:outputText title="{!item}" value="{!tokenErrorMap[item]}" />
                                                            </apex:column>
                                                        </apex:dataTable>
                                                    </div>
                                                    <script>
                                                        $('.addSitetoQuotestyle').css('padding-top','210px');
                                                        $('#backToRetrieveTokenLink').css('margin-top','18px');
                                                        $('.btn-complete-parent-disabled').css('cursor','default');
                                                    </script>
                                                </apex:outputPanel>
                                                <apex:outputPanel id="testId2" rendered="{!showRelatedSites}">
                                                <div class="col-xs-12 col-md-11" style="padding-left: 0px;">
                                                    <div class="col-xs-12 col-md-6">
                                                        <div class="form-group" id="siteNameAddSite">
                                                            <label class = "m-t-20 m-b-10">{!$Label.Site_Name}</label>
                                                            <apex:inputField value="{!retreiveCustomerSite.Site_Name__c}" styleClass="form-control inputName required retreiveTokenSiteName" style="width: 88%;" html-maxlength="30" html-placeholder="Site Name"  />
                                                            <div id="retreiveTokenSiteName_error" class="errorDiv">&nbsp;</div>
                                                        </div>                                                    
                                                        <div class="col-xs-12 col-md-6" style="padding-left:0;">
                                                        </div>
                                                    </div>                                              
                                                </div>  
                                                <div class="col-xs-12 col-md-6">
                                                    <div class="form-group" id="siteAddress">
                                                        <label class="m-b-10">{!$Label.Address}</label>
                                                        <div>
                                                            <apex:outputText styleClass="retreiveTokenSiteDetails" value="{!tokenaddress}" />
                                                        </div>
                                                    </div>
                                                    <div class="form-group" id="locationField">
                                                        <label class="m-b-10">{!$Label.LOCATION_OPTIONAL_LABEL}</label>
                                                        <div>
                                                            <apex:outputText styleClass="retreiveTokenSiteDetails" value="{!tokenlocation}" />
                                                        </div>
                                                    </div>
                                                    <div class="form-group" id="city">
                                                        <label class="m-b-10">{!$Label.City}</label>
                                                        <div>
                                                            <apex:outputText styleClass="retreiveTokenSiteDetails" value="{!tokencity}" />
                                                        </div>
                                                    </div>
                                                    <div class="form-group" id="state">
                                                        <label class="m-b-10">{!$Label.State}</label>
                                                        <div>
                                                            <apex:outputText styleClass="retreiveTokenSiteDetails" value="{!tokenstate}" />
                                                        </div>
                                                    </div>
                                                    <div class="form-group" id="zip">
                                                        <label class="m-b-10">{!$Label.ZIP}</label>
                                                        <div>
                                                            <apex:outputText styleClass="retreiveTokenSiteDetails" value="{!tokenzip}" />
                                                        </div>
                                                    </div>
                                                </div>
                                            
                                                <div class="col-xs-12 col-md-6 pull-right">
                                                    <div class="form-group" id="tokenID">
                                                        <label class="m-b-10">{!$Label.Token_ID}</label>
                                                        <div>
                                                            <apex:outputText styleClass="retreiveTokenSiteDetails" value="{!LEFT(tokenId,15)}" />
                                                        </div>
                                                    </div>
                                                    <div class="form-group" id="portSpeed">
                                                        <label class="m-b-10">{!$Label.Port_Speed}</label>
                                                        <div>
                                                            <apex:outputText styleClass="retreiveTokenSiteDetails" value="{!tokenPortSpeed}" />
                                                        </div>
                                                    </div><div class="form-group" id="accessSpeed">
                                                        <label class="m-b-10">{!$Label.ACCESS_SPEED_LABEL}</label>
                                                        <div>
                                                            <apex:outputText styleClass="retreiveTokenSiteDetails" value="{!tokenAccessSpeed}" />
                                                        </div>
                                                    </div>                                                      
                                                </div>
                                            </apex:outputPanel>
                                                <div class="col-xs-11 col-md-11 p0 retreiveTokenAddSite">
                                                        <div id="addSitetoQuote" class="btn-complete-parent btn-complete-parent-disabled addSitetoQuotestyle">
                                                            <apex:outputPanel id="retrieveSingleTokenButton" rendered="{!IF(retrieveBulkTokenFlag == false || retrieveBulkSuccessFlag == true || showRelatedSites == true ,true,false)}">
                                                                <div class="arrow-right addRetreiveSiteArrow"></div>
                                                                <input type="button" value="Add Site to Quote" 
                                                                   onclick="{!IF(showRelatedSites == true,'callAddSite();','callValidateSiteExecute();')}" 
                                                                   class="btn btn-primary pull-right completeBtn addRetreiveSiteValidateAddBtn col-md-3 disabled" style="padding: 7px 20px !important;border-top-right-radius: 0px !important;border-bottom-right-radius: 0px !important;"/>
                                                            </apex:outputPanel>
                                                            <apex:outputPanel id="retrieveMultiUploadBtnDummy" rendered="{!IF(retrieveBulkErrorFlag == true && showRelatedSites == false, true, false)}" styleClass="p0 m0">
                                                                <div class="arrow-right addRetreiveSiteArrow" style="margin-top:16px;"></div>
                                                                <input type="button" value="Upload File to Quote" 
                                                                   onclick="return false;" 
                                                                   class="btn btn-primary pull-right completeBtn addRetreiveSiteValidateAddBtn col-md-3 disabled" style="padding: 7px 20px !important;border-top-right-radius: 0px !important;border-bottom-right-radius: 0px !important;margin-top:16px;"/>   
                                                            </apex:outputPanel>
                                                            <apex:outputPanel id="backToRetrieveLink" rendered="{!IF(showRelatedSites == true || retrieveBulkErrorFlag == true ||  retrieveBulkSuccessFlag ==true ,true,false)}">
                                                                <a id="backToRetrieveTokenLink" name="backToRetrieveTokenLink" onclick="showUploadMultipleRetrieve('false');">{!$Label.BACK_TO_RETRIEVE}</a>
                                                            </apex:outputPanel> 
                                                           <apex:actionFunction status="loading" name="hideUploadMultipleRetrieveAction" action="{!renderMultiTokenUpload}" rerender="form-9" oncomplete="callRetrieve();">
                                                                <apex:param name="showBulk" value="" />
                                                            </apex:actionFunction>
                                                            <apex:actionFunction status="loading" name="callAddSite" action="{!addTokenSiteToQuote}" 
                                                            reRender="form-9,form-2,form4,form3,form1" oncomplete="duplicateSiteCheck();" >
                                                                <apex:param name="tokenId" value="{!tokenId}" assignTo="{!tokenId}" />
                                                            </apex:actionFunction>
                                                        </div>
                                                </div>
                                              </apex:form>
                                        </div>
                                    </div>
                                </div>
                               
                                <!-- end ngRepeat: tab in tabs -->
                                <div id="bulkUpload" class="tab-pane ng-scope" ng-repeat="tab in tabs" ng-class="{active: tab.active}" tab-content-transclude="tab">
                                    <div ng-app='App' id="bulkSiteApp" class="row ng-scope">
                                        <div ng-controller="PreviewController" style="padding: 10px 20px;">
                                            <p class="m-b-10"><strong>Adding Multiple Addresses Using Our Template</strong>
                                            </p>
                                            <p>
                                                To add multiple sites, download the bulk template. Follow the instructions included in the template. Then upload it. To save the bulk template to your computer as a Microsoft Excel file, click Download Template.
                                            </p>
                                            <p style="margin-top: 20px;">
                                                <apex:outputLink value="{!strDocUrl}" id="theLink" target="_blank" styleClass="btn btn-primary downloadtemplatehover" style="background-color: #0568ad;">Download Template</apex:outputLink>
                                            </p>
                                            <div class="clear"></div>
                                            <p style="margin-top: 20px;">When you upload the template, our system will validate each site.</p>
                                            <section class="p10">
                                                <span>To help validation go smoothly, follow these tips:</span>
                                                <div class="p10">
                                                    <span class="listItemSpan">Use the <a href="https://tools.usps.com/go/ZipLookupAction_input" target="_blank" style="color:#0568ad">USPS Address Validation Tool</a> to validate each address before adding it to your template.</span>
                                                    <span class="listItemSpan">Complete all required fields in the template before you upload it.</span>
                                                    <span class="listItemSpan">Remove unnecessary spaces before and after data in each cell. (For example, our system recognizes "Chicago" but not " Chicago".</span>
                                                    <strong><span class="listItemSpan">Upload only .xlsx files</span></strong>
                                                </div>
                                            </section>
                                            <p style="margin-top: 20px; margin-bottom: 20px;">
                                                <apex:form id="form-bulk-input2">
                                               
                                                 <input type="file" name="excel_file" accept=".xlsx" onchange="processFileForParsing(this, this.files, 'bulkSite')" required="true" Class="pull-left btn m-l-10 bulkUploadSiteAdd" style="background: none !important; float: left; padding: 0 !important; margin: -10px 0 0 0;color: #000 !important;text-align: left !important; padding-right: 62% !important;" rerender= "theTextInput"></input>
                                                  
                                                     <!-- Hidden Inputs -->
                                                <input type="checkbox" ng-model="showPreview" ng-change="showPreviewChanged();" style="display:none;"  ></input>
                                        <apex:inputTextArea value="{!excelBody}" id="theTextInput" style="display:none;" />
                                        <div class="col-xs-12 emailChkBoxSection">
                                            <p style="font-size: 16px;padding: 0px;color: black;white-space:nowrap;float:right;">Email me when address processing is complete</p>
                                            <input type="checkbox" name="EmailTo" value="" id="bulkUploadTabCheckBox" onclick="EmailFlagChecked(this);" style="float:right;" />
                                        </div>
                                        <div class="col-md-12 p0" style="margin-top:40px;">
                                            <div class="arrow-right bulkUploadArrow"></div>
                                            <input type="button" onclick="ReadFileFn();bulkUploadBtnDisabled();" value="Upload File to Quote" class="btn btn-primary col-md-4 p0 siteAddressValidateBtn" style="padding: 7px 20px !important;position: relative;float: right;top: 0;" />
                                        </div>
                                        <apex:actionFunction name="ReadFile" action="{!ReadFile}" status="loading" oncomplete="callDoConfigure()"></apex:actionFunction>
                                        <apex:actionFunction name="ReadFileForAIA" action="{!ReadFileForAIA}" status="loading"> 
                                        </apex:actionFunction>
                                        <apex:outputPanel id="oPRes">
                                                                                   
                                        <script>
                                        var uploadDataType='';
                                        var retrieveBulkTokenEmptyCol=false;
                                         function callDoConfigure(){
                                            if('{!quote.Product_New_Name__c}' == 'AT&T Managed Internet Service' || '{!quote.Product_New_Name__c}' == 'AT&T Virtual Private Network Service'){
                                                doConfigureVasa();
                                            }else if('{!quote.Product_New_Name__c}' == 'AT&T Switched Ethernet Service'){                                                
                                                callEligibleSitesDataTable('loadDefault');
                                                pageRefreshed();
                                            }
                                         }
                                    
                                        function processFileForParsing(obj, obj1,typeOfUpload) {
                                                $('#loading').parent().show();
                                                $('[id$=retrieveMultipleTokenExcel]').val('');
                                                $('[id$=theTextInput]').val('');
                                                setTimeout(function(){$('#loading').parent().hide()},300);
                                                uploadDataType = typeOfUpload;
                                                if(typeOfUpload != null && typeOfUpload == 'uploadToken'){
                                                    $('[id$=retrieveBulkError]').css('display','none');
                                                    var filePath = $(".retreiveMultiExcelFile").val();
                                                    var file = filePath.toLowerCase();
                                                    var extension = file.substring(file.lastIndexOf('.'));
                                                    var allowedExtensions = ['.xlsx', '.xls'];
                                                    if ($.inArray(extension, allowedExtensions) <0) {
                                                        $('[id$=retrieveMultipleTokenExcel]').val('');
                                                        $('#validateRetrieveBulkInvalidModal').modal();
                                                        $('.fileName').text('No File selected');
                                                        enableRetreiveUploadSite(false);
                                                    }
                                                    else{
                                                        angular.element(obj).scope().retrieveFileChanged(obj1);
                                                    }
                                                    var file =  obj1[0];
                                                    if(file != undefined) {
                                                        var fileName = file.name;
                                                        if(fileName.length>0){
                                                            $('.fileName').text(fileName);
                                                        }
                                                        else{
                                                            $('.fileName').text('No file selected');
                                                        }
                                                    }
                                                }
                                                else{
                                                    angular.element(obj).scope().fileChanged(obj1);
                                                }
                                        }
                                 
                                        (function(undefined) {
                                            'use strict';
                                            // Check if dependecies are available.
                                            if (typeof XLSX === 'undefined') {
                                                console.log('xlsx.js is required. Get it from https://github.com/SheetJS/js-xlsx');
                                                return;
                                            }
                                        
                                            if (typeof _ === 'undefined') {
                                                console.log('Lodash.js is required. Get it from http://lodash.com/');
                                                return;
                                            }
                                        
                                            // Baseline setup Establish the root object, `window` in the browser, or `exports` on the server.
                                            var root = this;
                                        
                                            // Save the previous value of the `XLSXReader` variable.
                                            var previousXLSXReader = root.XLSXReader;
                                        
                                            // Create a safe reference to the XLSXReader object for use below.
                                            var XLSXReader = function(file, readCells, handler) {
                                                var obj = {};
                                                XLSXReader.utils.intializeFromFile(obj, file, readCells, handler);
                                                return obj;
                                            };
                                        
                                            // Export the XLSXReader object for **Node.js**, with
                                            // backwards-compatibility for the old `require()` API. If were in
                                            // the browser, add `XLSXReader` as a global object via a string identifier,
                                            // for Closure Compiler 'advanced' mode.
                                            if (typeof exports !== 'undefined') {
                                                if (typeof module !== 'undefined' && module.exports) {
                                                    exports = module.exports = XLSXReader;
                                                }
                                                exports.XLSXReader = XLSXReader;
                                            } else {
                                                root.XLSXReader = XLSXReader;
                                            }
                                        
                                            // Current version.
                                            XLSXReader.VERSION = '0.0.1';
                                        
                                            XLSXReader.utils = {
                                                'intializeFromFile': function(obj, file, readCells, handler) {
                                                    var reader = new FileReader();
                                        
                                                    reader.onload = function(e) {
                                                        var data = e.target.result;
                                                        var workbook = XLSX.read(data, {
                                                            type: 'binary'
                                                        });
                                        
                                                        obj.sheets = XLSXReader.utils.parseWorkbook(workbook, readCells);
                                                        handler(obj);
                                                    };
                                        
                                                    reader.readAsBinaryString(file);
                                                },
                                                'parseWorkbook': function(workbook, readCells) {
                                                    var sheets = {};
                                        
                                                    _.forEachRight(workbook.SheetNames, function(sheetName) {
                                                        var sheet = workbook.Sheets[sheetName];
                                                        sheets[sheetName] = XLSXReader.utils.parseSheet(sheet, readCells, sheetName);
                                                    });
                                        
                                                    return sheets;
                                                },
                                                'parseSheet': function(sheet, readCells, sheetName) {
                                                    var range = XLSX.utils.decode_range(sheet['!ref']);
                                                    var sheetData = [];
                                                    retrieveBulkTokenEmptyCol = false;
                                                    if (readCells === true) {
                                                        _.forEachRight(_.range(range.s.r, range.e.r + 1), function(row) {
                                                            var rowData = [];
                                                            _.forEachRight(_.range(range.s.c, range.e.c + 1), function(column) {
                                                                var cellIndex = XLSX.utils.encode_cell({
                                                                    'c': column,
                                                                    'r': row
                                                                });
                                                                var cell = sheet[cellIndex];
                                                                rowData[column] = cell ? cell.v : undefined;
                                                                if(row>2 && (uploadDataType != null && uploadDataType == 'uploadToken') && (column<2)){
                                                                    if(typeof (rowData[column]) == 'undefined' && retrieveBulkTokenEmptyCol == false){
                                                                        retrieveBulkTokenEmptyCol = true;
                                                                    }
                                                                    else if(typeof (rowData[column]) != 'undefined' && (rowData[column]).trim()=='' &&  retrieveBulkTokenEmptyCol == false){
                                                                        retrieveBulkTokenEmptyCol = true;
                                                                    }
                                                                }
                                                            });
                                                            if(rowData != null && typeof rowData != 'undefined' && rowData.toString().length > 5) 
                                                                sheetData[row] = rowData;
                                                        });
                                                        console.log('@@sheetData after rows are inserted' + sheetData);
                                                    };
                                                    var processedExcelBodyString = '';
                                                    if(sheetData.length > 0) {
                                                        for(var i=0; i < sheetData.length; i++) {
                                                            if(sheetData[i] != null && 'undefined' != typeof (sheetData[i])){
                                                                processedExcelBodyString += sheetData[i].toString() +"~~";
                                                            }
                                                        }
                                                    }
                                                    console.log('@@@processedExcelBodyString1'+processedExcelBodyString);
                                                    console.log('@@sheetData.length: '+sheetData.length+'  uploadDataType'+uploadDataType);
                                                    var sheetDataRowLength = sheetData.length;
                                                    if($('.closeMatchTrigger.addedSiteName').length>0){
                                                        sheetDataRowLength = sheetDataRowLength + $('.closeMatchTrigger.addedSiteName').length;
                                                    }
                                                    if(uploadDataType != '' && uploadDataType == 'uploadToken' && sheetDataRowLength>203){
                                                        $('[id$=retrieveBulkError]').css('display','block');
                                                        processedExcelBodyString = '';
                                                    }
                                                    console.log('@@@processedExcelBodyString2'+processedExcelBodyString);
                                                     if($('[id$=theTextInput]') != 'undefined' && $('[id$=theTextInput]').length>0 && (uploadDataType=='' || uploadDataType == 'bulkSite')){
                                                        $('[id$=theTextInput]').val(processedExcelBodyString);
                                                     }
                                                     else{
                                                        if(processedExcelBodyString.length>0 && retrieveBulkTokenEmptyCol == false){
                                                            $('[id$=retrieveMultipleTokenExcel]').val(processedExcelBodyString);
                                                            enableRetreiveUploadSite(true);
                                                        }else{
                                                            $('[id$=retrieveMultipleTokenExcel]').val('');
                                                            enableRetreiveUploadSite(false);
                                                            if(retrieveBulkTokenEmptyCol == true){
                                                                $('#validateRetrieveBulkTokenModal').modal();
                                                            }
                                                        }
                                                     }
                                                     console.log('@@@processedExcelBodyString'+processedExcelBodyString);
                                                    noOfUploadedSites = sheetData.length - 3;
                                                    return {
                                                        'data': sheetData,
                                                        'name': sheet.name,
                                                        'col_size': range.e.c + 1,
                                                        'row_size': range.e.r + 1
                                                    };
                                                }
                                            };
                                        }).call(this);
                                                                               
                  var app = angular.module("App", []);
                  app.factory("XLSXReaderService", ['$q', '$rootScope',
                    function($q, $rootScope) {
                        var service = function(data) {
                            angular.extend(this, data);
                        };
                        service.readFile = function(file, showPreview) {
                            var deferred = $q.defer();
        
                            XLSXReader(file, showPreview, function(data) {
                                $rootScope.$apply(function() {
                                    deferred.resolve(data);
                                });
                            });
        
                            return deferred.promise;
                        };
                        return service;
                    }
                ]);
                
                app.controller('PreviewController', function($scope, XLSXReaderService) {
                    $scope.showPreview = false;
        
                    $scope.fileChanged = function(files) {
                        $scope.isProcessing = true;
                        $scope.sheets = [];
                        $scope.excelFile = files[0];
                        XLSXReaderService.readFile($scope.excelFile, $scope.showPreview).then(function(xlsxData) {
                            $scope.sheets = xlsxData.sheets;
                            $scope.isProcessing = false;
                        });
                        $scope.isProcessing = true;
                        $scope.showPreview = true;
                        var temp = XLSXReaderService.readFile($scope.excelFile, $scope.showPreview).then(function(xlsxData) {
                            $scope.sheets = xlsxData.sheets;
                            $scope.isProcessing = false;
                        });
                    }; 
                });
                var retrieveApp = angular.module("RetrieveApp", []);
                retrieveApp.factory("XLSXReaderService", ['$q', '$rootScope',
                    function($q, $rootScope) {
                        var service = function(data) {
                            angular.extend(this, data);
                        };
                        service.readFile = function(file, showPreview) {
                            var deferred = $q.defer();
        
                            XLSXReader(file, showPreview, function(data) {
                                $rootScope.$apply(function() {
                                    deferred.resolve(data);
                                });
                            });
        
                            return deferred.promise;
                        };
                        return service;
                    }
                ]);
                
                
                retrieveApp.controller('RetrieveController', function($scope, XLSXReaderService) {
                    $scope.showPreview = false;
        
                    $scope.retrieveFileChanged = function(files) {
                        $scope.isProcessing = true;
                        $scope.sheets = [];
                        $scope.excelFile = files[0];
                        XLSXReaderService.readFile($scope.excelFile, $scope.showPreview).then(function(xlsxData) {
                            $scope.sheets = xlsxData.sheets;
                            $scope.isProcessing = false;
                        });
                        $scope.isProcessing = true;
                        $scope.showPreview = true;
                        var temp = XLSXReaderService.readFile($scope.excelFile, $scope.showPreview).then(function(xlsxData) {
                            $scope.sheets = xlsxData.sheets;
                            $scope.isProcessing = false;
                        });
                    }; 
                });
                angular.bootstrap(document.getElementById("bulkSiteApp"), ['App']);
                document.onkeypress = function(e){
                            e=e?e:window.event;
                            if (e.keyCode==13)return false;
                }
                                    </script>
                                </apex:outputPanel>
                                                </apex:form>
                                                </p>
                                        </div>
                                    </div>
                                </div>
                                <!-- end ngRepeat: tab in tabs -->
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div id="validateModal" class="modal fade m-t-20" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
                <div class="modal-dialog modal-lg">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" onclick="$('.modal-backdrop').not(':last-child').hide();"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span>
                            </button>
                            <h2 class="modal-title" id="myModalLabel">Site Address Validation</h2>
                        </div>
                        <div class="modal-body">
                            <apex:form id="form6">
                                <apex:pageBlock >
                                    <br/> <br/>
                                    <apex:pagemessages />
                                    <br/><br/>
                                </apex:pageBlock>
                                <br/>
                            </apex:form>
                        </div>
                    </div>
                </div>
            </div>
            <div id="validateRetrieveBulkTokenModal" class="modal fade m-t-20" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
                <div class="modal-dialog modal-lg">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" onclick="$('.modal-backdrop').not(':last-child').hide();"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span>
                            </button>
                            <h2 class="modal-title" id="myModalLabel">Site Address Validation</h2>
                        </div>
                        <div class="modal-body">
                            <apex:form id="formRetrieveTokenModal">
                                <apex:pageBlock >
                                    <br/> <br/>
                                    <span style="color:#cc0000;font-weight:700;">{!$Label.RETRIEVE_MULTI_INVALID}</span>
                                    <br/><br/>
                                </apex:pageBlock>
                                <br/>
                            </apex:form>
                        </div>
                    </div>
                </div>
            </div>
            <div id="validateRetrieveBulkInvalidModal" class="modal fade m-t-20" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
                <div class="modal-dialog modal-lg">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" onclick="$('.modal-backdrop').not(':last-child').hide();"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span>
                            </button>
                            <h2 class="modal-title" id="myModalLabel">Site Address Validation</h2>
                        </div>
                        <div class="modal-body">
                            <apex:form id="formRetrieveTokenInvalidModal">
                                <apex:pageBlock >
                                    <br/> <br/>
                                    <span style="color:#cc0000;font-weight:700;">{!$Label.RETRIEVE_MULTI_INVALID_FORMAT}</span>
                                    <br/><br/>
                                </apex:pageBlock>
                                <br/>
                            </apex:form>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <apex:form id="form4" styleClass="form4">
                    <apex:inputHidden id="checkDiscardFlag" value="{!checkDiscard}"/>
                    <apex:pageBlock id="form3">
                        <div class="col-xs-3 col-md-3 p0" id="addedsites">
                            <h3 class="siteAddText m0">{!IF(selectedSitesWrapperList.size>0,selectedSitesWrapperList.size,0)} Sites Added to Quote</h3>
                            <!--<h4 style="margin-bottom: 20px;">{!IF(selectedSitesWrapperList.size>0,selectedSitesWrapperList.size,0)} Sites submitted</h4>-->
                            <div id="SitesCtrlDiv" class="row m0">
                                <!-- Export -->
                                <!-- Remove -->
                                <div class="pull-right">
                                    <apex:commandButton disabled="{!!isSiteSelected}" styleClass="btn-secondary clearMsg" style="padding: 0px !important;background: #F7F7F7 !important;color: #056FAB !important;border:0;" value="Remove Selected"  oncomplete="openRemoveAddressPop('remove');" status="loading" id="removeSelectId"/>
                                </div>
                                
                            </div>
                            <br/>
                            <div style="margin: 0; padding: 10px; background: #fff; border: 1px solid #ddd; border-bottom: 0;">
                                <apex:inputCheckbox value="{!isSelectAll}" id="selectAllId" onclick="selectAll();" disabled="{!!(selectedSitesWrapperList.size > 0) }" />
                                <apex:outputText id="outputTextField" value="">Select All</apex:outputText>
                                <apex:actionFunction name="selectAll" status="loading" action="{!doSiteSelectionAll}" reRender="form4,form3" />
                            </div>
                            <div id="addedsitescontainer">
                                <accordion is-open="m.open">
                                    <div class="panel-group" ng-transclude="">
                                        <apex:actionFunction name="IsSelectedCheck" action="{!doSiteSelectionCheck}" status="loading" reRender="form4,form3" oncomplete="validateButton(this);initializeFieldValidations_Step3();initializeFieldValidations_ExactMatch();">
                                            <apex:param name="selectedJunctionId" value="" />
                                        </apex:actionFunction>
                                        <apex:repeat value="{!selectedSitesWrapperList}" var="item">
                                            <div class="panel panel-default ng-isolate-scope" style="padding: 10px;">
                                                <div class="panel-heading">
                                                    <h5 class="panel-title">
                                                        <a class="accordion-toggle" accordion-transclude="heading" data-toggle="collapse" data-target="#{!item.selectedSite.id}">
                                                            <span class="pull-right">
                                                            </span>
                                                            <span class="ng-scope">
                                                                <apex:inputCheckbox id="chkBxId" value="{!item.isSelected}" 
                                                                    onclick="IsSelectedCheck('{!item.junctionRecordId}');" />
                                                                <apex:outputText id="sitename" value="{!item.selectedSite.Site_Name__c}" styleClass="closeMatchTrigger addedSiteName"></apex:outputText>
                                                                <apex:outputPanel rendered="{!item.selectedSite.API_IPQ_Site__c}">
                                                                    <!--<apex:image value="{!($Resource.Token_Icon)}" style="width: 25px; height: 25px;top:0px;margin-left:10px;" />-->
                                                                    <!--<span class="glyphicon tokenIconTooltip" data-placement="right" data-popover="true" data-html="true" data-toggle="tooltip" rel="tokenIconTooltip" data-content="{!userInputToken}" title="<h5> Site Token</h5>"><img src="{!$Resource.Token_Icon}" class="tokenIconImage"/></span>-->
                                                                    <span class="glyphicon tokenIconTooltip" data-toggle="popover" data-popover="true" data-trigger="hover" data-placement="right" data-html="true" data-original-title="Site Token">
                                                                        <img src="{!$Resource.Token_Icon}" class="tokenIconImage"/>
                                                                    </span>
                                                                </apex:outputPanel>
                                                            </span>                                                         
                                                            <br class="ng-scope"/>
                                                        </a>
                                                    </h5>
                                                    <span class="ng-scope addedSiteInfo" style="text-transform: normal !important; margin: 5px 0px 5px 18px; display: block;"> {!item.selectedSite.Address_Line__c + ' ' +  item.selectedSite.City__c + ' ' + item.selectedSite.State__c + ' ' + item.selectedSite.Country__c}</span>
                                                    <script>
                                                        $('body').popover({
                                                            selector: '[data-popover]', trigger: 'click hover', placement: 'bottom',
                                                            content: function () {
                                                                console.log('>>>>>>>     data-popover');
                                                            }
                                                        }); 
                                                    </script>
                                                </div>
                                            </div>
                                        </apex:repeat>
                                    </div>
                                </accordion>
                            </div>
                       <!-- <div id="legend">-->
                            <div class="row">
                            </div>
                            <div class="row" style="margin-top: 10px;">
                                <div class="col-xs-3 p0">
                                    &nbsp;
                                </div>
                            </div>
                        </div>

                        <apex:outputPanel id="chkServiveBtnId" rendered="true" styleClass="form-horizontal ng-pristine ng-valid">
                            <!--apex:actionRegion id="regionId" -->
                            <div class="row m0">                               
                                <div class="col-xs-12 p0 toggleOnRetrieve" style="margin-top: -31px;">
                                    <hr class="blue_hr" />
                                </div>
                            </div>
                            <div>
                                <!--  class="col-md-12 br-0 m-t-10" -->
                                <div class="form-group" id="bulkupload">
                                    <div class="col-md-12 m-t-20 text-center">
                                        <script>
                                            checkIsConfigureReady();
                                            function checkIsConfigureReady() {
                                                var isConfigureReady = '{!isConfigureReady}';
                                            }
                                        </script>
                                        <apex:inputHidden id="doPollingASE" value="{!doPolling}"/>
                                        <div id="siteAddressBtnAction" class="col-xs-12 p0 m0 pull-right">
                                            <div class=" pull-right">
                                                <apex:commandButton id="configureNewBtnId" action="{!callBlackFlag}" oncomplete="makeITPACall();" value="Validate Addresses and Check Service Availability"
                                                styleClass="btn-primary pull-right" disabled="{!!isConfigureReady}"  
                                                status="loading"/>                                              
                                                <input type="button" class="btn-secondary" id="saveExitBtnId" Value="Save and Exit" 
                                                    onclick="navigateToDashboard();" />
                                                <apex:commandButton id="discardChanges" action="{!discardChanges}" value="Discard Changes"
                                                styleClass="btn-secondary discardChangesBtn" status="loading" rendered="{!checkDiscard}" />
                                            </div>
                                            <!--<div class="col-xs-4">
                                                
                                            </div>  -->                                     
                                            <!--<input type="button" class="pull-right btn-secondary col-md-2" id="discardchanges" Value="Discard Changes" onclick="discardChanges()" style="display:{!if(checkDiscard,"block","none")};"/>

                                            <input type="button" class="pull-right btn-secondary col-md-2" id="saveExitBtnId" Value="Save and Exit" 
                                            onclick="navigateToDashboard();" style="border: 1px solid #ccc !important;padding: 0 40px;" />-->
                                        </div>
                                        
                                        <apex:actionFunction name="makeITPACall" action="{!configureSiteForITPA}" reRender="doPollingASE,ReviewEnterAddresses,form-2,headerFormId,resetErrFlag" oncomplete="checkStatus();" status="loading"/>  
                                        <apex:actionFunction name="reviewAddress" action="{!goToReviewAddress}" reRender="ReviewEnterAddresses" status="loading"/> 
                                        <apex:actionfunction name="doRequest" action="{!CallITPAContinuation}"  reRender="isConRequ,doPollingASE,ReviewEnterAddresses,form-2,headerFormId,resetErrFlag"  oncomplete="checkRetrigger();" status="loading"/>       
                                        
                                        <apex:actionfunction name="checkRetriggerEvent" action="{!callFirstRetriggerMethod}" reRender="isConRequ,doPollingASE,ReviewEnterAddresses,form-2,headerFormId,resetErrFlag"  oncomplete="checkRetriggerSecond();"  status="loading"/> 
                                        <apex:actionfunction name="checkRetriggerEventSecond" action="{!callSecondRetriggerMethod}" reRender="isConRequ,doPollingASE,ReviewEnterAddresses,form-2,headerFormId,resetErrFlag"  oncomplete="checkRetriggerThird();" status="loading" />
                                        <apex:actionfunction name="checkRetriggerEventThird" action="{!callThirdRetriggerMethod}" reRender="isConRequ,doPollingASE,ReviewEnterAddresses,form-2,headerFormId,resetErrFlag"  oncomplete="createITSupport();" status="loading" />
                                        <apex:actionfunction name="createITSupportTickets" action="{!CreateITSupportTicket}" reRender="isConRequ,doPollingASE,ReviewEnterAddresses,form-2,headerFormId,resetErrFlag"  status="loading" />
                                        
                                        
                                        <apex:actionFunction name="startPollingFnASE" status="loading" action="{!initPolling}" 
                                                                            rerender="doPollingASE,configureNewBtnId" 
                                                                            oncomplete="checkPollingStatusASE();">                                      
                                        </apex:actionFunction>
                                        <apex:actionFunction name="callRemoveFunction" action="{!doRemove}" status="loading" oncomplete="pageRefreshed();callEligibleSitesDataTable('loadDefault');" reRender="form4,form3,form1,addedsites,form6,$('.modal-backdrop').modal('hide')">
                                        </apex:actionFunction>
                                        <apex:actionFunction name="setEmailFlag" action="{!setEmailOnCompleteFlag}" status="loading" reRender="">
                                            <apex:param assignTo="{!isEmailSelected}" value="" name="emailCheckBoxValue"></apex:param>
                                        </apex:actionFunction>
                                        <apex:actionFunction name="discardChanges" action="{!discardChanges}">
                                        </apex:actionFunction>                                                               
                                        <script>
                                            if('{!quote.Product_New_Name__c}' == 'AT&T Switched Ethernet Service'){
                                                $('.emailChkBoxSection').css('display','none');
                                            }else{
                                                emailToCheckboxValue = {!isEmailSelected};
                                                $('#selectSiteTabCheckBox,#addNewSiteTabCheckBox,#bulkUploadTabCheckBox').prop( "checked", emailToCheckboxValue );                                              
                                            }
                                            
                                            function EmailFlagChecked(input){
                                                $('#selectSiteTabCheckBox,#addNewSiteTabCheckBox,#bulkUploadTabCheckBox').prop( "checked", input.checked );
                                                setEmailFlag(input.checked);
                                            }                                            
                                        
                                            checkASEType = '';
                                            function populateASEType() {
                                                checkASEType = '{!ASE_type}';
                                            }
                                            
                                            function checkServiceAvailCall() {
                                                checkServiceAvailExecute();
                                            }
                                            
                                            function executeAIA() {
                                                var checkErr = '{!checkServErr}';
                                                var checkAIA = '{!isAIASelected}';
                                                if(checkErr == 'false' && checkAIA == 'true') {
                                                    handleConfigureSite();
                                                }
                                            }
                                            $('.clearMsg').on('click', function(){
                                                $('.infoM3').text('');
                                            });
                                        </script>
                                    </div>
                                </div>
                            </div>
                            <apex:actionFunction status="loading" name="checkServiceAvailExecute" reRender="form6,form4,chkServiveBtnId" 
                                action="{!doConfigure}" oncomplete="handleSiteAvailError('{!isConfigured}');">
                                <apex:param name="isAIASelected" value=""></apex:param>
                            </apex:actionFunction>
                            <!--/apex:actionRegion-->
                        </apex:outputPanel>

                        <apex:actionFunction status="loading" name="handleSiteAvailErrorMsg" reRender="form6,form4" action="{!doHandleServiceAvailError}" oncomplete="openValidateModalForExisting();pageRefreshed();">
                            <apex:param name="isAIASelected" value=""></apex:param>
                        </apex:actionFunction>      
                      
                                                    
                        <apex:actionFunction status="loading" name="reInitSiteAddress" action="{!reInitializeSiteAddress}" 
                            reRender="form4,form1,form6,headerFormId,EligibleSitesTable" oncomplete="callEligibleSitesDataTable('loadDefault');handleConfigureSite();" />
                        
                        <apex:actionFunction status="loading" name="reInitSiteAddressMain" action="{!reInitializeSiteAddress}" 
                            reRender="form4,form1,form6,headerFormId,EligibleSitesTable" />
                        
                        <apex:actionFunction name="handleSiteAddressPage" oncomplete="handleBulkMsg();callEligibleSitesDataTable('loadDefault');" action="{!doFetchQuoteInfo}" id="handleSiteAddFuncId" status="loading" rerender="form4,configureNewBtnId,form1,form6,headerFormId">
                            <apex:param name="quoteId" value="" />
                        </apex:actionFunction>
                        
                        <apex:actionFunction name="handleSiteAddressPageNew" oncomplete="handleBulkMsg();callEligibleSitesDataTable('loadDefault');reloadThisPage();" action="{!doFetchQuoteInfo}" id="handleSiteAddFuncNewId" status="loading" rerender="form4,configureNewBtnId,form1,form6,headerFormId">
                            <apex:param name="quoteId" value="" />
                        </apex:actionFunction>
                        <script>
                            isSelectedAIA = '{!isAIASelected}';
                            function reloadThisPage() {
                                location.reload();
                            }
                        </script>
                        <apex:actionFunction name="displayBulkMsg" oncomplete="openValidateModalForExisting();" status="loading" />
                        
                        <apex:actionFunction name="modalBlock" action="{!doFetchUpdatingRecord}" reRender="form-2,SiteOverlay" status="loading"  oncomplete="initializeFieldValidations_ExactMatch();$('#closeMatch').modal('show');$('.modal-backdrop').not(':last-child').remove();">
                            <apex:param name="siteToUpdate" value=""/>
                            <apex:param name="junctionRecId" value=""/>
                        </apex:actionFunction>
                        
                    </apex:pageBlock>
                    <div class="modal fade removeSiteOnDiscardOverlay" tabindex="-1" role="dialog" aria-hidden="true" data-keyboard="false" data-backdrop="static" >
                        <div class="modal-dialog">
                            <div class="modal-content col-xs-12">
                                 <apex:outputPanel styleClass="" layout="block" rendered="{!removePopupOnLoadFlag}">
                                        <div class="modal-header">
                                            <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span>
                                            </button>
                                            <h4 class="modal-title" id="myModalLabelR2"></h4>
                                        </div>
                                        <div class="modal-body">
                                            <p>
                                                {!$Label.REMOVE_CONFIRM_REG_TEXT1}
                                            </p>
                                            <p>
                                                {!$Label.REMOVE_CONFIRM_REG_TEXT2}
                                            </p>
                                        </div>
                                        <div class="modal-footer text-center">
                                            <div class="pull-right p0 m0">
                                                <apex:commandLink styleclass="cancelLink" rerender="null" value="Cancel" html-data-dismiss="modal"/>                                    
                                                <apex:commandButton styleclass="continueButton goToSamePage" value="Continue" status="loading" action="{!doRemove}" oncomplete="pageRefreshed();callEligibleSitesDataTable('loadDefault');" reRender="form4,form3,form1,addedsites,form6,$('.modal-backdrop').modal('hide')" html-data-dismiss="modal"/>
                                            </div>
                                        </div>
                                    </apex:outputPanel>
                                    
                            </div>
                        </div>
                        <!-- /.modal-dialog -->
                    </div>
                </apex:form>

                <!-- Modal -->
                <div class="modal fade" id="closeMatch" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" data-keyboard="false" data-backdrop="static">
                    <apex:form id="SiteOverlay">                            
                        <div class="modal-dialog modal-lg">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <button type="button" class="close" data-dismiss="modal" onclick="clearMessage();window.location.reload(true);" style="margin-top:-18px;font-size:200%!important;"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                                    <!-- The Address Exact Match will be transferred to the Review Addres & Validate Page as per US614049 so i put a static header in this case -->
                                    <!--<h3 style="padding-left: 30px;">{!customerSite.VASA_Response_Status__c}</h3> -->
                                    <h3 class="addressUpdateTitle">Address Update</h3>
                                </div>
                                <hr class="grey_hr" style="margin-bottom:5px !important;"/>
                                
                                <div class="modal-body" style="height: 440px; overflow-y: auto;">
                                    <div style="padding-left: 30px;">
                                        To edit this address, make the changes and <strong>Update</strong>. Edits will overwrite the address in your Customer Sites list.<br /> 
                                        If you do not want the edit to replace the existing address, close this message and Add New Site.
                                    </div>
                                    <div class="col-xs-12" id="UpdateSitesTable">
                                        <apex:pageBlock id="UpdateSitesTable" rendered="true">
                                            
                                            <apex:pageBlockTable id="closeMatchTable" value="{!closeMatchAddrWrapper}" var="item" rendered="{!IF(closeMatchAddrWrapper.size>0 && isAIASelected==true,true,false)}" styleClass="table table-bordered table-striped table-hover">
                                                <apex:column headerValue="Select">
                                                    <input type="radio" value="{!item.isSelected}" name="group12" id="{!item.radioId}" onchange="updateSelectCloseMatchRadio('{!item.radioId}');" />
                                                </apex:column>
                                                <apex:column value="{!item.closeMatchAddress.street}" headerValue="Street" />
                                                <apex:column value="{!item.closeMatchAddress.city}" headerValue="City" />
                                                <apex:column value="{!item.closeMatchAddress.state}" headerValue="State" />
                                                <apex:column value="{!country}" headerValue="Country" />
                                            </apex:pageBlockTable>
                                            <ul class="col-xs-6">
                                                <li class="closeMatchLi">
                                                    <label for="" class="control-label">Site Name</label>
                                                    <apex:inputField value="{!customerSite.Site_Name__c}" id="SiteName" styleClass="form-control inputSite required" html-placeholder="Site Name"  />
                                                </li>                                            
                                                
                                                <li class="closeMatchLi">
                                                    <label for="" class="control-label">Address Line</label>
                                                    <apex:inputText label="Address Line" value="{!addressLine}" id="SiteAddressLineid" styleClass="form-control inputAddress required"  html-placeholder="Address Line"  />
                                                </li>
                                                <li class="closeMatchLi">
                                                    <div class="form-group row m0" id="siteLocationAddressUpdate">
                                                        <div class="pull-left" style="width: 60%; padding-right: 15px;">
                                                            <label class="control-label" style="width: 100%;">Location (Optional)</label>
                                                            <apex:selectList value="{!customerSite.Location__c}" label="State"  id="siteLocation" multiselect="false" size="1" styleClass="form-control pull-left styled-select-small" style="font-family:inherit; font-size:inherit;width:100%;padding-top: 3px;padding-bottom: 3px;" onchange="onchangeLocationPicListFun(this, 'popup')">
                                                                <apex:selectOptions value="{!LocationPicklist}" id="sitePickLocation" />
                                                            </apex:selectList>
                                                        </div>
                                                        <div class="pull-left" style="width: 40%; padding-left: 15px;">
                                                            <label for="" class="control-label">&nbsp;</label> 
                                                            <apex:inputField value="{!customerSite.RoomBuildingFloorInput__c}" styleClass="form-control pull-right" html-placeholder="#" style="width: 100%;" id="siteRoomFloor" />
                                                        </div>
                                                    </div>
                                                </li>
                                                <li class="closeMatchLi">
                                                    <label for="" class="control-label">City</label>
                                                    <apex:inputField value="{!customerSite.City__c}" styleClass="form-control inputCity required" html-placeholder="City" id="siteCity"  />
                                                </li>
                                                <li class="closeMatchLi">
                                                    <div class="form-group row m0" id="siteStateZipUpdate">
                                                        <div class="pull-left" style="width: 60%; padding-right: 15px;">
                                                            <label class="control-label" style="width: 100%;">State</label>
                                                            <apex:selectList value="{!state}" label="State"  id="statePickList" multiselect="false" size="1" styleClass="form-control inputState required pull-left styled-select-small" style="font-family:inherit; font-size:inherit;width:100%;padding-top: 3px;padding-bottom: 3px;" onchange="onchangeLocationPicListFun(this, 'popup')">
                                                                <apex:selectOptions value="{!statePickList}" />
                                                            </apex:selectList> 
                                                        </div>
                                                        <div class="pull-left" style="width: 40%; padding-left: 15px;">
                                                            <label for="" class="control-label">{!$Label.ZIP}</label>                                                 
                                                            <apex:inputField value="{!customerSite.Zip_Code__c}" styleClass="form-control pull-right inputZip required" html-placeholder="" style="width: 100%;" id="siteZip" />
                                                        </div>
                                                    </div>
                                                </li>
                                                
                                            </ul>
                                            <ul class="col-xs-6">
                                                <li class="closeMatchLi">
                                                    <label for="" class="control-label">Phone Number (Optional)</label>
                                                    <apex:inputText value="{!customerSite.Phone__c}" styleClass="form-control inputPhone" html-placeholder="" required="false" maxlength="10" id="sitePhone"/>
                                                </li>
                                                
                                                <!--<li class="closeMatchLi">
                                                    <label for="" class="control-label">State</label>
                                                    <apex:selectList value="{!state}" label="State"  multiselect="false" id="statePickList" size="1" styleClass="form-control inputState required" style="font-family:inherit; font-size:inherit;padding-top: 3px;padding-bottom: 3px;">
                                                        <apex:selectOptions value="{!statePickList}" />
                                                    </apex:selectList>
                                                </li>

                                                <li class="closeMatchLi">
                                                    <label for="" class="control-label">Zip</label>
                                                    <apex:inputField value="{!customerSite.Zip_Code__c}" styleClass="form-control inputZip required" html-placeholder="Zip" id="siteZip" />
                                                </li>-->
                                            </ul>
                                            <hr/>
                                        </apex:pageBlock>
                                    </div>
                                
                                </div>
                                <hr class="grey_hr m0" />
                                <div class="modal-footer" style="margin-bottom:24px;margin-top: 24px !important;">
                                <!-- updated as per US614049 -->
                                    <span class="addressMatchContainer" style="float:right;margin-right: 75px;">
                                        <input type="button" value="Update" class="btn btn-primary addressMatchbtn" 
                                            onclick="checkAddressExactMatch('{!sSiteName}','{!sAddressLine}','{!sLocation}','{!sRoomBuildingFloorInput}','{!sPhone}','{!sCity}','{!sState}','{!sZip}');" data-dismiss="modal" />
                                    </span>
<!-- removed as per US614049
                                    <apex:commandButton value="Remove" status="loading" styleClass="btn btn-primary" 
                                        action="{!doSingleSiteRemove}" oncomplete="openValidateModalForExisting();pageRefreshed();clearMessage();callEligibleSitesDataTable('loadDefault');" 
                                        reRender="form6,closeMatchTable,form3" html-data-dismiss="modal">
                                            <apex:param name="siteToRemove" value="{!customerSite.id}" assignTo="{!siteToRemoveId}" />
                                    </apex:commandButton>
-->
                                </div>
                            </div>
                        </div>
                        <apex:actionFunction status="loading" name="updateSelectRadio" action="{!doValidate}" reRender="form6,closeMatchTable,form3,form1,form-2" 
                            oncomplete="pageRefreshed();clearMessage();callEligibleSitesDataTable('loadDefault');">
                            <apex:param name="selectedCloseRadio" value="" />
                        </apex:actionFunction>
                        
                        
                        <apex:actionFunction status="loading" name="updateSelectRadioAIA" action="{!doSitesSelectionForAIA}" reRender="form6,closeMatchTable,form3,form1,form-2" 
                            oncomplete="openValidateModalForExisting();pageRefreshed();clearMessage();callEligibleSitesDataTable('loadDefault');">
                            <apex:param name="selectedCloseRadio" value="" />
                        </apex:actionFunction>
                    </apex:form>
                </div>

                <!-- Select Product Modal -->
                <div class="modal fade" id="oppurtunityModal" tabindex="-1" role="dialog" aria-labelledby="oppurtunityModalLabel" aria-hidden="true">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span>
                                </button>
                                <h4 class="modal-title" id="oppurtunityModalLabel">Continue</h4>
                                <apex:pageMessages ></apex:pageMessages>
                            </div>
                            <div class="modal-body">
                                <p>
                                    To start the Quote and deal registration process, the AT&amp;T premier Store will open in a new window. To proceed choose one of the selections below then click contiue.
                                </p>
                                <div>
                                    <input type="radio" id="endCustomerFan" value="" name="continueRadio" onclick="atLeastOneRadio();" />
                                    <label for="endCustomerFan">End Customer Fan</label>
                                </div>
                                <div>
                                    <input type="radio" id="consumeForUseFan" value="" name="continueRadio" onclick="atLeastOneRadio();" />
                                    <label for="consumeForUseFan">Consume for use Fan</label>
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button id="select_prod_modal_continue" type="button" class="btn  btn-primary disabled" data-dismiss="modal" onclick="">Continue</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        </apex:outputPanel>
    </div> 
    <div>
        <apex:outputPanel id="ReviewEnterAddresses" rendered="{!isReviewAddress}">
            <apex:include pageName="ReviewSiteAddressInformation" />
        </apex:outputPanel>
    </div>
        <div id="maxSitesRestrictModal" class="modal fade m-t-20" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" data-keyboard="false" data-backdrop="static">
            <div class="modal-dialog modal-lg" style="width:500px;margin: 175px auto;">
                <div class="modal-content">
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span>
                 </button>
                    <div class="modal-header" style="border-bottom: 1px solid #c0c0c0 !important;">
                        <h2 class="modal-title" id="myModalLabel" style=" color: black; ">Maximum Number of Sites Exceeded</h2>
                    </div>
                    <div class="modal-body">
                        <p id="sitesMsgId">
                        </p>
                    </div>
                    <div class="modal-footer" style="padding: 10px 15px 40px 15px;">
                        <button  type="button" class="btn  btn-primary " data-dismiss="modal" style=" width: 175px !important; " onclick="">Okay</button>
                    </div>
                </div>
            </div>
        </div>
            <!--This static resource is required to parse the excel file into csv sends to controller------------>
            <apex:includeScript value="{!URLFOR($Resource.ExcelParser, 'ExcelParser/angular.min.js')}"/>
            <apex:includeScript value="{!URLFOR($Resource.ExcelParser, 'ExcelParser/bootstrap.min.js')}"/>
            <apex:includeScript value="{!URLFOR($Resource.ExcelParser, 'ExcelParser/lodash.min.js')}"/>
            <apex:includeScript value="{!URLFOR($Resource.ExcelParser, 'ExcelParser/jszip.js')}"/>
            <apex:includeScript value="{!URLFOR($Resource.ExcelParser, 'ExcelParser/xlsx.js')}"/>
    <script>
        /****** Please do not move below function to static resource as we need this here - Shishir*****/
        function loadImageFun() {
            $('.waitingImage').attr('src', '{!$Resource.LoadingImage}');
        }  

        // Function to initialize each of the validations present on the Exact Match form fields
            function initializeFieldValidations_ExactMatch() {
                // Add a keyup event handler to each of the fields to ensure that on keyup we validate the field
                // Site Name
                $("#closeMatch .inputSite").on({"keyup": function(){
                        validateEmptyFields_ExactMatch("inputSite","Site Name should not begin with a space","Enter a Site Name", true);
                    },
                "blur":function(){
                        validateEmptyFields_ExactMatch("inputSite","Site Name should not begin with a space","Enter a Site Name", true);
                    }
                });
                // Address
                $("#closeMatch .inputAddress").on({"keyup": function() {
                        validateEmptyFields_ExactMatch("inputAddress","Address should not begin with a space","Enter an Address", true);
                    },
                "blur":function(){
                        validateEmptyFields_ExactMatch("inputAddress","Address should not begin with a space","Enter an Address", true);
                    }
                });
                // Location
                $("#closeMatch .inputLocation").on({"keyup": function(){
                        validateEmptyFields_ExactMatch("inputLocation","Location should not begin with a space","Select a Location", true);
                    },
                "blur":function(){
                        validateEmptyFields_ExactMatch("inputLocation","Location should not begin with a space","Select a Location", true);
                    }   
                });
                // City
                $("#closeMatch .inputCity").on({"keyup": function(){
                        validateEmptyFields_ExactMatch("inputCity","City should not begin with a space","Enter a city", true);
                    },
                "blur":function(){
                        validateEmptyFields_ExactMatch("inputCity","City should not begin with a space","Enter a city", true);
                    }
                });
                // State
                $("#closeMatch .inputState").on({"change": function(){
                        validateEmptyFields_ExactMatch("inputState","State should not begin with a space","Select a State", true);
                    },
                "blur":function(){
                        validateEmptyFields_ExactMatch("inputState","State should not begin with a space","Select a State", true);
                    }
                });
                
                // Numerical Fields - Verify the length along with the checks for invalid characters and empty space
                // Zip Code
                $("#closeMatch .inputZip").on({"keyup": function(){
                        validateNumericalFields_ExactMatch($("#closeMatch .inputZip").val(), "Invalid Zip code", "Enter a Zip code", "Zip code must be of five digits", true, "inputZip","Zip code should not begin with a space");
                    },
                "blur":function(){
                        validateNumericalFields_ExactMatch($("#closeMatch .inputZip").val(), "Invalid Zip code", "Enter a Zip code", "Zip code must be of five digits", true, "inputZip","Zip code should not begin with a space");
                    }
                });
                // Phone Number
                $("#closeMatch .inputPhone").on({"keyup": function() {
                        validateNumericalFields_ExactMatch($("#closeMatch .inputPhone").val(), "Invalid Phone Number", "Enter a Phone Number", "Phone Number must be of ten digits", false,"inputPhone","Phone Number should not begin with a space");
                    },
                "blur":function(){
                        validateNumericalFields_ExactMatch($("#closeMatch .inputPhone").val(), "Invalid Phone Number", "Enter a Phone Number", "Phone Number must be of ten digits", false,"inputPhone","Phone Number should not begin with a space");
                    }
                });
            }
            
            function enableRetreiveAddSite(){
                var showRelatedSites = $('[id$=showRelatedSites]').val();
                if(showRelatedSites != null && 'undefined' != showRelatedSites && showRelatedSites == "true"){
                    var retreiveTokenSiteName = $('.retreiveTokenSiteName').val();
                    if(retreiveTokenSiteName != null && 'undefined' != retreiveTokenSiteName && retreiveTokenSiteName.length>0){
                        $('.addRetreiveSiteValidateAddBtn').removeClass('disabled');
                        $('.retreiveTokenAddSite .arrow-right').removeClass('disabled');
                        $('.retreiveTokenAddSite .arrow-right').css("border-left","16px solid #056fab");
                        $('.retreiveTokenAddSite .arrow-right').css("cursor","pointer");
                    }
                    else{
                        $('.addRetreiveSiteValidateAddBtn').addClass('disabled');
                        $('.retreiveTokenAddSite .arrow-right').addClass('disabled');
                        $('.retreiveTokenAddSite .arrow-right').css("border-left","16px solid #eee");
                        $('.retreiveTokenAddSite .arrow-right').css("cursor","auto");
                    }                   
                }
                else{
                        $('.addRetreiveSiteValidateAddBtn').addClass('disabled');
                        $('.retreiveTokenAddSite .arrow-right').addClass('disabled');
                        $('.retreiveTokenAddSite .arrow-right').css("border-left","16px solid #eee");
                        $('.retreiveTokenAddSite .arrow-right').css("cursor","auto");
                }
            }
            
            function enableRetreiveUploadSite(isErrorFlag){
                if(isErrorFlag != null && 'undefined' != isErrorFlag && isErrorFlag == true){
                    $('.uploadRetrieveSiteValidateBtn').removeClass('disabled');
                    $('.retreiveTokenUploadSite .arrow-right').removeClass('disabled');
                    $('.retreiveTokenUploadSite .arrow-right').css("border-left","16px solid #056fab");
                    $('.retreiveTokenUploadSite .arrow-right').css("cursor","pointer");
                }
                else{
                        $('.uploadRetrieveSiteValidateBtn').addClass('disabled');
                        $('.retreiveTokenUploadSite .arrow-right').addClass('disabled');
                        $('.retreiveTokenUploadSite .arrow-right').css("border-left","16px solid #eee");
                        $('.retreiveTokenUploadSite .arrow-right').css("cursor","auto");
                }
            }

            // Function to initialize each of the validations present on the form fields
            function initializeFieldValidations_Step3 () {
                $('#addSite .addNewValidateAddBtn').addClass('disabled');
                $(".errorText").remove();
                // Add a keyup event handler to each of the fields to ensure that on keyup we validate the field
                // Site Name
                
                $("#addSite .inputName").on({"keyup": function(){
                        validateEmptyFields_Step3("inputName","Site Name should not begin with a space","Enter a Site Name", true);
                    },
                "blur":function(){
                        validateEmptyFields_Step3("inputName","Site Name should not begin with a space","Enter a Site Name", true);
                    }
                });
                // Address
                $("#addSite .inputAdd").on({"keyup": function() {
                        validateEmptyFields_Step3("inputAdd","Address should not begin with a space","Enter an Address", true);
                    },
                "blur":function(){
                        validateEmptyFields_Step3("inputAdd","Address should not begin with a space","Enter an Address", true);
                    }
                });
                // Location
                $("#addSite .inputLocation").on({"keyup": function(){
                        validateEmptyFields_Step3("inputLocation","Location should not begin with a space","Select a Location", true);
                    },
                "blur":function(){
                        validateEmptyFields_Step3("inputLocation","Location should not begin with a space","Select a Location", true);
                    }   
                });
                // City
                $("#addSite .inputCity").on({"keyup": function() {
                        validateEmptyFields_Step3("inputCity","City should not begin with a space","Enter a city", true);
                    },
                "blur":function(){
                        validateEmptyFields_Step3("inputCity","City should not begin with a space","Enter a city", true);
                    }
                });
                // State
                $("#addSite .inputState").on({"change": function(){
                        validateEmptyFields_Step3("inputState","State should not begin with a space","Select a State", true);
                    }
                ,
                "blur":function(){
                        validateEmptyFields_Step3("inputState","State should not begin with a space","Select a State", true);
                    }
                });
                
                // Numerical Fields - Verify the length along with the checks for invalid characters and empty space
                // Zip Code
                $("#addSite .inputZip").on({"keyup": function(){
                        validateNumericalFields_Step3($("#addSite .inputZip").val(), "Invalid Zip code", "Enter a Zip code", "Zip code must be of five digits", true, "inputZip","Zip code should not begin with a space");
                    },
                "blur":function(){
                        validateNumericalFields_Step3($("#addSite .inputZip").val(), "Invalid Zip code", "Enter a Zip code", "Zip code must be of five digits", true, "inputZip","Zip code should not begin with a space");
                    }
                });
                // Phone Number
                $("#addSite .inputPhone").on({"keyup": function(){
                        validateNumericalFields_Step3($("#addSite .inputPhone").val(), "Invalid Phone Number", "Enter a Phone Number", "Phone Number must be of ten digits", false,"inputPhone","Phone Number should not begin with a space");
                    },
                "blur":function(){
                        validateNumericalFields_Step3($("#addSite .inputPhone").val(), "Invalid Phone Number", "Enter a Phone Number", "Phone Number must be of ten digits", false,"inputPhone","Phone Number should not begin with a space");
                    }
                });
                /* Retreive Token Site Name*/
                $(".retreiveTokenSiteName").on({"keyup": function(){
                        validateEmptyFields_Step3("retreiveTokenSiteName","Site Name should not begin with a space","Enter a Site Name", true);
                        enableRetreiveAddSite();
                    },
                    "blur":function(){
                        console.log('retreiveTokenSiteName');
                        validateEmptyFields_Step3("retreiveTokenSiteName","Site Name should not begin with a space","Enter a Site Name", true);
                        enableRetreiveAddSite();
                    }                   
                });
                
                disableX();
            }
            

            // Function to handle numerical values
            // If any non - numerical characters are entered, we show an invalid entry message
            // If a required field is blank, we show a message indicating that the field is blank
            // If a phone number is greater or less than 10 digits in length, we show a message indicating that the number is longer than expected
            function validateNumericalFields_Step3(sValue, sErrorMessage, sBlankMessage, sPhoneDigitErrorMessage, boolIsRequired, sFieldClassName, sFirstSpaceErrorMessage){
                var oError = $('#'+sFieldClassName+"_error"), oParent = $('#addSite .'+sFieldClassName).parent(), sFilteredValue = sValue.replace(/[\s()-]/g,""); // Remove all spaces, - and () from the phone number field
                var onlyNumRegex = /^[0-9]*$/;
                if(oParent[0]) {
                    if((boolIsRequired) && ("" === sValue))
                    {
                        oParent.addClass("has-error");
                        if(oError){
                            oError.remove();
                        }
                        oParent.append("<div id='"+sFieldClassName+"_error' class='errorText'>"+sBlankMessage+"</div>" );
                    }
                    else if((" " === sValue) || (sValue !== $.trim(sValue))){
                        oParent.addClass("has-error");
                        if(oError){
                            oError.remove();
                        }
                        oParent.append("<div id='"+sFieldClassName+"_error' class='errorText'>"+sFirstSpaceErrorMessage+"</div>" );
                    }
                    // Handle the Phonenumber field separately since we allow the () and - in the phonenumber field
                    else if((!onlyNumRegex.test(sValue)) && "inputZip" == sFieldClassName){
                        oParent.addClass("has-error");
                        if(oError){
                            oError.remove();
                        }
                        oParent.append("<div id='"+sFieldClassName+"_error' class='errorText'>"+sErrorMessage+"</div>" );
                        
                    }
                    // Handle the Phonenumber field separately since we allow the () and - in the phonenumber field
                    else if("inputPhone" === sFieldClassName && (!onlyNumRegex.test(sValue))){
                        oParent.addClass("has-error");
                        if(oError){
                            oError.remove();
                        }
                        oParent.append("<div id='"+sFieldClassName+"_error' class='errorText'>"+sErrorMessage+"</div>" );
                    }
                    // Fitering out the () and - from the number, check if all other characters are digits
                    // Phone Number must be exactly 10 Characters
                    // Zip Code must be exactly 5 Characters
                    else if(("inputPhone" === sFieldClassName && (sFilteredValue.length > 10 || sFilteredValue.length < 10) && (sFilteredValue.length !== 0 ))||
                            ("inputZip" === sFieldClassName && (sValue.length > 5 || sValue.length < 5))){
                        oParent.addClass("has-error");
                        if(oError){
                            oError.remove();
                        }
                        oParent.append("<div id='"+sFieldClassName+"_error' class='errorText'>"+sPhoneDigitErrorMessage+"</div>" );
                    }
                    else{
                         oParent.removeClass("has-error");
                         if(oError){
                            oError.remove();
                        }
                    }
                }
                // All Field Check
                validateRequiredFields_Step3();
            }
            

            function disableX() {
                if($('#addSite .addNewValidateAddBtn').hasClass('disabled')){
                    $('#addSite .arrow-right').addClass('disabled');
                    $('#addSite .arrow-right').css("border-left","16px solid #eee");
                    $('#addSite .arrow-right').css("cursor","auto");
                } else {
                    $('#addSite .arrow-right').removeClass('disabled');
                    $('#addSite .arrow-right').css("border-left","16px solid #056fab");
                    $('#addSite .arrow-right').css("cursor","pointer");
                }
            }           

            // Function to verify whether all the required fields are filled before submitting the form
            function validateRequiredFields_Step3() {
                if($('#addSite .addNewValidateAddBtn').hasClass('disabled')){
                    $('#addSite .arrow-right').addClass('disabled');
                    $('#addSite .arrow-right').css("border-left","16px solid #eee");
                    $('#addSite .arrow-right').css("cursor","auto");
                } else {
                    $('#addSite .arrow-right').removeClass('disabled');
                    $('#addSite .arrow-right').css("border-left","16px solid #056fab");
                    $('#addSite .arrow-right').css("cursor","pointer");
                }
                // Iterate through all fields and check if there are any invalid entries. If yes, then return false    
                var arrRequiredFields = $("#addSite .required"), boolIsNumberValid = true,boolIsValid = true, oAddCustomerButton = $(".addNewValidateAddBtn");  oAddCustomerButtonArrow = $(".arrow-right"); 
                arrRequiredFields.each(function () 
                {   
                    oRequiredField = $(this);
                    if(oRequiredField[0]) 
                    {
                        // 2nd Condition added to check the select dropdown for state
                        if (0 === oRequiredField.val().length || "Select" === oRequiredField.val())
                        {
                            boolIsValid = false;
                            return false;
                        }
                    }
                });
                    // If there is any error message present, do not enable the button
                    if(0 < $(".errorText").length){
                        boolIsNumberValid = false;
                    }
                    if(boolIsValid && boolIsNumberValid){
                        // Add customer button enabled
                        if(oAddCustomerButton[0]){
                            oAddCustomerButton.parent().removeClass("btn-complete-parent-disabled");
                            oAddCustomerButton.removeClass("disabled");
                            oAddCustomerButtonArrow.removeClass("disabled");
                            oAddCustomerButtonArrow.css("border-left","16px solid #056fab");
                            oAddCustomerButtonArrow.css("cursor","pointer");
                        }
                    }
                    else{
                        // Add customer button disabled
                        if(oAddCustomerButton[0]){
                            oAddCustomerButton.parent().addClass("btn-complete-parent-disabled");
                            oAddCustomerButton.addClass("disabled");
                            oAddCustomerButtonArrow.addClass("disabled");
                            oAddCustomerButtonArrow.css("border-left","16px solid #eee");
                            oAddCustomerButtonArrow.css("cursor","auto");
                        }
                    }
            }

            // Function to handle numerical values
            // If any non - numerical characters are entered, we show an invalid entry message
            // If a required field is blank, we show a message indicating that the field is blank
            // If a phone number is greater or less than 10 digits in length, we show a message indicating that the number is longer than expected
            function validateNumericalFields_ExactMatch(sValue, sErrorMessage, sBlankMessage, sPhoneDigitErrorMessage, boolIsRequired, sFieldClassName, sFirstSpaceErrorMessage){
                var oError = $('#'+sFieldClassName+"_error"), oParent = $('#closeMatch .'+sFieldClassName).parent(), sFilteredValue = sValue.replace(/[\s()-]/g,""); // Remove all spaces, - and () from the phone number field
                if(oParent[0]) {
                    if((boolIsRequired) && ("" === sValue)){
                        oParent.addClass("has-error");
                        if(oError){
                            oError.remove();
                        }
                        oParent.append("<div id='"+sFieldClassName+"_error' class='errorText'>"+sBlankMessage+"</div>" );
                    }
                    else if((" " === sValue) || (sValue !== $.trim(sValue))){
                        oParent.addClass("has-error");
                        if(oError){
                            oError.remove();
                        }
                        oParent.append("<div id='"+sFieldClassName+"_error' class='errorText'>"+sFirstSpaceErrorMessage+"</div>" );
                    }
                    // Handle the Phonenumber field separately since we allow the () and - in the phonenumber field
                    else if(isNaN(sValue) && "inputPhone" !== sFieldClassName){
                        oParent.addClass("has-error");
                        if(oError){
                            oError.remove();
                        }
                        oParent.append("<div id='"+sFieldClassName+"_error' class='errorText'>"+sErrorMessage+"</div>" );
                        
                    }
                    // Handle the Phonenumber field separately since we allow the () and - in the phonenumber field
                    else if("inputPhone" === sFieldClassName && (isNaN(sFilteredValue)))
                    {
                        oParent.addClass("has-error");
                        if(oError){
                            oError.remove();
                        }
                        oParent.append("<div id='"+sFieldClassName+"_error' class='errorText'>"+sErrorMessage+"</div>" );
                    }
                    // Fitering out the () and - from the number, check if all other characters are digits
                    // Phone Number must be exactly 10 Characters
                    // Zip Code must be exactly 5 Characters
                    else if(("inputPhone" === sFieldClassName && (sFilteredValue.length > 10 || sFilteredValue.length < 10) && (sFilteredValue.length !== 0 ))||
                            ("inputZip" === sFieldClassName && (sValue.length > 5 || sValue.length < 5))){
                        oParent.addClass("has-error");
                        if(oError){
                            oError.remove();
                        }
                        oParent.append("<div id='"+sFieldClassName+"_error' class='errorText'>"+sPhoneDigitErrorMessage+"</div>" );
                        
                    }
                    else{
                         oParent.removeClass("has-error");
                         if(oError){
                            oError.remove();
                        }
                    }
                }
                // All Field Check
                validateRequiredFields_ExactMatch();
            }
            
            // Function to verify whether all the required fields are filled before submitting the form
            function validateRequiredFields_ExactMatch() {
                $('#closeMatch .addressMatchbtn').addClass('disabled');
                // Iterate through all fields and check if there are any invalid entries. If yes, then return false    
                var arrRequiredFields = $("#closeMatch .required"), boolIsNumberValid = true,boolIsValid = true, oAddCustomerButton = $('#closeMatch .addressMatchbtn');
                arrRequiredFields.each(function ()  {   
                    oRequiredField = $(this);
                    if(oRequiredField[0]) {
                        if (0 === oRequiredField.val().length || "Select" === oRequiredField.val()){
                            boolIsValid = false;
                            return false;
                        }
                    }
                });
                    // If there is any error message present, do not enable the button
                    if(0 < $(".errorText").length){
                        boolIsNumberValid = false;
                    }
                    if(boolIsValid && boolIsNumberValid){
                        // Add customer button enabled
                        if(oAddCustomerButton[0]){
                            oAddCustomerButton.parent().removeClass("btn-complete-parent-disabled");
                            oAddCustomerButton.removeClass("disabled");
                        }
                    }
                    else{
                        // Add customer button disabled
                        if(oAddCustomerButton[0]){
                            oAddCustomerButton.parent().addClass("btn-complete-parent-disabled");
                            oAddCustomerButton.addClass("disabled");
                        }
                    }
            }

            initializeFieldValidations_Step3();
            initializeFieldValidations_ExactMatch();
            AIAPageMsg = 'false';
            function checkAIAPageMsg() {
                if(isSelectedAIA == 'true') {
                    AIAPageMsg = 'true';
                    handleBulkMsg();
                }
            }
            selectedRadioBtnVal = '';
            function clearMessage() {
                $('#addSite .messageText').text('');
                $('#closeMatch').modal('hide');
            }                                    
            
            function updateSelectCloseMatchRadio(slectedRadioVal) {
                selectedRadioBtnVal = slectedRadioVal;
            }
            function checkAddressExactMatch(sSiteName,SiteAddressLine,SiteLocation,SiteRoomFloor,SitePhone,SiteCity,StatePickList,SiteZip){
                if(SiteLocation == null || SiteLocation=='' ){
                    SiteLocation ='';
                }
                if(StatePickList == null || StatePickList==''){
                    StatePickList ='';
                }
                 var newSiteName =document.getElementById('{!$Component.siteMgmntPageId.SiteOverlay.UpdateSitesTable.SiteName}').value;              
                 var newSiteAddressLine =document.getElementById('{!$Component.siteMgmntPageId.SiteOverlay.UpdateSitesTable.SiteAddressLineid}').value; 
                 var newSiteLocation =document.getElementById('{!$Component.siteMgmntPageId.SiteOverlay.UpdateSitesTable.siteLocation}').value;
                 var newSiteRoomFloor =document.getElementById('{!$Component.siteMgmntPageId.SiteOverlay.UpdateSitesTable.siteRoomFloor}').value;
                 var newSitePhone =document.getElementById('{!$Component.siteMgmntPageId.SiteOverlay.UpdateSitesTable.sitePhone}').value;
                 var newSiteCity =document.getElementById('{!$Component.siteMgmntPageId.SiteOverlay.UpdateSitesTable.siteCity}').value;
                 var newStatePickList = document.getElementById('{!$Component.siteMgmntPageId.SiteOverlay.UpdateSitesTable.statePickList}').value;
                 var newSiteZip =document.getElementById('{!$Component.siteMgmntPageId.SiteOverlay.UpdateSitesTable.siteZip}').value;
                 if(newSiteName==sSiteName && newSiteAddressLine==SiteAddressLine && newSiteLocation==SiteLocation && newSiteRoomFloor==SiteRoomFloor && newSitePhone==SitePhone && newSiteCity==SiteCity && newStatePickList==StatePickList && newSiteZip==SiteZip) {
                                 clearMessage();            
                       } else {
                                callDoValidate();
                               }  
                }

            function callDoValidate() {
                if (isSelectedAIA == 'false') {
                    updateSelectRadio(selectedRadioBtnVal);
                } else {
                    updateSelectRadioAIA(selectedRadioBtnVal);
                }
            }
            
    
        function passSelectedSite(eleName) {
            $('[id*="tempVar"]').val(eleName);
            updateSiteTable();
        }

        function handleBulkMsg() {
            var msg = '{!$CurrentPage.parameters.display}';
            if (msg == 'err' || msg == 'invalid' || msg =='syncAIA' || msg == 'sync' || msg=='blank' || msg=='Async' || msg == 'AsyncServ' || AIAPageMsg == 'true' || msg == 'fileErr') {
                AIAPageMsg = 'false';
                displayBulkMsg();
            }
        }

        function handleSiteAvailError(bool) {
            if (bool == 'true') {
                handleConfigureSite();
            } else if (bool == 'false') {
                handleSiteAvailErrorMsg(isSelectedAIA);
            }
        }
        
        //Method for handling LATA Sites insertion: RK
        function handleLATASelectedSites(lataName) {
            handleLataSites(lataName);
        }
        
        function pageRefreshed() {
            $('.openSiteTabs').on('click', function () {
                $('#addaddress').toggleClass('hide', 'show');
            });
            $('#addSiteTabs').tab();
            initializeFieldValidations_Step3();
            initializeFieldValidations_ExactMatch();
            if('{!quote.Product_New_Name__c}' == 'AT&T Switched Ethernet Service'){
                $('.addInfoText').css('display','block');
            }
            bulkUploadBtnDisabled();
        }

        function openValidateModal() {
            $('#addaddress').toggleClass('hide', 'show');
            $('#validateModal').modal();
        }

        function openValidateModalForExisting() {
            $('#validateModal').modal();
        }

        function handleConfigureSite() {
            handleConfigureSitePage(generatedQuoteId);
            //Disable current tab code starts
            $("a[data-name='enterAddress']").parent('li').addClass("disabled");
            $("a[data-name='enterAddress']").removeAttr('data-toggle href');
            //Disable current tab code starts
            $("a[data-name='configSites']").parent('li').removeClass("disabled");
            $('a[data-name="configSites"]').attr({
                'data-toggle' : "tab",
                href : "#configSites"
            });
            $("a[data-name='configSites']").trigger("click");
        }

        function showModal() {
            $('#oppurtunityModal').modal('show');
        }

        $(".myfield").bind('blur keyup', function () {
            // validate
        });

        function chkReqFields() {
            $('.completeBtn').prop('disabled', false);
            if ($('.inputName').val().length > 0 &&
                $('.inputAdd').val().length > 0 &&
                $('.inputCity').val().length > 0 &&
                $('.inputZip').val().length > 0 &&
                $('.inputState').val() !== "Select" &&
                $('.inputPhone').val().length > 0) {
                $('.completeBtn').prop('disabled', false);
            } else {
                $('.completeBtn').prop('disabled', true);
            }
        }

        function validateButton(obj) {
            var flag = obj.checked;
            toggleButtons(flag);
        }
        
        function toggleButtons(flag){
            $("#SitesCtrlDiv :input[type=button]").each(function () {
                var input = $(this);
                if (flag) {
                    input.removeClass('disabled');
                    input.prop('disabled', false);

                } else {
                    input.addClass('disabled');
                    input.prop('disabled', true);
                }
            });
        }
    
    function disableEmailCheckBox(){
            if('{!quote.Product_New_Name__c}' == 'AT&T Managed Internet Service' || '{!quote.Product_New_Name__c}' == 'AT&T Virtual Private Network Service'){
                    var checkDiscardFlag = $("[id$=checkDiscardFlag]").val();
                    if('undefined' != typeof checkDiscardFlag && checkDiscardFlag == "true"){
                        $('#selectSiteTabCheckBox').prop("disabled","true");
                        $('#addNewSiteTabCheckBox').prop("disabled","true");
                        $('#bulkUploadTabCheckBox').prop("disabled","true");                                        
                        $('.bulkUploadTab').removeClass("ng-isolate-scope");        
                        $('.bulkUploadTab').addClass("disabled");                           
                    }
                    else{
                        $('#selectSiteTabCheckBox').removeAttr("disabled");
                        $('#addNewSiteTabCheckBox').removeAttr("disabled");
                        $('#bulkUploadTabCheckBox').removeAttr("disabled");                                 
                        $('.bulkUploadTab').removeClass("disabled");        
                        $('.bulkUploadTab').addClass("ng-isolate-scope");   
                        $('.bulkUploadTab a').attr("data-toggle","tab");
                        $('.bulkUploadTab a').attr("href","#bulkUpload");
                    }
                }
        }
        
        function disableValidate(){
            var isSelectAll = $('[id$=selectAllId]').is(':disabled');
            if(isSelectAll != 'undefined' && isSelectAll != null && isSelectAll == true){
                $('[id$=configureNewBtnId]').prop('disabled',true);
            }
        }
        function retreiveTokenAddSiteAction(){
            $('[data-toggle="popover"]').popover(); 
            /* Change Content on selecting retreiveTokenAddSite */
            $('a[data-toggle="tab"]').on('shown.bs.tab', function (e) {
              var target = $(e.target).attr("href") // activated tab
                if(target != null && "undefined" != typeof target && target == "#retrieveToken"){
                    $("#addSiteStaticContent").hide();
                    $("#addSiteStaticContentOnRetrieve").show();
                    $('#selectSiteTabCheckBox,#addNewSiteTabCheckBox,#bulkUploadTabCheckBox').prop( "checked", false);
                    setEmailFlag(false);
                }
                else{
                    $("#addSiteStaticContent").show();
                    $("#addSiteStaticContentOnRetrieve").hide();
                    $(".toggleOnRetrieve").removeClass("blue_hr_OnRetrieve");
                }
            });
            if("undefined" != typeof $(".retreiveTokenSiteName") && $(".retreiveTokenSiteName") != null && $(".retreiveTokenSiteName").length>0){                       
                $(".toggleOnRetrieve").addClass("blue_hr_OnRetrieve");
                /*$("div#retrieveToken .ng-scope").addClass('retrieveToken');*/
            }
            else{
                $("div#retrieveToken .ng-scope").removeClass('retrieveToken');
            }
        }
        
        var onpageload = true;
        $(document).ready(function () {
            //mode is Global Variable declared in Buyflow page to identify which page is loaded
            //Using this variable to prevent below methods from loading in customer Information and product selection pages
            if(mode == 'siteinfo'){
                pageRefreshed();
                toggleButtons(false);    
                handleBulkMsg();
                Visualforce.remoting.timeout = 120000; // Set timeout at page level QC247214
                callEligibleSitesDataTable('loadDefault');
                if('{!quote.Product_New_Name__c}' != 'AT&T Switched Ethernet Service'){
                    $('.addInfoText').css('display','none');
                }else
                    $('.addInfoText').parent().css({'margin-top': '35px' , 'margin-bottom': '35px'})
                
                if($('#enterAddress').hasClass('active') && '{!FirstTimeUserASE}'== 'false' && '{!quote.Product_New_Name__c}' == 'AT&T Switched Ethernet Service'){
                    setTimeout( function(){ 
                        $('#addInfoDialog').modal('show'); 
                    }  , 1000 );  
                }  
                disableEmailCheckBox();
                if('{!quote.Product_New_Name__c}' == 'AT&T Managed Internet Service' || '{!quote.Product_New_Name__c}' == 'AT&T Virtual Private Network Service'){
                    var checkDiscardFlag = "{!checkDiscard}";
                    if('undefined' != typeof checkDiscardFlag && checkDiscardFlag == "true"){
                        $('#selectSiteTabCheckBox').prop("disabled","true");
                    }
                }
            }
            setTimeout(function(){ 
                onpageload = false;
            }, 1000);                       
        });
                
        
        vasaITPAErr = {!checkServErr};
        function resetSearch() {
            if(!vasaITPAErr){
                chkValArr=[];
            }
            searchText = $('.eligibleSitesSearch').val(''); 
        }
        
        function callRetrieve(){
        var showRelatedSites = $('[id$=showRelatedSites]').val();
        console.log('@@@@showRelatedSites '+showRelatedSites);
            if(showRelatedSites != 'undefined' && showRelatedSites == 'true'){
                $('#retrieveToken').removeClass('retrieveToken');
                $('#retrieveToken').addClass('retrieveTokenSingleSite');
                $('#addSitetoQuote').removeClass('addSitetoQuotestyle');
            }
            else{
                $('#retrieveToken').addClass('retrieveToken');
                $('#retrieveToken').removeClass('retrieveTokenSingleSite');
                $('#addSitetoQuote').addClass('addSitetoQuotestyle');
            }
            if($('.validationErrorTable').length>0 && $('.validationErrorTable tbody tr').length>8){
                if(navigator.userAgent.indexOf("Chrome") == -1 )
                {
                    $(".validationErrorTable").addClass("validationErrorTable_scroll_moz validationErrorTable_scroll");
                }  
                else{
                    $(".validationErrorTable").addClass("validationErrorTable_scroll");
                }
            }
            else{
                $(".validationErrorTable").removeClass("validationErrorTable_scroll validationErrorTable_scroll_moz");
            }
        }

        function callEligibleSitesDataTable(searchCalled) {
            var errormessage = $('.messageText').text();
            /*if(errormessage != null && errormessage != '' && errormessage == 'Errors'){
                refershSiteSelectedActionJS();
            }*/
            $('.messageText:contains("success")').attr('style','color:green');
            $('.messageText:contains("unsuccess")').attr('style','color:#cc0000')
            $('.eligibleSitesDataTable').dataTable().fnDestroy();
            siteFields = ['Id', 'Site_Name__c', 'Address_Line__c', 'ConCatLoctionRoom__c', 'City__c', 'State__c', 'Zip_Code__c', 'Phone__c'];
            searchTerm = '';
            var aoColumns = [];
            if(searchCalled == 'loadSearch'){
                searchTerm = $('.eligibleSitesSearch').val();
            } else {
                resetSearch();
            }           
            for (var i = 0; i < siteFields.length; i++) {
                aoColumns.push({'mData': siteFields[i]});
            }
             $('.eligibleSitesDataTable thead tr th:first-child').html('<div class=""><input class="chkbox" id="checkboxAll" name="checkboxAll" type="checkbox"><label class="css-label radGroup1 clr chklbl" for="checkboxAll" style="margin-left:5px;"></label></div>');
           
            
            /************************ Data table code starts ******************************/
           
            $('.eligibleSitesDataTable').dataTable({
                "iDisplayLength": 8,
                "oLanguage": {
                    "sInfo": "Showing _START_ - _END_ of _TOTAL_",
                    "sProcessing": '<div class="waitingSearchDiv" id="loadingDatatable" style="background-color: #fbfbfb;height: 10000px;opacity: 0.65;width: 10000px;position: fixed;z-index: 999999;left: 0;top: 0;"><div class="waitingHolder" style="top: 40%; left: 50%; position: fixed;"><img class="waitingImage" src="" title="Please wait" alt="" /></div></div>'
                },
                'bPaginate': true,
                'sPaginationType': 'full_numbers',
                'aoColumns': aoColumns,
                'bProcessing': true,
                'bServerSide': true,
                'bFilter': false,
                'bDestroy': false,
                'bLengthChange': false,
                'sAjaxSource': 'fakeUrl',
                'fnInitComplete': function (aoData) {
                    if(typeof(Storage) !== "undefined") {
                        if (typeof sessionStorage.getItem('quoteStateId_page_'+generatedQuoteId) != 'undefined' && sessionStorage.getItem('quoteStateId_page_'+generatedQuoteId) != null){
                            var quotePageNum = sessionStorage.getItem('quoteStateId_page_'+generatedQuoteId);
                            var pageNum =0;
                            if(quotePageNum != null && typeof quotePageNum != 'undefined'){
                                pageNum = parseInt(quotePageNum)-1;
                            }                           
                                this.fnPageChange(pageNum); 
                                setTimeout(function(){$('.paginate_active').trigger('click'),200});
                            sessionStorage.removeItem('quoteStateId_page_'+generatedQuoteId);
                        }                           
                    }
                    else{
                        this.fnPageChange('first'); 
                    }
                },
                'fnServerData': function(sSource, aoData, fnCallback) {
                    //Set the search text in aoData
                    aoData.push({"name":"searchText","value":searchTerm});
                    //Set the quote Id in aoData
                    aoData.push({"name":"quoteId","value":generatedQuoteId});
                    console.log('aoData::: '+JSON.stringify(aoData));
                    // Call the @RemoteAction JavaScript function
                    SiteAddressInformationController.fetchCustomerSiteRecords(aoData, function(result, event) {
                        if (event.type != 'exception') {
                            for (var i = 0; i < result.aaData.length; i++) {
                                var r = result.aaData[i];
                                for (var j = 0; j < siteFields.length; j++) {
                                    var field = siteFields[j];
                                    if (r[field] == undefined || r[field] == null || r[field] == '') {
                                        // DataTables pops a dialog for undefined values
                                        r[field] = '';
                                    }
                                }
                            }                                    
                            // Call back into the DataTable function
                            fnCallback(result);
                        } else {
                        }
                        
                    });
                },
                'fnDrawCallback': function (oSettings) {
                    concatAddress();
                    $("#checkboxAll").parent('div').parent('th').removeAttr('class aria-controls role aria-label');
                    var tdData = $("#checkboxAll").parent('div').parent('th').html();
                    $(".eligibleSitesDataTable thead tr th:first-child").replaceWith( "<td>"+tdData+"</td>" );
                    addCheckbox(); // Inserting checkboxes in first column
                    //selectAllAddressChange();
                    searchText = $('.eligibleSitesSearch').val(); 
                    $('#selectExisting .siteAddressValidateBtn').attr('disabled', 'true');
                    // $('#selectExisting .eligibleSitesDataTable tbody input[type="checkbox"]').on('click', function(){isChkTrue('oneByOne'); });
                    isChkTrue('oneByOne');
                    loadImageFun(); 
                    /*showSiteDetailsPopUp();*/                        
                }                  
            });
            /************************ Data table code ends ******************************/
                $('.eligibleSitesDataTable .reorder_btn').remove(); 
                $('.eligibleSitesDataTable thead th').not('.eligibleSitesDataTable thead th:first-child').addClass('sorting').append('<div class="reorder_btn"></div>');
                $('#enterAddress .dataTables_paginate').addClass('pagination');
                $('#enterAddress .dataTables_filter:not(:last)').remove();                
                $(".errorText").remove();
                // isChkTrue('oneByOne');    
                disableEmailCheckBox();
                disableValidate();
        retreiveTokenAddSiteAction();           
        }
        
        function isChkTrue(clickType) {
            if(clickType == 'oneByOne'){
                if(chkValArr.length === 0){
                // if($('.chkbox:checked').length > 0){
                    $('#selectExisting .siteAddressValidateBtn').prop('disabled', 'true');
                    $('#selectExisting .arrow-right').css("border-left","16px solid #eee");
                    $('#selectExisting .arrow-right').css("cursor","auto");
                    
                } else {
                    $('#selectExisting .siteAddressValidateBtn').removeAttr('disabled');
                    $('#selectExisting .arrow-right').css("border-left","16px solid #056fab");
                    $('#selectExisting .arrow-right').css("cursor","pointer");
                }
            }             
            
        }

        function addCheckbox() {
            $('.eligibleSitesDataTable tbody tr td:first-child').not('td.dataTables_empty').each(function(){ 
                var custId = $(this).text();  
                var createField = '<input type="checkbox" name="selected" id="'+custId+'" value="val_'+custId+'" class="chkbox"/>';
                $(this).html(createField);                
            });
            $.each( chkValArr, function( key, value ) {
              $('input:checkbox[id="'+value+'"]').prop('checked', true);
            });   
            
            $('thead input[id="checkboxAll"]').on('click', function(e){                    
                        if(this.checked){
                             $('#EligibleSitesTable tbody input[type="checkbox"]:not(:checked)').trigger('click');
                          } else {
                             $('#EligibleSitesTable tbody input[type="checkbox"]:checked').trigger('click');
                          }
                          
                         e.stopPropagation();
                });
            
            $('input.chkbox').not('#checkboxAll').change(function(e){
                if($(this).is(':checked')){
                    var chkVal = $(this).attr('id');
                    chkValArr.push(chkVal); 
                    isChkTrue('oneByOne');
                } else {
                    var chkValRemove = $(this).attr('id');
                    chkValArr.splice( $.inArray(chkValRemove , chkValArr), 1 );
                    isChkTrue('oneByOne');
                }    
                updateDataTableSelectAllSites();
                e.stopPropagation();
            });   
            updateDataTableSelectAllSites();
               
        }
        
        function updateDataTableSelectAllSites(){
            var $table             = $('#EligibleSitesTable').DataTable();
            var $chkbox_all        = $('tbody input[type="checkbox"]', $table);
            var $chkbox_checked    = $('tbody input[type="checkbox"]:checked', $table);
            var chkbox_select_all  = $('thead input[id="checkboxAll"]', $table).get(0);
            if($chkbox_checked.length === 0){
                chkbox_select_all.checked = false;
                if('indeterminate' in chkbox_select_all){
                    chkbox_select_all.indeterminate = false;
                }
            } 
            else if ($chkbox_checked.length === $chkbox_all.length){
                chkbox_select_all.checked = true;
                if('indeterminate' in chkbox_select_all){
                    chkbox_select_all.indeterminate = false;
                }
            }
            else if($chkbox_checked.length >0 &&  $chkbox_checked.length < $chkbox_all.length){
                chkbox_select_all.checked = false;
            }
            else {
                //chkbox_select_all.checked = true;
                if('indeterminate' in chkbox_select_all){
                    //chkbox_select_all.indeterminate = true;
                }
            }
        }
        
        function selectAllAddressChange() {                        
            $('input.selectAllChkbox').change(function(e){
                if($('input.selectAllChkbox').is(':checked')){ 
                    $('input.chkbox').each(function(){ 
                        $(this).prop('checked', true);
                        //$(this).trigger('change');
                    });
                }
                else{
                    $('input.chkbox').each(function(){ 
                        $(this).prop('checked', false);
                        //$(this).trigger('change');
                    });
                }
                        isChkTrue('oneByOne');
                         e.stopPropagation();
            });
        }

        function concatAddress() {
            $('.eligibleSitesDataTable tbody tr td:nth-child(3)').each(function(){ 
                var boom1 = $(this).text();
                if (boom1.length > 14) {
                    $(this).text(boom1.substring(0, 14)).append('...');
                }
            });
        }

        $('.eligibleSitesSearch').on('keyup', function(ev) {
            ev.stopPropagation();
            ev.preventDefault();
            setTimeout(function() {
                callEligibleSitesDataTable('loadSearch');
            }, 3000);
        });
        
        function showSiteDetailsPopUp(){
            $('.eligibleSitesDataTable tbody tr td:nth-child(2)').on('click',function(){
                siteId=$(this).prev().children().attr('id');
                modalBlock(siteId);
            });
        }
        function navigateToDashboard() {
            window.open('{!$Site.Prefix}/apex/PortalDashboard_UI', '_self');
        }
        
        function exportSelectedSite() {
            window.open('{!$Site.Prefix}/apex/exportSelectedSites?quoteId='+generatedQuoteId, '_blank');
        }
        
        function callFakeBtn() {
            $('.callFakeBtn').trigger('click');
        }
        var noOfUploadedSites , allowedNoOfSites={!$Label.BulkUploadLimit};   
        function callSelectSite() {
            sessionStorage.setItem('quoteStateId_page_'+generatedQuoteId,$('.paginate_active').text());
            var addedSitesCount=parseInt($('.siteAddText').text().split(' ')[0]);
            var totalSelectedSites = chkValArr.length + addedSitesCount;
            if(totalSelectedSites > allowedNoOfSites){
                $('#sitesMsgId').text('The quote must have no more than '+allowedNoOfSites+' sites to proceed'); 
                $('#maxSitesRestrictModal').modal('show');
            }
            else{
                var quoteIdString = chkValArr.join(";"); 
                if (isSelectedAIA == 'false')
                    selectSiteExecute(quoteIdString);
                else
                    selectSiteForAIAExecute(quoteIdString);    
            }
                
        }
        function callValidateSiteExecute(){
            var totalSelectedSites = parseInt($('.siteAddText').text().split(' ')[0]);
            if(totalSelectedSites >= allowedNoOfSites){
                $('#sitesMsgId').text('The quote must have no more than '+allowedNoOfSites+' sites to proceed'); 
                $('#maxSitesRestrictModal').modal('show');
            }
            else
                validateSiteExecute();
        }
               
        myVar = setInterval(function(){myTimer()}, 2000);
       
        function myTimer() {
            var isContinuePollingX = '{!doPolling}';
            if(isContinuePollingX == 'false') {
                myStopFunction();
            }else{
                startPollingFn();
            }
        }

        function myStopFunction() {
            clearInterval(myVar);
        }
        
        function ReadFileFn(){            
            var addedSitesCount=parseInt($('.siteAddText').text().split(' ')[0]);
            var totalSelectedSites = addedSitesCount + noOfUploadedSites ;
            if(totalSelectedSites > parseInt(allowedNoOfSites)){
               $('#sitesMsgId').text('The quote must have no more than '+allowedNoOfSites+' sites to proceed'); 
               $('#maxSitesRestrictModal').modal('show');            
            }else{            
                if (isSelectedAIA == 'false'){ 
                    ReadFile();        
                }else{
                    ReadFileForAIA();
                }
            }
        }
        
        bulkUploadBtnDisabled();
        function bulkUploadBtnDisabled(){
            $('#enterAddress #bulkUpload .siteAddressValidateBtn').addClass('disabled');
            $('#enterAddress #bulkUpload .siteAddressValidateBtn').css("outline","none"); 
            $('#enterAddress #bulkUpload .arrow-right').addClass('disabled');
            $('#enterAddress #bulkUpload .arrow-right').css("border-left","16px solid #eee");
            $('#enterAddress #bulkUpload .arrow-right').css("cursor","auto");
            $('#enterAddress #bulkUpload .bulkUploadSiteAdd').on('change', function(){
                var siteAddressValidateBtnVal = $(this).val();
                $('#enterAddress #bulkUpload .siteAddressValidateBtn').addClass('disabled');
                $('#enterAddress #bulkUpload .arrow-right').addClass('disabled');
                if($('#enterAddress #bulkUpload .bulkUploadSiteAdd').val().length > 0){
                    $('#enterAddress #bulkUpload .siteAddressValidateBtn').removeClass('disabled');
                    $('#enterAddress #bulkUpload .arrow-right').removeClass('disabled');
                    $('#enterAddress #bulkUpload .arrow-right').css("border-left","16px solid #056fab");
                    $('#enterAddress #bulkUpload .arrow-right').css("cursor","pointer");
                } else {                
                    $('#enterAddress #bulkUpload .siteAddressValidateBtn').addClass('disabled');
                    $('#enterAddress #bulkUpload .arrow-right').addClass('disabled');
                    $('#enterAddress #bulkUpload .arrow-right').css("border-left","16px solid #eee");
                    $('#enterAddress #bulkUpload .arrow-right').css("cursor","auto");
                }
            });
        }
        
        function onchangeLocationPicListFun(inpObj, cmd){
            
            if(inpObj.value == 'Building'){
                document.getElementById("j_id0:j_id267:siteMgmntPageId:form-2:j_id339").setAttribute("maxlength","10");
                document.getElementById("j_id0:j_id267:siteMgmntPageId:SiteOverlay:UpdateSitesTable:j_id482").setAttribute("maxlength","10");
            }
            else if(inpObj.value == 'Room'){
                document.getElementById("j_id0:j_id267:siteMgmntPageId:form-2:j_id339").setAttribute("maxlength","9");
                document.getElementById("j_id0:j_id267:siteMgmntPageId:SiteOverlay:UpdateSitesTable:j_id482").setAttribute("maxlength","9");
                
            }
            
            else if(inpObj.value == 'Floor'){
                document.getElementById("j_id0:j_id267:siteMgmntPageId:form-2:j_id339").setAttribute("maxlength","9");
                document.getElementById("j_id0:j_id267:siteMgmntPageId:SiteOverlay:UpdateSitesTable:j_id482").setAttribute("maxlength","9");
            }
            else{
                document.getElementById("j_id0:j_id267:siteMgmntPageId:form-2:j_id339").setAttribute("maxlength","255");
                document.getElementById("j_id0:j_id267:siteMgmntPageId:SiteOverlay:UpdateSitesTable:j_id482").setAttribute("maxlength","255");
            }
            document.getElementById("j_id0:j_id267:siteMgmntPageId:form-2:j_id339").value="";
            document.getElementById("j_id0:j_id267:siteMgmntPageId:SiteOverlay:UpdateSitesTable:j_id482").value="";           

        }
        $.urlParam = function(name){
            var results= new RegExp('[\?&]' + name + '=([^&#]*)').exec(window.location.href);
            if (results) {
                return results[1];
            } else {
                return 0;
            }
        }

        if($.urlParam('addNewAddress')){
            $("#addNewSiteId").trigger("click");      
        }
            //Function call triggered to open review Adrress modal
            function openAddressCorrectionModal(addressCorrectionModalFlag) {
                $('#closeMatch').modal('show');
                if(addressCorrectionModalFlag){
                    $("#closeMatch .addressFields :input").each(function(){
                        $(this).prop('disabled',true);
                    });
                    /*$('#closeMatch .modal-body').css('height','540px');*/
                    $('#closeMatch .modal-body').css('height','615px');
                    $('#closeMatch .addressMatchbtn').addClass('disabled');
                }else{
                     $('#closeMatch .addressCorrectionContentOnModal').css('display','none');
                     $('#closeMatch .serviceUnavailableContentonModal').css('display','block');
                     $('#closeMatch .modal-body').css('height','360px');                
                }
            }
            // Function to check whether the field is empty or whether the field contains preceeding white space
            // If the field contains white space or preceeding white space, we show an error message
            // If a required field is blank, we show a message indicating that the field is blank
            function validateEmptyFields_Step3(sClassName,sErrorMessage, sBlankMessage, boolIsRequired) {
                var sValue = "";
                var oField = $("#addSite ."+sClassName);
                if(sClassName != null && typeof sClassName != 'undefined' && sClassName == 'retreiveTokenSiteName'){
                    oField = $("#retrieveToken ."+sClassName);
                }
                var oParent = oField.parent();
                if(oField[0]){
                    // Check if the field contains blank value as the first character
                    sValue = oField.val();
                    if((boolIsRequired) && ("" === sValue || "Select" === sValue)){
                        // Append the error message in case the field is not filled
                        if(oParent[0]){
                            // Remove all spaces and () from the string
                            $(".errorText."+sClassName.replace(/\s/g,"_").replace(/["'()]/g,"")+"_error").remove();
                            $('#'+sClassName+'_error').text(sBlankMessage);
                            oParent.addClass("has-error");
                        }
                    }
                    //else if((" " === sValue) || (sValue !== $.trim(sValue)))
                    else if((" " === sValue) || (sValue !== sValue.trimLeft())){
                        // Append the error message in case the field is wrongly filled
                        if(oParent[0]){
                            // Remove all spaces and () from the string
                            $(".errorText."+sClassName.replace(/\s/g,"_").replace(/["'()]/g,"")+"_error").remove();
                            $('#'+sClassName+'_error').text(sBlankMessage);
                            oParent.addClass("has-error");
                        }
                    }
                    else{   
                        // Remove the error message
                        if(oParent[0]){
                            oParent.removeClass("has-error");
                            // Remove all spaces and () from the string
                            $(".errorText."+sClassName.replace(/\s/g,"_").replace(/["'()]/g,"")+"_error").remove();
                            $('#'+sClassName+'_error').text(' ');
                        }
                    }
                }
                // All Field Check
                validateRequiredFields_Step3();
            }
            // Function to check whether the field is empty or whether the field contains preceeding white space
            // If the field contains white space or preceeding white space, we show an error message
            // If a required field is blank, we show a message indicating that the field is blank
            function validateEmptyFields_ExactMatch(sClassName,sErrorMessage, sBlankMessage, boolIsRequired) {
                var sValue = "",oField = $("#closeMatch ."+sClassName), oParent = oField.parent();
                if(oField[0])
                {
                    // Check if the field contains blank value as the first character
                    sValue = oField.val();
                    if((boolIsRequired) && ("" === sValue) || ("Select" === sValue)){
                        // Append the error message in case the field is not filled
                        if(oParent[0]){
                            // Remove all spaces and () from the string
                            $(".errorText."+sClassName.replace(/\s/g,"_").replace(/["'()]/g,"")+"_error").remove();
                            oParent.addClass("has-error").append("<p class='errorText "+sClassName.replace(/\s/g,"_").replace(/["'()]/g,"")+"_error'>"+ sBlankMessage +"</p>");
                        }
                    }
                    //else if((" " === sValue) || (sValue !== $.trim(sValue)))
                    else if((" " === sValue) || (sValue !== sValue.trimLeft())){
                        // Append the error message in case the field is wrongly filled
                        if(oParent[0]){
                            // Remove all spaces and () from the string
                            $(".errorText."+sClassName.replace(/\s/g,"_").replace(/["'()]/g,"")+"_error").remove();
                            oParent.addClass("has-error").append("<p class='errorText "+sClassName.replace(/\s/g,"_").replace(/["'()]/g,"")+"_error'>"+ sErrorMessage +"</p>");
                        }
                    }
                    else{   
                        // Remove the error message
                        if(oParent[0]){
                            oParent.removeClass("has-error");
                            // Remove all spaces and () from the string
                            $(".errorText."+sClassName.replace(/\s/g,"_").replace(/["'()]/g,"")+"_error").remove();
                        }
                    }
                }
                // All Field Check
                validateRequiredFields_ExactMatch();
            }
            
        function openRemoveAddressPop(action) {         
            if(action != null && action == 'remove'){
                
                var checkremoveFlag = {!removePopupOnLoadFlag};
                if(checkremoveFlag){
                    $('.goToSamePage').show();
                $('.removeSiteOnDiscardOverlay').modal();
                }else{
                    callRemoveFunction();
                }
                
            }
            
        }
        
        function showUploadMultipleRetrieve(showBulk){
            if(showBulk != null && showBulk == 'true'){
                showUploadMultipleRetrieveAction(showBulk);
            }
            else{
                hideUploadMultipleRetrieveAction(showBulk);
            }
            return false;
        }
        
        function disableTokenID(){
            $('.tokenIdInput').prop('readonly',true);
        }
        function isBatchCompleted(){
            var pollingvar = $('[id$=tokenBulkBatchPolling]').val();
            var offlineProcessing = $('[id$=retrieveTokenOffline]').val();
            if(offlineProcessing == 'undefined'){
                offlineProcessing = 'false';
            }
            if(pollingvar == 'undefined'){
                pollingvar = 'false';
            }
            console.log('pollingvar ===='+pollingvar);
            if (offlineProcessing == 'true') {
                console.log('offlineProcessing if ===='+offlineProcessing);
                redirectToOfflinePageAction();
            }
            else if (pollingvar == 'false') {
                console.log('pollingvar if ===='+pollingvar);
                checkBatchStatus();
            }else{
                console.log('pollingvar else ===='+pollingvar);
                onRetrieveBatchCompletion();
            }
        }
        function removeSigleSiteSpace(){
            $('.retreiveTokenAddSite').css('display','none');
        }
        
    </script>
    
    <script>
        $('#enterAddress').on('click',function(){
            createLog('Enter Address');
        });
    </script>    
</apex:page>