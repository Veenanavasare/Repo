<apex:page controller="AddNewCustomerController" showChat="false" name="Add New Customer" cache="true" docType="html-5.0" standardStylesheets="false" sidebar="false" showHeader="false" id="AddCustpge">
    <apex:include pageName="PortalDesignHeader_UIUX" id="PortalDesignHeader" />
    <apex:includeScript value="{!$Resource.jqueryeditable}" />
    <style>
    
    .disableCheckBox{ 
        filter:grayscale(100%) invert(20%);
        cursor: none !important;
        pointer-events: none !important;
    }
        /*DEC 12 - for leon*/
        .tableHeaderRow td{
            cursor: pointer;
        }/*End DEC 12*/
    
        input[type="submit"] {
            margin: 0 10px;
            padding: 10px 20px;
            font-family: clearviewattregular;
            color: #fff;
            background: #056fab;
            border: 0;
            -webkit-border-radius: 4px;
            border-radius: 4px;
            width: auto;
        }
        input[type="submit"]:hover {
            background: #3bc1f4;
        }
        .add_state_input_div .adjust-select-small {
            float: left;
            top: 0 !important;
            width: 100% !important;
        }
        input[type="submit"].add_site_btn {
            position: relative;
            top: 0;
            padding: 4px 10px;
            width: 100px;
            font-size: 0.875em;
        }
        #tbody_added_sites_here {
            display: table-row-group;
        }
        .add_sites_tbody input.add_site_loc2 {
            width: 21% !important;
            margin-left: 5px;
            margin-top: -2px;
        }
        .btn_deactivate_user {
            margin: 0 10px 0;
            padding: 10px 20px !important;
            font-family: clearviewattregular;
            color: #fff;
            background: #056fab;
            border: 0 !important;
            height: 36px !important;
            -webkit-border-radius: 4px;
            width: auto !important;
        }
        h1 {
            font-family: omnesatt_iiregular;
        }
        /* Begin Add Sites table styles*/
        #add_site_table td {
            width: 12.5%;
        }
        #add_site_table > thead > tr.tableHeaderRow {
            background-color: #fff;
            border: 1px solid #ddd;
        }

        #add_site_table > thead > tr.tableHeaderRow > td {
            border-right: 1px solid #ddd;
            padding: 11px 8px 0px 8px;
        }

        #add_site_table > thead > tr.tableHeaderRow > td.noBorders {
            border-right: 0;
        }
        /* End Add Sites table styles*/
        input[type="file"] {
            font-family: clearviewattregular;
            border: 0;
            -webkit-border-radius: 4px;
            border-radius: 4px;
            width: 279px;
        }
        .reorder_btn {
            top: -20px;
        }
        .reorderlink {
            margin: 6px 0 0 0;
            display: block;
        }
        .errorText {
            color: #cf2a2a !important;
            font-weight: bold;
        }
        .searchBlock {
            float: left;
        }
        .searchBlock .manage_user_search_row {
            margin: 0;
        }
        .bulkUploadBlock {
            float: right;
        }
        .m-t-20 {
            margin-top: 20px;
        }
        .disabled-btn {
            pointer-events: none;
            cursor: not-allowed;
            filter: alpha(opacity=65);
            -webkit-box-shadow: none;
            box-shadow: none;
            opacity: .65;
        }
        .dataTables_length {
            display: none;
        }
        .dataTables_info {
            /*bottom: 22px; */
            /* position: absolute; */
            width: 50%;
            /* right: 180px; */
            float: left;
        }
        #site_table_wrapper .dataTables_paginate {
            float: right;
            margin: auto;
        }
        #site_table_wrapper .pagination > a {
            padding: 5px 10px;
            font-family: omnes_att_iimedium;
            line-height: 1.125em;
            color: #056fab;
            margin-left: 5px;
            background: #fff;
            border: 1px solid #ccc;
        }
        .paginate_enabled_previous,
        .paginate_enabled_next {
            cursor: pointer;
        }
        .paginate_disabled_previous,
        .paginate_disabled_next {
            cursor: no-drop;
        }
        /* Begin Add Site Table styles */
        .add_sites_location {
            float: left;
            width: 50%;
        }
        .add_sites_location input {
            width: 60%;
            margin: -5px 0px -5px 25px;
        }
        .addSiteChkLbl {
            width: 45px;
        }
        .add_sites_location select,
        .add_sites_state select {
            height: 30px;
            margin-top: -5px;
        }
        .add_sites_state select {
            width: 95%;
            margin-top: 0;
        }
        /* End Add Site Table styles */
        /*CSS for removing the select dropdown icon */
        .styled-select-small select {
            -webkit-appearance: none;
            -moz-appearance: none;
            appearance: none;
            padding: 0 4px;
            width: 100%;
            height: 24px !important;
            line-height: 20px;
            border: 0;
            border-radius: 0;
            -webkit-appearance: none;
            background: transparent;
            cursor: pointer;
        }
        
        .completeBtn{
            margin-left: 0 !important;
        }
        #add_site_table div.add_site_location_adjust > .styled-select-small.adjust-select-small {
            margin-top: -2px;
            margin-left: 10px;
            background-size: 30px;
            height:26px;
        }
        .zipInput {            
            margin-top: 2px;
        }
        input.completeBtn {
            padding: 7px 20px !important;
        }
        input.disabled-btn {
            color: #333;
            background: #eeeeee;
        }
        .user_badge {
            margin-top: 6px !important;
        }
        .paginate_button_disabled, .paginate_disabled_previous, .paginate_disabled_next {
            color: #cfcfcf !important;
        }
        .paginate_disabled_previous, .paginate_disabled_next {
            cursor: no-drop;
            display: none;
        }
        
        .search_user_container {
            height: 25px !important;
        }

        .check_next_step_label {white-space: nowrap;}
        .dropdownStyle{
            width: 100%;
            height: 33px !important;
        }
        .styled-select-small{
            background-size:40px;
        }
        #manage_content .message tbody tr:nth-child(odd){
            background: none;
        }        
        #manage_content .message .messageText {
            color: #ff7700 !important;
        }  
        input.editLocationFloor{
            width: 40px;
            float: right;
        }
        .editLocationDropdown select{
            width: 108px;         
        }
        </style>
    <script>        
        function validateInputFields(event, thisEle, sFieldName, sRequired) {
            //This will prevent the keyup on press of Tab
            var keyCode = event.keyCode || event.which;
            if(keyCode == 9){ 
                return;
            } 
            $(".errorText." + sFieldName).remove();        
            if (/^\s/.test(thisEle.value)) {
                $(thisEle).after("<p class='errorText " + sFieldName + "'>Field Cannot Start with a space</p>");         
            } 
            else if ('' === thisEle.value && sRequired === 'Required'){
                $(thisEle).after("<p class='errorText " + sFieldName + "'>Field cannot be blank</p>");                
            }
            return;
        }
    </script>
    <div class="content_container">
        <!-- angular templating content will be injected here -->
        <!-- ngView:  -->
        <div ng-view="" class="ng-scope">
            <!-- HERO MODULE -->
            <div id="hero_banner" class="hero_manage jumbotronContainer ng-scope">
                <div class="row">
                    <div class="col-sm-12"></div>
                </div>
            </div>

            <!-- CONTENT MODULE -->
            <div id="manage_content" class="ng-scope" ng-controller="AddCustomerController as addCustomer">
                <apex:form id="theForm">
                    <apex:pageBlock id="page1">
                        <apex:pageMessages ></apex:pageMessages>
                        <div class="row add_new_customer_header">
                            <div class="col-xs-12 col-md-12">
                                <h1>{!$Label.Add_New_Customer}</h1>
                            </div>
                        </div>
                        <p class="whiteSpaceError"></p>
                        <div class="row" id="pageBlockSection1">
                            <div class="col-xs-12 col-md-4 col-lg-4">
                                <ul>
                                    <li>
                                        <label>{!$Label.Business_Name}</label>
                                    </li>
                                    <li>
                                        <apex:inputText value="{!BusinessName}" styleClass="reqField" onkeyup="validateInputFields(event, this, 'BusinessName', 'Required')" onblur="validateInputFields(event, this, 'BusinessName', 'Required');" maxlength="50">
                                            <apex:actionsupport action="{!ACTION2}" event="onmouseout" rerender="Complete,Save" oncomplete="cbx();">
                                            </apex:actionsupport>
                                        </apex:inputText>
                                    </li>
                                    <li>
                                        <label>{!$Label.Address}</label>
                                    </li>
                                    <li>
                                        <apex:inputText value="{!Address}" styleClass="reqField" onkeyup="validateInputFields(event, this, 'Address', 'Required')" onblur="validateInputFields(event, this, 'Address', 'Required');"  maxlength="150">
                                            <apex:actionsupport action="{!ACTION4}" event="onmouseout" rerender="Complete,Save,page2,pb1,Form2,manage_users_table,Address1,Address2" oncomplete="cbx();">
                                            </apex:actionsupport>
                                        </apex:inputText>
                                    </li>
                                    <li>
                                        <div class="row">
                                            <label class="col-xs-6">Location (Optional)</label>
                                            <label class="col-xs-6"></label>
                                        </div>
                                    </li>
                                    <li>
                                        <div class="row">
                                            <div class="col-xs-6">                                               
                                                <apex:selectList value="{!Suite}" label="Location" id="siteLocation" multiselect="false" size="1" styleClass="form-control dropdownStyle required styled-select-small" onChange="cbx();" >
                                                    <apex:selectOptions value="{!LocationPicklist}" id="sitePickLocation" />
                                                </apex:selectList>
                                            </div>
                                            <div class="col-xs-6">
                                                <apex:inputText value="{!Floor}" html-placeholder="#" onkeyup="validateInputFields(event, this, 'Floor', 'Optional');" onblur="validateInputFields(event, this, 'Floor', 'Optional');" maxlength="15" onChange="cbx();" />
                                            </div>
                                        </div>
                                    </li>
                                    <li>
                                        <label>{!$Label.City}</label>
                                    </li>
                                    <li>
                                        <apex:inputText value="{!City}" styleClass="reqField" onkeyup="validateInputFields(event, this, 'City', 'Required')" onblur="validateInputFields(event, this, 'City', 'Required')" maxlength="40" onChange="cbx();">
                                            <apex:actionsupport action="{!ACTION7}" event="onmouseout" rerender="Complete,Save">
                                            </apex:actionsupport>
                                        </apex:inputText>
                                    </li>
                                    <li>
                                        <div class="row">
                                            <div class="col-xs-6">
                                                <label>{!$Label.State}</label>
                                            </div>
                                            <div classs="col-xs-6">
                                                <label style="padding-left:15px;">{!$Label.ZIP}</label>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-xs-6">
                                                <div class="add_state_input_div">
                                                    <div class="add_site_location_adjust">
                                                        <div>
                                                            <apex:selectList id="state" styleClass="reqField form-control dropdownStyle styled-select-small" value="{!state}" size="1" multiselect="false" onblur="validateInputFields(event, this, 'State', 'Required')" onchange="validateInputFields(event, this, 'State', 'Required');cbx();">
                                                                <apex:selectOptions value="{!StatePickList}" />
                                                            </apex:selectList>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-xs-6 form-group" id="ZIPId" >
                                                <apex:inputText value="{!ZIP}" styleClass="reqField zipInput" onkeyup="validateZIP(event,this);"   maxlength="5" onChange="cbx();">
                                                    <apex:actionsupport action="{!ACTION8}" event="onmouseout" rerender="Complete,Save" >
                                                    </apex:actionsupport>
                                                </apex:inputText>
                                            </div>
                                        </div>
                                    </li>
                                    <li>
                                        <apex:inputCheckbox value="{!checkbox}"  styleClass="css-checkbox check_next_step" id="check_next_step" disabled="true">
                                           
                                        </apex:inputCheckbox>
                                        <label for="" class="css-check-label css-label radGroup1 clr check_next_step_label disableCheckBox">
                                            {!$Label.CustomerManagementLabel5}
                                        </label>
                                    </li>
                                </ul>
                            </div>
                            <div class="col-xs-12 col-md-4 col-lg-4">
                                <ul>
                                    <li>
                                        <label>{!$Label.Business_Website} (Optional)</label>
                                    </li>
                                    <li>
                                        <apex:inputText value="{!BusinessWebsite}" html-placeholder="" onkeyup="validateInputFields(event, this, 'BusinessWebSite', 'Optional')" onblur="validateInputFields(event, this, 'BusinessWebSite', 'Optional')" maxlength="200" />
                                    </li>
                                    <li>
                                        <label>{!$Label.DUNS1} (Optional)</label>
                                    </li>
                                    <li>
                                        <apex:inputText styleClass="form-group" id="DUNSId" value="{!DUNS}" html-placeholder="" onkeyup="validateDUNS(this),validateInputFields(event, this, 'DUNS', 'Optional')" onblur="validateInputFields(event, this, 'DUNS', 'Optional')" maxlength="9"/>
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </apex:pageBlock>
                     <apex:actionFunction name="cbx" action="{!copyAddressToTable}" oncomplete="validateDeleteButton();enableAddSite();" reRender="page2,pb1,Form2,manage_users_table,tbody_added_sites_here" />
                </apex:form>
                <hr class="dashed_hr" />


                <!-- Add site row -->
                <div class="row">
                    <div class="col-xs-12 col-md-12 col-lg-12">
                        <h3>{!$Label.CustomerManagementLabel6}</h3>
                    </div>
                </div>
                <hr class="dividerHr" />
                <div class="row">
                    <div class="col-xs-12 col-md-12">
                        <h4>{!$Label.CustomerManagementLabel1}</h4>
                    </div>
                    <div class="col-xs-12 col-md-12">
                        <div class="m-t-20">
                            <div class="searchBlock">
                                <div class="manage_user_search_row">
                                    <form action="" method="get" id="search_users_form" class="">
                                        <div class="search_user_container">
                                            <input type="text" id="search_input" name="search_users" placeholder="Search by Name or Location" autocomplete="off" />
                                            <div class="search_button" title="Search"></div>
                                        </div>
                                    </form>
                                </div>
                            </div>
                            <div class="bulkUploadBlock">
                                <div class="clear"></div>
                                <input type="submit" class="btn btn-primary" data-toggle="modal" onclick="$('#bulkUploadModal').modal();" value="Upload" style="padding:5px 20px;"/>
                            </div>
                        </div>
                    </div>
                </div>
                <apex:form id="Form2">
                    <apex:pageBlock id="page2">
                        <div class="row">
                            <div class="col-xs-12 col-md-12" style="margin-top: 20px;">
                                <div class="manage_users_table_container">
                                    <div id="site_table_wrapper" class="dataTables_wrapper" role="grid">
                                        <apex:outputPanel id="OutputPanel2">
                                            <table id="add_site_table" class="dataTable table manage_users_table" style="width: 100% !important;">
                                                <thead>
                                                    <tr class="tableHeaderRow">
                                                        <td>
                                                            <div class="check-label" style="width:80px">
                                                                <input type="checkbox" name="checkboxAll" id="checkboxAll" class="css-checkbox" />
                                                                <label for="checkboxAll" class="css-label radGroup1 clr">{!$Label.Site_ID}</label>
                                                            </div>
                                                        </td>
                                                        <td>
                                                            <a class="reorderlink">{!$Label.Site_Name}<div class="reorder_btn"></div></a>
                                                        </td>
                                                        <td>
                                                            <a class="reorderlink">{!$Label.Address}<div class="reorder_btn"></div></a>
                                                        </td>
                                                        <td style="width:15%">
                                                            <a class="reorderlink">{!$Label.Location}<div class="reorder_btn" style="margin-right: 0 !important;"></div></a>
                                                        </td>
                                                        <td>
                                                            <a class="reorderlink">{!$Label.City}<div class="reorder_btn"></div></a>
                                                        </td>
                                                        <td>
                                                            <a class="reorderlink">{!$Label.State}<div class="reorder_btn"></div></a>
                                                        </td>
                                                        <td class="noBorders" style="border-right: 1px solid #dddddd;">
                                                            <a class="reorderlink">{!$Label.ZIP}<div class="reorder_btn"></div></a>
                                                        </td>
                                                        <td class="noBorders"></td>
                                                    </tr>
                                                    <!-- Add Site input fields -->
                                                    <tr class="add_sites_tbody">
                                                        <td></td>
                                                        <td>
                                                            <div class="add_site_input_div" style="margin-top: 8px;">
                                                                <apex:inputText value="{!custsiteInst.Site_Name__c}" styleClass="mandatory_field" onkeyup="enableAddSite();"/>
                                                            </div>
                                                        </td>
                                                        <td>
                                                            <div class="add_site_input_div" style="margin-top: 8px;">
                                                                <apex:inputText value="{!custsiteInst.Address_Line__c}" styleClass="mandatory_field" onkeyup="enableAddSite();" />
                                                            </div>
                                                        </td>
                                                        <td>
                                                            <div class="add_site_input_div" style="margin-top: 8px;">
                                                                <div class="add_site_location_adjust row">
                                                                    <div class="styled-select-small adjust-select-small" style="margin-top:-2px; width:65%;">
                                                                        <apex:selectList value="{!custsiteInst.Location__c}" size="1" multiselect="false">
                                                                            <apex:selectOptions value="{!LocationPicklist}" />
                                                                        </apex:selectList>
                                                                    </div>
                                                                    <apex:inputText value="{!custsiteInst.Location_Number__c}" id="LOCId" onkeyup="enableAddSite();" styleClass="form-group add_site_loc2" html-placeholder="#" />
                                                                  </div>
                                                            </div>
                                                        </td>
                                                        
                                                        <td>
                                                            <div class="add_site_input_div" style="margin-top: 8px;">
                                                                <apex:inputText value="{!custsiteInst.City__c}" styleClass="mandatory_field" onkeyup="enableAddSite();" />
                                                            </div>
                                                        </td>
                                                        <td>
                                                            <div class="add_state_input_div" style="margin-top: 7px;">
                                                                <div class="add_site_location_adjust">
                                                                    <div class="styled-select-small adjust-select-small" style="margin-top:-2px; width:100% !important;margin-left:0px;">
                                                                        <apex:selectList styleClass="mandatory_field" value="{!custsiteInst.State__c}" size="1" multiselect="false" onchange="enableAddSite();">
                                                                            <apex:selectOptions value="{!StatePickList}" />
                                                                        </apex:selectList>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </td>
                                                        <td>
                                                            <div class="add_site_input_div" style="margin-top: 8px;">
                                                                <apex:inputText value="{!custsiteInst.Zip_Code__c}" id="addSiteZIPId" styleClass="mandatory_field form-group" onkeyup="validateZIPForAddSite(event,this);" maxlength="5" />
                                                            </div>
                                                        </td>
                                                        <td>
                                                            <apex:commandButton action="{!AddSite}" status="loading" value="{!$Label.Add_Site}" rerender="page2,Form2,tbody_added_sites_here,add_site_table,OutputPanel2,Repeat" styleClass="add_site_btn disabled-btn" oncomplete="pageRefreshed();validateDeleteButton();enableAddSite();initAddSiteHighlighter();" style="padding-top:4px !important; margin-top: 8px;" />
                                                        </td>
                                                    </tr>
                                                </thead>
                                                <tbody id="tbody_added_sites_here">
                                                    <apex:repeat value="{!CustSiteWrapperList}" var="r" id="Repeat" rendered="{!IF((CustSiteWrapperList!=null),'true','false')}">
                                                        <tr class="added_sites_tbody">
                                                            <td>
                                                                <div class="check-label">
                                                                    <apex:inputCheckbox id="s" value="{!r.isSelected}" styleClass="css-checkbox addSiteChk editcheckbox">
                                                                        <apex:actionSupport event="onchange" action="{!getselected}" reRender="" />
                                                                    </apex:inputcheckbox>
                                                                    <apex:outputlabel value="{!r.counter}" styleClass="css-label radGroup1 clr addSiteChkLbl">
                                                                    </apex:outputlabel>
                                                                    
                                                                </div>
                                                            </td>
                                                            <td>
                                                                <apex:inputText value="{!r.CustSiteInst.Site_Name__c}" html-placeholder="{!r.CustSiteInst.Site_Name__c}" />
                                                            </td>
                                                            <td>
                                                                <apex:inputText value="{!r.CustSiteInst.Address_Line__c}" html-placeholder="{!r.CustSiteInst.Address_Line__c}" />
                                                            </td>
                                                            <td>
                                                                <div class="form-inline">
                                                                    <div class="add_sites_location editLocationDropdown">
                                                                        <apex:selectList value="{!r.CustSiteInst.Location__c}" size="1" multiselect="false">
                                                                            <apex:selectOptions value="{!LocationPicklist}" />
                                                                        </apex:selectList>
                                                                    </div>
                                                                    <div class="">
                                                                        <apex:inputText value="{!r.CustSiteInst.Location_Number__c}" html-placeholder="{!r.CustSiteInst.RoomBuildingFloorInput__c}" styleClass="editLocationFloor"/>
                                                                    </div>
                                                                </div>
                                                            </td>
                                                            <td>
                                                                <apex:inputText value="{!r.CustSiteInst.City__c}" html-placeholder="{!r.CustSiteInst.City__c}" />
                                                            </td>
                                                            <td class="add_sites_state">
                                                                <apex:selectList value="{!r.CustSiteInst.State__c}" size="1" multiselect="false">
                                                                    <apex:selectOptions value="{!StatePicklist}" />
                                                                </apex:selectList>
                                                            </td>
                                                            <td>
                                                                <apex:inputText value="{!r.CustSiteInst.Zip_Code__c}" html-placeholder="{!r.CustSiteInst.Zip_Code__c}" />
                                                            </td>
                                                            <td>
                                                            </td>
                                                        </tr>
                                                    </apex:repeat>
                                                </tbody>
                                            </table>
                                        </apex:outputPanel>
                                    </div>
                                </div>
                            </div>

                        </div>
                        <!-- Delete site Modal -->
                        <div class="modal fade" id="deleteSiteModal" tabindex="-1" role="dialog" aria-labelledby="deleteSiteModalLabel" aria-hidden="true">
                            <div class="modal-dialog">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span>
                                        </button>
                                        <h4 class="modal-title" id="deleteSiteModalLabel">{!$Label.Delete_Site}</h4>
                                    </div>
                                    <div class="modal-body">
                                        <p>{!$Label.CustomerManagementLabel3}</p>
                                    </div>
                                    <div class="modal-footer">
                                        <apex:commandButton value="{!$Label.Delete}" status="loading" action="{!DeleteAction}" oncomplete="pageRefreshed1();create_checkbox_id();" immediate="true" rerender="page2,table,Repeat, tstpopup, manage_users_table,tbody_added_sites_here,Form2,add_site_table,OutputPanel2" id="deleteBtn" styleClass="pull-left btn btn-primary text-center btn btn-default" style="padding:5px 20px;"/>
                                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!-- Delete site Modal -->
                    </apex:pageBlock>
                    
                </apex:form>

                <apex:form >
                    <apex:pageBlock >
                        <div class="row add_customer_complete_row">
                            <div class="col-xs-12 col-md-12 col-lg-12">
                                <input type="submit" id="delete_site_btn" class="pull-left btn btn-primary text-center hide" onclick="deleteModalShow();return false;" value="Delete" style="padding:5px 20px;"/>
                                <apex:outputPanel id="ThecmpltButton">
                                    <apex:commandButton styleClass="form-control btn btn-primary completeBtn" status="loading" value="{!$Label.Complete}" action="{!Save}" id="Complete_RemoveThisId"  rerender="hiddenBlock,page1,TheForm">
                                        <apex:param name="{!$Label.Message}" value="{!FirstName}" assignTo="{!FirstNameParam}" />
                                        <apex:param name="{!$Label.Message}" value="{!LastName}" assignTo="{!LastNameParam}" />
                                    </apex:commandButton>

                                </apex:outputPanel>
                            </div>
                        </div>
                    </apex:pageBlock>
                    <apex:pageBlock id="hiddenBlock" rendered="false"></apex:pageBlock>
                </apex:form>
            </div>
        </div>
    </div>
    <!-- Modal -->
    <div ng-app='App' class="modal fade" id="bulkUploadModal" tabindex="-1" role="dialog" aria-labelledby="bulkUploadModalLabel" aria-hidden="true">
        <div  ng-controller="PreviewController" class="modal-dialog">
            <div class="modal-content" >
                <div class="modal-header" style="border: 0;">
                    <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span>
                    </button>
                    <h4 class="modal-title" id="bulkUploadModalLabel" style="font-size: 21px;">Bulk Upload Customer Sites</h4>
                </div>
                <apex:form id="form-bulk-input2">
                    <div class="modal-body">
                        <ol style="padding: 0 25px;">
                            <li style="list-style: decimal; margin-bottom: 20px; line-height: 1.4em;">
                                <p>{!$Label.CustomerManagementLabel9}</p>
                                <a>
                                  <apex:outputLink value="{!strDocUrl}" target="_blank">{!$Label.CustomerManagementLabel10}</apex:outputLink>  
                                </a>
                            </li>
                            <li style="list-style: decimal; line-height: 1.5em; margin-bottom: 10px;">
                                <p>{!$Label.CustomerManagementLabel11}</p>
                                <!--<apex:inputFile value="{!contentFile}" contentType="{!fileContentType}" filename="{!nameFile}" styleClass="m-l-10 upload_input" />---->
                               <input type="file" name="excel_file" accept=".xlsx" onchange="processFileForParsing(this, this.files)" required="true" class="m-l-10 upload_input"></input>
                               <input type="checkbox" ng-model="showPreview" ng-change="showPreviewChanged();" style="display:none;"  ></input>
                               <apex:inputTextArea value="{!excelBody}" id="theTextInput" style="display:none;"  />
                              <apex:outputPanel id="oPRes">
                                                      
                             <script>
                                    
                           function processFileForParsing(obj, obj1) {
                               angular.element(obj).scope().fileChanged(obj1);
                                        }
                            (function(undefined) {
                                            'use strict';
                                            // Check if dependecies are available.
                                            if (typeof XLSX === 'undefined') {
                                                console.log('xlsx.js is required. Get it from https://github.com/SheetJS/js-xlsx');
                                                return;
                                            }
                                        
                                            if (typeof _ === 'undefined') {
                                                console.log('Lodash.js is required. Get it from http://lodash.com/');
                                                return;
                                            }
                                        
                                            // Baseline setup
                                            // --------------
                                        
                                            // Establish the root object, `window` in the browser, or `exports` on the server.
                                            var root = this;
                                        
                                            // Save the previous value of the `XLSXReader` variable.
                                            var previousXLSXReader = root.XLSXReader;
                                        
                                            // Create a safe reference to the XLSXReader object for use below.
                                            var XLSXReader = function(file, readCells, handler) {
                                                var obj = {};
                                                XLSXReader.utils.intializeFromFile(obj, file, readCells, handler);
                                                return obj;
                                            };
                                        
                                            // Export the XLSXReader object for **Node.js**, with
                                            // backwards-compatibility for the old `require()` API. If were in
                                            // the browser, add `XLSXReader` as a global object via a string identifier,
                                            // for Closure Compiler 'advanced' mode.
                                            if (typeof exports !== 'undefined') {
                                                if (typeof module !== 'undefined' && module.exports) {
                                                    exports = module.exports = XLSXReader;
                                                }
                                                exports.XLSXReader = XLSXReader;
                                            } else {
                                                root.XLSXReader = XLSXReader;
                                            }
                                        
                                            // Current version.
                                            XLSXReader.VERSION = '0.0.1';
                                        
                                            XLSXReader.utils = {
                                                'intializeFromFile': function(obj, file, readCells, handler) {
                                                    var reader = new FileReader();
                                        
                                                    reader.onload = function(e) {
                                                        var data = e.target.result;
                                                        var workbook = XLSX.read(data, {
                                                            type: 'binary'
                                                        });
                                        
                                                        obj.sheets = XLSXReader.utils.parseWorkbook(workbook, readCells);
                                                        handler(obj);
                                                    };
                                        
                                                    reader.readAsBinaryString(file);
                                                },
                                                'parseWorkbook': function(workbook, readCells) {
                                                    var sheets = {};
                                        
                                                    _.forEachRight(workbook.SheetNames, function(sheetName) {
                                                        var sheet = workbook.Sheets[sheetName];
                                                        sheets[sheetName] = XLSXReader.utils.parseSheet(sheet, readCells, sheetName);
                                                    });
                                        
                                                    return sheets;
                                                },
                                                'parseSheet': function(sheet, readCells, sheetName) {
                                                    var range = XLSX.utils.decode_range(sheet['!ref']);
                                                    var sheetData = [];
                                                    if (readCells === true) {
                                                        _.forEachRight(_.range(range.s.r, range.e.r + 1), function(row) {
                                                            var rowData = [];
                                                            _.forEachRight(_.range(range.s.c, range.e.c + 1), function(column) {
                                                                var cellIndex = XLSX.utils.encode_cell({
                                                                    'c': column,
                                                                    'r': row
                                                                });
                                                                var cell = sheet[cellIndex];
                                                                rowData[column] = cell ? cell.v : undefined;
                                                            });
                                                            sheetData[row] = rowData;
                                                        });
                                                    };
                                                    var processedExcelBodyString = '';
                                                    if(sheetData.length > 0) {
                                                        for(var i=0; i < sheetData.length; i++) {
                                                            
                                                             processedExcelBodyString += sheetData[i].toString() +"~~";
                                                             //processedExcelBodyString += sheetData[i].toString() + "\n";
                                                          
                                                        }
                                                    }
                                                    //buyflowid:sitedetails:
                                                    document.getElementById("AddCustpge:form-bulk-input2:theTextInput").value = processedExcelBodyString;
                                                    return {
                                                        'data': sheetData,
                                                        'name': sheet.name,
                                                        'col_size': range.e.c + 1,
                                                        'row_size': range.e.r + 1
                                                    };
                                                }
                                            };
                                        }).call(this);            
                                     
                           var app = angular.module("App", []);
                           app.factory("XLSXReaderService", ['$q', '$rootScope',
                                    function($q, $rootScope) {
                                        var service = function(data) {
                                            angular.extend(this, data);
                                        };
                                        service.readFile = function(file, showPreview) {
                                            var deferred = $q.defer();
                        
                                            XLSXReader(file, showPreview, function(data) {
                                                $rootScope.$apply(function() {
                                                    deferred.resolve(data);
                                                });
                                            });
                        
                                            return deferred.promise;
                                        };
                        
                                        return service;
                                    }
                                ]);
                                
                  app.controller('PreviewController', function($scope, XLSXReaderService) {
                    $scope.showPreview = false;
        
                    $scope.fileChanged = function(files) {
                        $scope.isProcessing = true;
                        $scope.sheets = [];
                        $scope.excelFile = files[0];
                        XLSXReaderService.readFile($scope.excelFile, $scope.showPreview).then(function(xlsxData) {
                            $scope.sheets = xlsxData.sheets;
                            $scope.isProcessing = false;
                        });
                        $scope.isProcessing = true;
                        $scope.showPreview = true;
                        var temp = XLSXReaderService.readFile($scope.excelFile, $scope.showPreview).then(function(xlsxData) {
                            $scope.sheets = xlsxData.sheets;
                            $scope.isProcessing = false;
                        });
                    }; 
                });
        
                document.onkeypress = function(e){
                            e=e?e:window.event;
                            if (e.keyCode==13)return false;
                }
                                    </script>
                                </apex:outputPanel>
                            </li>
                        </ol>
                    </div>
                    <div class="modal-footer" style="border: 0;">
                        <div style="padding-left: 30px;">
                        <apex:commandButton action="{!ReadFile}" value="Upload" status="loading" styleClass="btn btn-primary m-l-10 pull-left" style="width:auto; padding: 7px 20px;" />
                        <button type="button" class="btn btn-default pull-left" data-dismiss="modal">Cancel</button>
                        </div>
                    </div>
                </apex:form>
            </div>
        </div>
    </div>
    <!-- Modal -->
    <apex:include pageName="PortalDesignFooter" id="PortalDesignFooter" />
    <!-- PRODUCTION -->

    <apex:includeScript value="{!URLFOR($Resource.PortalDesignJS,'/libs/jquery.dataTables.js')}" />
    <apex:includeScript value="{!URLFOR($Resource.PortalDesignJS,'/vendors/modernizr.js')}" />
    <apex:includeScript value="{!URLFOR($Resource.PortalDesignJS,'/vendors/bootstrap.min.js')}" />
    <apex:includeScript value="{!URLFOR($Resource.ExcelParser, 'ExcelParser/angular.min.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.ExcelParser, 'ExcelParser/bootstrap.min.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.ExcelParser, 'ExcelParser/lodash.min.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.ExcelParser, 'ExcelParser/jszip.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.ExcelParser, 'ExcelParser/xlsx.js')}"/>
    <script>
    
        function format_phone(phoneNoEle){
            p=phoneNoEle.value
            if(p.length==3){
                pp=p;
                d4=p.indexOf('(')
                d5=p.indexOf(')')
                if(d4==-1){
                    pp="("+pp;
                }
                if(d5==-1){
                    pp=pp+") ";
                }
                phoneNoEle.value="";
                phoneNoEle.value=pp;
            }
            if(p.length>3){
                d1=p.indexOf('(')
                d2=p.indexOf(')')
                if (d2==-1){
                    l30=p.length;
                    p30=p.substring(0,4);
                    p30=p30+") "
                    p31=p.substring(5,l30);
                    pp=p30+p31;
                    phoneNoEle.value="";
                    phoneNoEle.value=pp;
                }
            }
            if(p.length>7){
                p11=p.substring(d1+1,d2);
                if(p11.length>4){
                    p12=p11;
                    l12=p12.length;
                    l15=p.length
                    p13=p11.substring(0,4);
                    p14=p11.substring(4,l12);
                    p15=p.substring(d2+1,l15);
                    phoneNoEle="";
                    pp="("+p13+") "+p14+p15;
                    phoneNoEle.value=pp;
                }
                l16=p.length;
                p16=p.substring(d2+2,l16);
                l17=p16.length;
                if(l17>3&&p16.indexOf('-')==-1){
                    p17=p.substring(d2+1,d2+5);
                    p18=p.substring(d2+5,l16);
                    p19=p.substring(0,d2+1);
                    pp=p19+p17+"-"+p18;
                    phoneNoEle.value="";
                    phoneNoEle.value=pp;
                }
            }
        
        }
        
        $('.check_next_step').attr('id', 'check_next_step');

        $(document).ready(function () {
            validateRequiredFields();
            // Disable delete button when page first loads
            validateDeleteButton();
            enableAddSite();
            if("{!$CurrentPage.parameters.mode}"=='checkbox'){
                create_checkbox_id();
            }
        });

         // This function will check each of the required fields and will determine if they are empty
         // If any of the fields are empty , then we disable the complete button
         // If all fields are filled in correctly, we enable the complete button
        function validateRequiredFields() {
            var arrRequiredFields = $(".reqField"),
                boolIsValid = true,
                oRequiredField, oCompleteButton, boolIsNumberValid = true;
            // Disable complete button when page first loads
            oCompleteButton = $(".completeBtn");
            if (oCompleteButton[0]) {
                oCompleteButton.prop("disabled", true);
            }
            // On key-up of each field, we check if the field is blank
            // Then we iterate through all fields to determine which are valid to enable/ disable the button
            arrRequiredFields.keyup(function () {
                // Set the isValid flag to true and then check all fields
                boolIsValid = true;
                // Set the isNumberValid flag to true and then check numeric fields
                boolIsNumberValid = true

                // Iterate through all fields and check if there are any invalid entries. If yes, then return false    
                arrRequiredFields.each(function () {
                    oRequiredField = $(this);
                    if (oRequiredField[0]) {
                        if (0 === oRequiredField.val().length) {
                            boolIsValid = false;
                            return false;
                        }
                    }
                });
                
                if( typeof $(".errorText").html() != 'undefined' ){
                    if($(".errorText").html().indexOf("Premier SSO") == -1){                                
                        if ( 0 < $(".errorText").length) {
                            boolIsNumberValid = false;
                        }                
                    }
                    else{
                        if ( 1 < $(".errorText").length) {
                            boolIsNumberValid = false;
                        }
                    }                 
                }
                
                // If the boolIsValid is true, we can enable the button. 
                // Otherwise we disable the same
                boolIsValid && boolIsNumberValid ? $('.completeBtn').prop('disabled', false).attr('style','color:#fff') : $('.completeBtn').prop('disabled', true);
            });

            // Check on re-render
            // Set the isValid flag to true and then check all fields
            boolIsValid = true;
            // Set the isNumberValid flag to true and then check numeric fields
            boolIsNumberValid = true

            // Iterate through all fields and check if there are any invalid entries. If yes, then return false    
            arrRequiredFields.each(function () {
                oRequiredField = $(this);
                if (oRequiredField[0]) {
                    if (0 === oRequiredField.val().length) {
                        boolIsValid = false;
                        return false;
                    }
                }
            });
            
            if(typeof $(".errorText").html() != 'undefined'){
                if($(".errorText").html().indexOf("Premier SSO") == -1){
                    if ( 0 < $(".errorText").length) {
                        boolIsNumberValid = false;
                    }                
                }
                else{
                    if ( 1 < $(".errorText").length) {
                        boolIsNumberValid = false;
                    }
                }
            }
            
            // If the boolIsValid is true, we can enable the button. 
            // Otherwise we disable the same
            boolIsValid && boolIsNumberValid ? $('.completeBtn').prop('disabled', false) : $('.completeBtn').prop('disabled', true);


        }
         // Function to enable/disable the delete button based on whether a site is selected
        function isChkTrue(clickType) {
            if (clickType === 'oneByOne') {
                if (0 < $(".editcheckbox:checked").length) {
                    $('#delete_site_btn').removeClass('hide').addClass('show');
                } else {
                    $('#delete_site_btn').removeClass('show').addClass('hide');
                }
            } else if (clickType === 'all') {
                if (0 < $(".editcheckbox:checked").length) {
                    $('#delete_site_btn').removeClass('show').addClass('hide');
                } else {
                    $('#delete_site_btn').removeClass('hide').addClass('show');
                }
            }

        }

        function validateDeleteButton() {
            $('.checkbox:checkbox').prop('checked', checkboxAll.checked);
            $('.editcheckbox').on('change', function () {
                isChkTrue('oneByOne');
            });
            // Checkbox All on click event to handle the delete button
            $('#checkboxAll').on('change', function () {
                isChkTrue('all');
            });

            // On page load and rerender we need to disable the delete button
            if (0 === $(".editcheckbox:checked").length) {
                $('#delete_site_btn').removeClass('show').addClass('hide');
            } else {
                $('#delete_site_btn').removeClass('hide').addClass('show');
            }
        }

        //Datatables code

        pageRefreshed();

        function pageRefreshed() {
            $('.dataTable').dataTable().fnDestroy();
            $('.dataTable').DataTable({
                'iDisplayLength': 8,
                "oLanguage": {
                    "sInfo": "_START_ - _END_ of _TOTAL_",
                    "sEmptyTable": " "
                },
                "oPaginate": {
                    "sNext": ">",
                    "sPrevious": "<",
                    "First": '1',
                    "Next": '2'
                },
                "fnDrawCallback": function (oSettings) {
                    $('.addSiteChk').on('click', function () {
                        isChkTrue('oneByOne');
                    });
                    $('#checkboxAll').on('click', function () {
                        isChkTrue('all');
                    });

                    function isChkTrue(clickType) {

                        if (clickType === 'oneByOne') {
                            if ($(".addSiteChk:checked").length > 0) {
                                $('.btn_deactivate_user').removeClass('hide').addClass('show');
                            } else {
                                $('.btn_deactivate_user').removeClass('show').addClass('hide');
                            }
                        } else if (clickType === 'all') {
                            $('.addSiteChk:checkbox').prop('checked', checkboxAll.checked);
                            if ($(".addSiteChk:checked").length > 0) {
                                $('.btn_deactivate_user').removeClass('hide').addClass('show');
                            } else {
                                $('.btn_deactivate_user').removeClass('show').addClass('hide');
                            }
                        }

                    }


                }
            });
            if ($('.dataTable tbody tr > td').length) {
                $('#search_input').remove();
                var searchBTN = $('.dataTables_filter > label > input[type="text"]').attr({
                    'id': 'search_input',
                    'name': 'search_users',
                    'placeholder': 'Search by Name or Location'
                });
                $(searchBTN).prependTo('.search_user_container');

            }
            $('.dataTables_filter').hide();
            $('.dataTables_paginate').addClass('pagination');
            var nextStepLabel = $('.check_next_step').attr('id');
            $('.check_next_step_label').attr('for', nextStepLabel);

            $('.addSiteChk').each(function(){
            var chkIdVal = $(this).attr('id');
            var targetLabel = $(this).parent('div.check-label').find('label.addSiteChkLbl');
            $(targetLabel).attr('for', chkIdVal);
            });

        }
      
        var onlyNumRegex = /^[0-9]+$/;
        function validateZIP(event,thisEle) {
            //This will prevent the keyup event on press of Tab
            var keyCode = event.keyCode || event.which;
            if(keyCode == 9){ 
                return;
            }
            var enteredValue = thisEle.value;
            $(thisEle).removeClass("has-error");
            $('#ZIPErrorText').remove();
            if(enteredValue.length > 0){
                if(enteredValue.indexOf(' ') >= 0 || !onlyNumRegex.test(enteredValue)){
                    $(thisEle).addClass("has-error");
                    $(thisEle).after("<p id='ZIPErrorText' class='errorText'>Invalid ZIP</p>");
                }else if(enteredValue.length < 5 && onlyNumRegex.test(enteredValue)){
                    $(thisEle).addClass("has-error");
                    $(thisEle).after("<p id='ZIPErrorText' class='errorText'>Zip Code must be 5 digits</p>");                    
                }                    
            }else{
                $(thisEle).addClass("has-error");
                $(thisEle).after("<p id='ZIPErrorText' class='errorText'>Field cannot be blank</p>"); 
            } 
            $('[id$=addSiteZIPId]').val(thisEle.value);
            enableAddSite();
        }
        
        function validateZIPForAddSite(event,thisEle){
            //This will prevent the keyup event on press of Tab
            var keyCode = event.keyCode || event.which;
            if(keyCode == 9){ 
                return;
            }
            var enteredValue = thisEle.value;
            $(thisEle).removeClass("has-error");
            $('#ZIPErrorText').remove();
            if(enteredValue.length > 0){
                if(enteredValue.indexOf(' ') >= 0 || !onlyNumRegex.test(enteredValue)){
                    $(thisEle).addClass("has-error");
                    $(thisEle).after("<p id='ZIPErrorText' class='errorText'>Invalid ZIP</p>");
                }else if(enteredValue.length < 5 && onlyNumRegex.test(enteredValue)){
                    $(thisEle).addClass("has-error");
                    $(thisEle).after("<p id='ZIPErrorText' class='errorText'>Zip Code must be 5 digits</p>");                    
                }                    
            } 
            enableAddSite();        
        }
        
        function validateLOC(thisEle) {
            if (isNaN(thisEle.value)) {
                $(thisEle).addClass("has-error");
                $('#LOCErrorText').remove();
                $(thisEle).after("<p id='LOCErrorText' class='errorText'>Invalid Location Number</p>");

            } else {
                $(thisEle).removeClass("has-error");
                $('#LOCErrorText').remove();
            }
        }

        function validateDUNS(thisEle) {
            if (isNaN(thisEle.value)) {
                $(thisEle).addClass("has-error");
                $('#DUNSErrorText').remove();
                $(thisEle).after("<p id='DUNSErrorText' class='errorText'>Invalid DUNS</p>");

            } else {
                $(thisEle).removeClass("has-error");
                $('#DUNSErrorText').remove();
            }
        }

        function validateFloor(thisEle) {
            if (isNaN(thisEle.value)) {
                $(thisEle).addClass("has-error");
                $('#FloorErrorText').remove();
                $(thisEle).after("<p id='FloorErrorText' class='errorText'>Invalid Floor</p>");

            } else {
                $(thisEle).removeClass("has-error");
                $('#FloorErrorText').remove();
            }
        }

        function create_checkbox_id() {
            pageRefreshed();
            $('#add_site_table tbody tr td:first-child').each(function () {
                var input_id = $(this).find('input').attr('id');
                $(this).find('label').attr('for', input_id)
            });
        }

        function deleteModalShow() {
            var show_delete_modal_flag = false;
            $('#add_site_table tbody tr td:first-child').each(function () {
                var input_id = $(this).find('input').attr('id');
                if ($('input[id="' + input_id + '"]').is(':checked')) {
                    show_delete_modal_flag = true;
                }

            });
            if (show_delete_modal_flag) {
                $('#deleteSiteModal').modal('show');
                $('#delete_site_Error').remove();
            } else {
                $('#delete_site_Error').remove();
                $('#delete_site_btn').after('<p id="delete_site_Error" class="errorText">Check site for deletion.</p>')
            }
        }

        function deleteRow() {
            $('#add_site_table tbody tr td:first-child').each(function () {
                var input_id = $(this).find('input').attr('id');
                if ($('#' + input_id).is(':checked')) {
                    $(this).parent('tr').remove();
                }
            });
            pageRefreshed();
        }

        function enableAddSite() {
            var boolIsSiteValid = true,
                // Set the isNumberValid flag to true and then check numeric fields
            boolIsNumberValid = true;
            $('.mandatory_field').each(function () {
                if ("" === $(this).val().trim() || undefined === $(this).val()) {
                    boolIsSiteValid = false;
                    return false;
                }
            });
            
            var zipCode = $('[id$=addSiteZIPId]').val();
            if ('undefined' == typeof zipCode || 0 == zipCode.length || zipCode.indexOf(' ') >= 0 || !onlyNumRegex.test(zipCode) || (zipCode.length > 5 || zipCode.length < 5)) {
                boolIsSiteValid = false;
            }
            // If there is any error message present, do not enable the button
            if (0 < $(".add_sites_tbody .errorText").length) {
                boolIsNumberValid = false;
            }
            // If true, we need to disable the button
            // If false, we need to enable the button
            boolIsSiteValid && boolIsNumberValid ? $('.add_site_btn').removeClass('disabled-btn') : $('.add_site_btn').addClass('disabled-btn');
            validateRequiredFields();
        }

        function pageRefreshed1() {
            $('#deleteSiteModal').modal('hide'); //hide delete modal
            $('body').removeClass('modal-open'); //hide delete modal
            $('.modal-backdrop').remove(); //hide delete modal

            $('.dataTable').dataTable().fnDestroy();
            $('.dataTable').DataTable({
                'iDisplayLength': 8,
                "oLanguage": {
                    "sInfo": "_START_ - _END_ of _TOTAL_",
                    "sEmptyTable": " "
                },
                "oPaginate": {
                    "sNext": ">",
                    "sPrevious": "<",
                    "First": '1',
                    "Next": '2'
                }
            });
            if ($('.dataTable tr > td').length) {
                $('#search_input').remove();
                var searchBTN = $('.dataTables_filter > label > input[type="text"]').attr({
                    'id': 'search_input',
                    'name': 'search_users',
                    'placeholder': 'Search by Name or Location'
                });
                $(searchBTN).prependTo('.search_user_container');
            }
            $('.dataTables_filter').hide();

            $('.editcheckbox').change(function () {
                if ($(this).is(":checked")) {
                    $('deleteBtn').addClass("disabled");
                } else {
                    $('deleteBtn').removeClass("disabled");
                }
            });
        }
        
        // Function to add a highlight to the site ID when a user updates any field within a row
        // Called on Complete event of the Add Sites button
        function initAddSiteHighlighter() {
            // Add an on change event that will fire once the field value changes
            $(".added_sites_tbody input[type='text']").on("change", function () {
                // Fetch the Site ID for that row and highlight the same
                var oCurrentTD = $(this).parent(),
                    oRowLabel;
                if (oCurrentTD[0]) {
                    oRowLabel = oCurrentTD.siblings().find("label.addSiteChkLbl");
                    if (oRowLabel[0]) {
                        // Update the label background to blue, indicating that a field has been updated
                        oRowLabel.css("backgroundColor", "#3bc1f4");
                    }
                }
                // This is added to ensure that the change event is called and the validation is performed
                enableAddSite();
            });
        }
    </script> 
</apex:page>