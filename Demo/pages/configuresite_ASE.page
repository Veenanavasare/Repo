<apex:page controller="SiteConfigureController" standardStylesheets="false" sidebar="false" showHeader="false" action="{!checkAndInitializeCart}" cache="false" docType="html-5.0">

    <style>
        body{
            pointer-events:none;
            opacity:0.5;
        }      
        labelsTextClass tierSpanCls

        .fiberCodelabelsTextClass {
            font-family: omnesatt_iiregular;
            font-size: 16px;
            font-weight: bold;
            color: #000000;
            text-align: left;
        }

        .fiberCodeSpanCls {
            color: #ffa500!important;
            font-weight: bold;
            line-height : 1.8em;
            //display: none;
        }  
        .tooltip.fiberCodeToolTipWithoutEMUX{
            max-width:180px;
            padding: 0 5px;
            margin-left: 18px;
            filter: drop-shadow(0 0 1px #999);
        }
        .tooltip.fiberCodeToolTipWithEMUX{
            padding: 0 5px;
            margin-left: 10px;
            max-width: 256px;
            filter: drop-shadow(0 0 1px #999);
        }
       .tooltipTrigger+.tooltip.fiberCodeToolTipWithEMUX>.tooltip-arrow {
            border-right-color: #fff;
            border-right: 10px solid #fff;
            border-width: 10px !important;
            filter: drop-shadow(0 0 0px #999);
            left: -14px;
            top: 40% !important;
        }
        .tooltipTrigger+.tooltip.fiberCodeToolTipWithoutEMUX>.tooltip-arrow {
            border-right-color: #fff;
            border-right: 10px solid #fff;
            border-width: 10px !important;
            filter: drop-shadow(0 0 0px #999);
            left: -14px;
            top: 35% !important;
        }
        .tooltipTrigger + .tooltip.fiberCodeToolTipWithoutEMUX > .tooltip-inner,.tooltipTrigger + .tooltip.fiberCodeToolTipWithEMUX > .tooltip-inner {
            background-color: #fff;
            color:#000;
            font-family:omnes_att_iimedium;
            text-align: left;
            font-weight: normal;
            max-width: 290px;
            padding:10px
        }
        .tooltip.fiberCodeToolTipWithoutEMUX.in,.tooltip.fiberCodeToolTipWithEMUX.in{
            opacity:1 !important;
        }               
        .CNUM-modal-body {
            padding: 30px;
        }
        .CNUMClass{
            margin-top: 0px;
        }
        /*.CNUMClass select{
            width: 388px !important;
        }
        .CNUMCls{
            color:#000 !important;
            padding:5px !important;
            font-size:15px;
        }
        .interfaceTypeCls{
            width: 420px !important;
        }
        .interfaceTypeCls select{
            width: 420px !important;
        }
        .CIRCls {
            width: 388px !important;
        }
        
        .CIRCls select {
            width: 388px !important;
        }
        .classOfServiceDropDownCls{
            width: 315px !important;
        }
        .classOfServiceDropDownCls select  {
            width: 315px !important;
        }*/
        .CNUM-modal-lg {
            width: 750px;
            margin: 175px auto;
        }
        
        select{
            padding-right: 35px !important;
        }
        
        /*.CNUMCls {
            width: 300px !important;
            height: 40px !important;
        }*/
        
        .additionalBlock td:first-child {
            width: 200px;
        }
        .portVLAN td:first-child {
            width: 200px;
        }
        .siteDetailsBlk td:first-child {
            width: 200px;
        }
        
        .MACAddressesCls td:nth-child(2) {
            width: 170px;
        }
        
        .modal-open .modal {
            background: rgba(0, 0, 0, 0.6);
        }
        
        .configureSiteContainer {
            padding: 0px !important;
        }
        
        .highlightEligbleSites {
            background-color: #FAE7D8 !important
        }
        
        ;
        .rightPanelTitle {
            margin-top: 0.5%;
            width: 310px;
        }
        
        #apltConfElisiteID .modal-body {
            padding-left: 20px;
            padding-right: 20px;
        }
        
        .tab-pane h4 {
            margin-right: 40px;
        }
        
        .disabletheCrossBtn {
            pointer-events: none;
        }
        
        .disablethebtn {
            pointer-events: none;
            cursor: not-allowed;
            cursor: default !important;
            color: #FFFEFE !important;
            opacity: .65;
            background-color: #357ebd !important;
        }
        
        .wrapLabel {
            width: 325px;
        }
        
        .tooltip.right {
            padding: 0 5px;
            margin-left: 10px;
            min-width: 250px;
            filter: drop-shadow(rgba(0, 0, 0, 0.3) 0 2px 10px);
        }
        
        .IplflexError {
            display: none;
        }
        
        #tableBlock {
            max-height: 552px;
            margin-top: -1px;
            overflow-x: hidden;
            overflow-y: auto;
        }
        
        .displayPhoneError {
            color: #D92825;
            font-size: 16px;
            font-family: omnes_att_iimedium;
            font-weight: bold;
        }
        
        .fixedPanel {
            position: fixed;
            width: 850px;
            margin: 0 auto;
            top: 0px;
        }
        
        .tooltipTrigger+.tooltip>.tooltip-inner {
            background-color: #fff;
            color: #000;
            font-family: omnes_att_iimedium;
            text-align: left;
            font-weight: normal;
            max-width: 260px;
        }
        
        .tooltipTrigger+.tooltip.top>.tooltip-arrow {
            border-top-color: #fff;
            border-top: 10px solid #fff;
        }
        
        .tooltipTrigger+.tooltip.top {
            width: 195px;
        }
        
        .tooltipTrigger+.tooltip.right>.tooltip-arrow {
            border-right-color: #fff;
            border-right: 10px solid #fff;
            border-width: 10px !important;
            left: -14px;
            top: 40% !important;
        }
        
        .checkbox-inline input[type=checkbox] {
            position: relative !important;
        }
        
        .checkbox-inline {
            float: left;
            width: 70%;
            cursor: default;
        }
        
        .siteNameConfigured {
            cursor: pointer;
        }
        
        .undoRemoveLnk {
            width: 30%;
            white-space: normal;
            float: right;
            padding: 10px 15px;
            display: none;
        }
        
        .siteNameConfigured {
            text-decoration: underline;
            color: #3BC1F4;
        }
        
        #tableBlock {
            max-height: 552px;
            margin-top: -1px;
            overflow-x: hidden;
            overflow-y: auto;
        }
        
        #headerBlock {
            border: 1px solid #ddd;
        }
        
        #configaddedsitesNew {
            margin-top: 25px;
            background: #fff !important;
            border: 1px solid #ddd;
            overflow: hidden;
            overflow-y: auto;
        }
        
        .siteListPanel {
            width: 100%;
        }
        
        .leftPanelheight {
            max-height: 708px;
        }
        
        .resizeLeftPanel {
            max-height: 613px;
        }
        
        .siteListPanel>tbody>tr>td.active { //
            background-color: #f5f5f5;
            background-color: #fff;
        }
        
        .siteListPanel>tbody>tr>td {
            border: 1px solid #d1d1d1;
            border-bottom-style: dashed;
            border-top-style: dashed;
            padding: 10px;
            font-family: omnes_light;
            font-size: 16px;
            font-weight: bold;
            line-height: 1.5em;
            max-width: 250px;
            white-space: nowrap;
            vertical-align: top;
        }
        
        .siteListPanel>thead>tr>th {
            padding: 10px;
            text-align: left;
            border: 1px solid #ddd;
            border-top: 0;
            font-family: omnes_att_iimedium;
            font-size: 16px;
            font-weight: bold;
        }
        
        .blockBackground {
            position: fixed;
            width: 100%;
            height: 100%;
            top: 0px;
            left: 0px;
            background-color: rgba(86, 86, 86, 0.72);
            z-index: 1030;
        }
        
        .changeinterface1 {
            color: #a3a3a3 !important;
        }
        
        .changeinterface2 {
            background-image:
                url("{!($Resource.portalDesignImg)}/new_arrow_small_grey.png");
            background-size: 35px 38px !important;
        }
        
        .styled-select-small select.changeinterface3 {
            background: none repeat scroll 0% 0% rgba(163, 163, 163, 0.54)
                !important;
            opacity: 0.65 !important;
        }
        
        .RmvLink {
            pointer-events: none;
            cursor: default;
            color: #656565;
            font-weight: bold;
        }
        
        .enableLink {
            color: #3BC1F4;
            pointer-events: all;
            cursor: pointer;
            font-weight: bold;
        }
        
        .enableSiteLink {
            color: #4A6496;
            padding: 0 20px;
            font-weight: bold;
        }
        
        .thinDividerLine {
            border-bottom: 1px solid #ddd;
            margin: 30px 0;
        }
        
        .ipFlexSection .sectionHeader {
            font-size: 18px;
            font-family: omnes_att_iimedium;
            font-weight: normal;
            color: #000000;
        }
        
        .ipFlexSection .section {
            margin: 20px 0;
        }
        
        .ipFlexSection .indvSectionHeader {
            margin-bottom: 5px;
        }
        
        .ipFlexSection .toolTipIconPosition {
            margin-left: 40px;
        }
        
        .ipFlexSection .tooltip {
            border: 1px solid #000;
            opacity: 999;
        }
        
        .ipFlexSection .tooltip .tooltip-inner {
            text-align: left;
        }
        
        .smallText {
            font-size: 14px;
            ine-height: 1.2em;
        }
        
        .errorMsg {
            color: red;
        }
        
        .ipFlexSection .userInputFields {
            width: 300px;
            margin-top: 5px;
            height: 40px;
        }
        
        #okayBtn {
            text-align: center;
            margin-top: 30px;
        }
        
        .modal-body.requireOneSite {
            height: 154px;
        }
        
        .modal-dialog.requireOneSite {
            margin-top: 200px !important;
        }
        
        p.removeSelectedModal {
            padding: 40px 55px 0 33px;
            font-size: 24px;
        }
        
        .modal-content.requireOneSite {
            width: 665px;
        }
        
        #closeBtn {
            margin: -15px;
        }
        
        .onetime {
            font-family: omnesatt_iiregular;
            font-size: 18px;
            font-weight: normal;
            margin-top: 25px;
        }
        
        .configureBtnSection {
            border: 1px solid #ddd;
            background-color: #ea7400;
            float: left;
            padding: 10px;
            width: 100%;
        }
        
        .configureBtnSection .headerBlock {
            color: #ffffff;
            margin-bottom: 10px;
            font-size: 14px;
            font-family: omnes_att_iimedium;
        }
        
        .configureBtnSection .configureBtn {
            background-color: #fff;
            color: #656565;
            border: 1px solid grey !important;
            padding: 0 12px !important;
            margin: 0;
        }
        
        .disableBtn {
            background-color: #ddd !important;
            pointer-events: none;
            color: #fff !important;
            border: none;
        }
        
        .disableLink {
            color: #ddd !important;
            pointer-events: none;
        }
        
        .highlightConfigurableSite {
            background-color: rgba(234, 116, 0, 0.15);
        }
        
        .modal-header.ITPA-custom-header {
            padding: 25px 10px 20px 60px;
            border-bottom: 1px solid #000;
        }
        
        .modal-body.ITPA-custom-body {
            padding: 20px 60px;
            font-family: omnes_light;
            color: #333;
            line-height: 18px;
            font-weight: bold;
        }
        
        .modal-header #closeBtnForEditModal {
            margin-top: -25px;
            margin-right: 0px;
        }
        
        .configureBtn.fontForConfigureBtn {
            font-family: omnes_att_iimedium !important;
        }
        
        tbody tr:nth-child(odd),tbody tr:nth-child(even) {
            background: none !important;
        }
        
        .m-b-20 {
            margin-bottom: 20px;
        }
        
        .m-t-20 {
            margin-top: 20px;
        }
        
        .list.siteListPanel {
            border: 1px solid #ddd;
        }
        
        .paginationArrow {
            border: 1px solid #ddd !important;
            padding: 0 10px !important;
            color: #056fab !important;
            font-weight: bold !important;
            background: #fff !important;
            font-size: 16px !important;
            margin: 0 !important;
        }
        
        .siteAddressInLeftPanel {
            word-break: break-word;
            white-space: normal;
        }
        
        /* ASE */
        .section-header {
            margin-bottom: 5px;
        }
        
        .section-content {
            margin-bottom: 18px;
        }
        
        /*.section select {
            width: 50%;
        }*/
        
        .section.CIRDropDown {
            width: 60%;
        }
        
        .sectionfieldset {
            margin: 0;
        }
        
        .section table input {
            top: 5px !important;
        }
        
        .section table label {
            margin: 0px 0 0 5px !important;
            font-family: omnesatt_iiregular !important;
            font-weight: normal;
        }
        
        .darkGreenText {
            color: #007a3e;
        }
        
        .additionalConfigDetails {
            margin-bottom: 22px;
        }
        
        .additionalConfigDetails table td {
            width: 33% !important;
        }
        
        .adjust-select-large {
            //width: 300px;
            margin-top: 5px;
            height: 40px;
            margin-bottom: 18px;
        }
        
        .tierSpanCls {
            color: #007a3e !important;
            //display: none;
        }
        
        .configPriceCls {
            color: #000000;
            text-align: right;
            width: 140px;
            -moz-background-color: #FFFFFF;
            -moz-border-radius: 6px;
            padding-bottom: 4px;
            -moz-margin-top: 3px;
            -moz-margin-left: 10px;
            font-weight: bold;
            height: 40px !important;
            padding-top: 10px;
            margin-left: -140px;
            padding-right: 10px;
            background-color: #FFF;
        }
        .pricingStyle {
            white-space: nowrap;
            float: right;
            background-color: white;
            padding: 6px 12px;
            font-size: 15px;
            border: 1px solid #f3f3ec;
            border-radius: 4px;
            font-weight: bold;
            height: 40px;
            padding-top: 10px;
            margin-top: 4px;
        }
        table.requiredRadioButtonField{
            width:158%;
        }
        table.alignServiceRadio{
            width: 134%;
        }
        table.alignCosRadio{
            width: 119%;
        }
        #dropdownBlocksCIR {
            width: 100% !important;
        }
        
        /*End*/
</style>

    <div class="waitingHolder configuresiteLoading" style="top: 50%; left:50%;position: fixed;z-index:9999;">
        <img class="waitingImage" src="{!$Resource.LoadingImage}" title="Please Wait" />
    </div>
    
    <script type="text/javascript">
    var totalNumberOfSitesSoftDeleted = 0;
    var onloadVal=true;
    
    function updateClassOfService(){
        var serviceTypeVal = $('[id$=serviceTypeRadioFields] input:checked').val();
        var selectedVal = $('[id$=classOfServiceType] input:checked').val();
        if(serviceTypeVal != null && serviceTypeVal == 'ASE Broadband'){
                onloadVal = true;
                var cosList = ['Broadband Basic'];
                addAndRemoveList(cosList, 'classOfServiceDropDownCls');
            }
        else if(selectedVal != null && selectedVal == 'Basic' && serviceTypeVal != null && serviceTypeVal == 'ASE Basic'){
            var cosList = ['Non-Critical High','Business Critical - Medium','Real Time'];
            onloadVal=true;
            addAndRemoveList(cosList, 'classOfServiceDropDownCls');
        }
    }
    function filterDropdownValues(fieldType, element){
            var isPromotion = $('[id$=promotionFlag]').val();
            var serviceTypeVal = $('[id$=serviceTypeRadioFields] input:checked').val();
            switch(fieldType){
                case 'Service Type':
                    if(isPromotion == 'true'){                       
                     if({!promoPortSpeedAseList} !== 'undefined'){
                             var promoList = {!promoPortSpeedAseList};
                             onloadVal = true;
                            if(typeof serviceTypeVal != 'undefined' && serviceTypeVal != null && serviceTypeVal == 'ASE Broadband'){
                                promoList = ['1 Gbps Port'];
                             }
                             addAndRemoveList(promoList, 'portSpeedCls');
                         } 
                    }
                    else if(typeof serviceTypeVal != 'undefined' && serviceTypeVal != null && serviceTypeVal == 'ASE Basic'){
                         if({!basePortSpeedAseList} !== 'undefined'){
                            var baseList = {!basePortSpeedAseList};
                            onloadVal = true;
                            addAndRemoveList(baseList, 'portSpeedCls');
                        }
                    }
                    
                break;
                case 'Port Speed':
                    filterInterfaceOptionsOnServiceTypeAndPortSpeedChange(isPromotion);
                break;
                case 'Committed Information Rate (CIR)':
                var ppcos = $('[id$=ppcosFlag]').val();
                      /*var serviceTypeVal = $('[id$=serviceTypeRadioFields] input:checked').val();*/
                      var currentElementVal = $(element).val();
                      setTimeout(function(){
                      if(currentElementVal != null && currentElementVal.length>0){
                        if(serviceTypeVal != null && serviceTypeVal == 'ASE Broadband'){
                            $('[id$=classOfServiceType] input:radio[value=Basic]').removeAttr('disabled').prop('checked','checked').trigger('change');
                            $('[id$=classOfServiceType] input:radio[value=PPCoS]').attr('disabled','true');
                            
                        }
                        else if(serviceTypeVal != null && serviceTypeVal == 'ASE Basic'){
                            $('[id$=classOfServiceType] input:radio[value=Basic]').removeAttr('disabled');
                            if(ppcos != 'undefined' && ppcos == 'true'){
                                $('[id$=classOfServiceType] input:radio[value=PPCoS]').removeAttr('disabled');
                            }
                            else{
                                $('[id$=classOfServiceType] input:radio[value=Basic]').removeAttr('disabled').prop('checked','checked').trigger('change');
                                $('[id$=classOfServiceType] input:radio[value=PPCoS]').attr('disabled','true');
                            }
                            
                            
                        }
                      }
                      else{
                        $('[id$=classOfServiceType] input:radio').prop('checked',false).trigger('change');
                        $('[id$=classOfServiceType] input:radio').attr('disabled','true');
                      }
                      },100);
                break;
                default:
                break;
            }
        }
        
        function filterInterfaceOptionsOnServiceTypeAndPortSpeedChange(isPromotion){
           /*Update InterfaceType*/
                var serviceTypeVal = $('[id$=serviceTypeRadioFields] input:checked').val();
                var portSpeedVar = $('.portSpeedCls select').val();
                if(serviceTypeVal != null){
                    if(serviceTypeVal == 'ASE Broadband'){
                        setTimeout(function(){
                            $('.interfaceTypeCls option:gt(0)').each(function(){   
                                if($(this).val() && ($(this).val() != '08LN9.1GE (1000 Base T)')){
                                    $(this).remove();
                                }
                            });
                        },100);
                        //update CIR list
                        setTimeout(function(){
                            if({!broadband1000List} !== 'undefined'){
                                var cirList = {!broadband1000List};
                                onloadVal =  true;
                                addAndRemoveList(cirList, 'CIRCls');
                    }
                        },100);                        
                    }
                    else if(serviceTypeVal == 'ASE Basic'){
                        switch(portSpeedVar){
                            case '100 Mbps Port':
                                setTimeout(function(){
                                    $('.interfaceTypeCls option:gt(0)').each(function(){   
                                        if($(this).val() && ($(this).val() != '04LN9.1CT (100 Base T)')){
                                            $(this).remove();
                                        }
                                    });
                                },100);
                                setTimeout(function(){
                                    if(typeof isPromotion !== 'undefined'){
                                        if(isPromotion == 'true'){
                                            if({!basic100PromoList} !== 'undefined'){
                                                var cirList = {!basic100PromoList};
                                                onloadVal =  true;
                                                addAndRemoveList(cirList, 'CIRCls');
                                            }
                                        }
                                        else if(isPromotion == 'false'){
                                            if({!basic100BaseList} !== 'undefined'){
                                                var cirList = {!basic100BaseList};
                                                onloadVal =  true;
                                                addAndRemoveList(cirList, 'CIRCls');
                                            }
                                        }
                                    }
                                },100);                                
                            break;
                            case '1 Gbps Port':
                                setTimeout(function(){
                                    $('.interfaceTypeCls option:gt(0)').each(function(){   
                                        if($(this).val()){
                                            if($(this).val()){
                                                if($(this).val() == '08LN9.1GE (1000 Base T)' || $(this).val() == '02LNF.A02 (1000 Base LX)' || $(this).val() == '02LNF.A03 (1000 Base ZX)' || $(this).val() == '02LNF.A04 (1000 Base SX)'){
                                                    
                                                }else{
                                                    $(this).remove();
                                                }
                                            }
                                        }
                                    });
                                },100);
                                setTimeout(function(){
                                    if(typeof isPromotion !== 'undefined'){
                                        if(isPromotion == 'true'){
                                            if({!basic1000PromoList} !== 'undefined'){
                                                var cirList = {!basic1000PromoList};
                                                onloadVal =  true;
                                                addAndRemoveList(cirList, 'CIRCls');
                                            }
                                        }
                                        else if(isPromotion == 'false'){
                                            if({!basic1000BaseList} !== 'undefined'){
                                                var cirList = {!basic1000BaseList};
                                                onloadVal =  true;
                                                addAndRemoveList(cirList, 'CIRCls');
                                            }
                                        }
                                    }
                                },100);                                
                            break;
                            case '10 Gbps Port':
                                setTimeout(function(){
                                    $('.interfaceTypeCls option:gt(0)').each(function(){   
                                        if($(this).val()){
                                            if($(this).val() == '02LNF.A02 (10G Base LR SMF/10000 Base LX)' || $(this).val() == '02LNF.A03 (10G Base ER SMF/10000 Base ZX)' || $(this).val() == '02LNF.A04 (10G Base SR MMF/10000 Base SX)'){
                                                
                                            }else{
                                                $(this).remove();
                                            }
                                        }
                                    });
                                },100);
                                setTimeout(function(){
                                    if(typeof isPromotion !== 'undefined'){
                                        if(isPromotion == 'false'){
                                            if({!basic10000BaseList} !== 'undefined'){
                                                var cirList = {!basic10000BaseList};
                                                onloadVal =  true;
                                                addAndRemoveList(cirList, 'CIRCls');
                                            }
                                        }
                                    }
                                },100);                                
                            break;
                            default:
                            break;
                        }
                    }
                }
        }

        function addAndRemoveList(list, element){
            var selectedVal='';
            console.log('list >>> '+list+'\nelement:: '+element+'\nonloadVal ::: '+onloadVal);
            if(onloadVal == true){
                //$('.'+element+' option:gt(0)').remove();
                selectedVal = $('.'+element+' option:selected').val();
                $('.'+element+' option:gt(0)').not('option:selected').remove();
                
            }
            else
            {
                $('.'+element+' option:gt(0)').remove();
            } 
                $.each(list, function( index, value ) {
                if(onloadVal == true){
                    if(selectedVal != value){
                        $("."+element+" option").eq(index).after($("<option></option>").val(value).text(value));
                    }
                }
                else{
                     $("."+element+" option").eq(index).after($("<option></option>").val(value).text(value));
                }
               
            });
            onloadVal = false;
        }
        
        function getSoftDeletedSites(){
            var quoteId = "{!quoteId}";
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.SiteConfigureController.fetchSoftDeletedSites}',
                quoteId,
                function(result, event){
                    if (result) {
                        totalNumberOfSitesSoftDeleted = result.length;
                        if(result.length > 0){
                            for(var id=0;id<result.length;id++){
                                var deletedRow = $('tbody').find("#undo_"+result[id]).closest('tr');
                                deletedRow.children().removeClass('active').addClass('deletedRow');
                                deletedRow.find(".checkedSite").prop("disabled", "true");
                                deletedRow.find(".siteAddressInLeftPanel").css("width", "190px"); 
                                deletedRow.find(".undoRemoveLnk").css("display", "block");
                                deletedRow.find(".undoRemoveLnk").css("pointer-events", "all");  
                            }
                        }
                    }
                }
            );        
        }
        
        function updateHiddenData(element,inputfield,updateField){
            var selectedVal = '';
            var serviceTypeVal = $('[id$=serviceTypeRadioFields] input:checked').val();
            if($('[id$='+inputfield+']').is('select')){
                selectedVal = $('[id$='+inputfield+']').val();
            }
            else{
                selectedVal = $('[id$='+inputfield+'] input:checked').val();
            }
            
            if(selectedVal != null && selectedVal != '' && typeof selectedVal != 'undefined'){                
                $('[id$='+updateField+']').val(selectedVal);
                $('[id$='+updateField+']').trigger('change');            
                if(inputfield == 'serviceTypeRadioFields' && selectedVal != null && serviceTypeVal != '' && selectedVal != ''){
                    if(selectedVal == 'ASE Basic'){
                        $('.tierSpanCls').show();
                    }
                    else{
                        $('.tierSpanCls').hide();
                    }
                }
                
                if(inputfield == 'classOfServiceType'){
                    if(selectedVal != null && selectedVal == 'Basic' && serviceTypeVal != null && serviceTypeVal == 'ASE Broadband'){
                        var cosList = ['Broadband Basic'];
                        addAndRemoveList(cosList, 'classOfServiceDropDownCls');
                    }
                    else if(selectedVal != null && selectedVal == 'Basic' && serviceTypeVal != null && serviceTypeVal == 'ASE Basic'){
                        var cosList = ['Non-Critical High','Business Critical - Medium','Real Time'];
                        addAndRemoveList(cosList, 'classOfServiceDropDownCls');
                    }
                }
                
                if(inputfield == 'configType'){
                    $('[id$=siteDesignation] input:radio').attr('checked', false);
                    $('[id$=siteDesignation] input:radio').attr('disabled','true');
                    $('[id$=portVLANBased] input:radio').attr('checked', false);
                    $('[id$=portVLANBased] input:radio').attr('disabled','true');
                    if(selectedVal == 'Point To Point' || selectedVal == 'Multi Point'){
                        $('[id$=portVLANBased] input:radio').removeAttr('disabled');
                    }else{
                        $('[id$=siteDesignation] input:radio').removeAttr('disabled');
                    }
                }
                
                if(inputfield == 'siteDesignation'){
                    if(selectedVal == 'Hub'){
                        selectVLANBasedOption();
                    }else{
                        clearPortVLANOption();
                    }
                }
            }else{
                if(inputfield == 'CNUMFields'){
                    $('[id$=serviceTypeRadioFields] input').attr('disabled','true');
                    $('.tierSpanCls').hide();
                }
            }
            
        } 

        function checkBasicBroadbandEnablementJS(){
            checkBasicBroadbandEnablement();
        }
        
            function changeinterfaceonapplyandget(){
               var valporttype=$(".privatedrop").find("select").val();
               
               if(valporttype!=null && valporttype == 'Private Line'){
                  $(".id123").addClass("changeinterface1");
                  $(".id123drop").addClass("changeinterface2");
                  $(".id123drop").find("select").addClass("changeinterface3");
               }else {        
                    $(".changeinterface1").removeClass("changeinterface1");
                    $(".changeinterface2").removeClass("changeinterface2");
                    $(".changeinterface3").removeClass("changeinterface3");
                }
                //Disable btn after pricing
                
                var priceBtnObj = $('.createUserButtonDisable');
                if(priceBtnObj != null && typeof priceBtnObj != undefined){
                    priceBtnObj.prop('disabled',true);
                }
    
                return true;
            }
            
            function changeinterface(inpObj){
                if(inpObj!=null && inpObj.value == 'Private Line'){
                    $(".id123").addClass("changeinterface1");
                    $(".id123drop").addClass("changeinterface2");
                    $(".id123drop").find("select").addClass("changeinterface3");
                }else {
                    $(".changeinterface1").removeClass("changeinterface1");
                    $(".changeinterface2").removeClass("changeinterface2");
                    $(".changeinterface3").removeClass("changeinterface3");
                    
                }
                return;
            }    
        
            function refreshJSVariables(){
                requiredfields = document.getElementById("hdnFieldIndices").value;
                fieldIndexAr = requiredfields.split(",");
                lastValue = fieldIndexAr[fieldIndexAr.length-1];
                lastValueAfterIncr = parseInt(lastValue) + 1;
                fieldIndexArNew = requiredfields.split(",");
                portTypeIndex = parseInt(document.getElementById("hdnPortTypeIndex").value);
                hiCapFlexIndex = parseInt(document.getElementById("hdnHiCapIndex").value);
               
            }
            
            var requiredfields = "{!fieldIndices}";
            var fieldIndexAr = [];
            var fieldIndexArNew = [];
            var lastValue;
            fieldIndexAr = requiredfields.split(",");
            lastValue = fieldIndexAr[fieldIndexAr.length-1];
            var lastValueAfterIncr = parseInt(lastValue) + 1
            fieldIndexArNew = requiredfields.split(",");
            var portTypeIndex = parseInt('{!portTypeIndex}');
            var hiCapFlexIndex = parseInt('{!HicapIndexInt}');
           
            var requiredCheckboxes = "{!selectCheckBox}";
            var checkboxIndexArray = [];
            checkboxIndexArray = requiredCheckboxes.split(",");
         
            var requiredDropdowns = "{!selectDropdown}";
            var dropdownIndexArray = [];
            dropdownIndexArray = requiredDropdowns.split(","); 
            
            function disableCheckboxes() {
                for( var i = 0; i < checkboxIndexArray.length; i++ ) {
                    cntr = parseInt(checkboxIndexArray[i]);
                    var currIndexId = 'container'+cntr;
                    var currElementTr = document.getElementById(currIndexId);
                     
                    if( typeof currElementTr != 'undefined' ) {
                        var innerTds = currElementTr.getElementsByTagName("td");
                        var checkedElem = innerTds[1].getElementsByTagName("input");
                        checkedElem[0].disabled=true;
                    }   
                }         
            }
            
            function disableDropdowns()  {
                for( var i = 0; i < dropdownIndexArray.length; i++ ) {
                    cntr = parseInt(dropdownIndexArray[i]);
                    var currentIndexId = 'container'+cntr;
                    var currentElementTr = document.getElementById(currentIndexId);
                     
                    if( typeof currentElementTr != 'undefined' ) {
                        var innerTd = currentElementTr.getElementsByTagName("td");
                        var checkedElement = innerTd[1].getElementsByTagName("select");
                        checkedElement[0].disabled=true;
                    }   
                } 
            } 
            
            function disableIpflexDropdowns()  {
              $(".dropDownValue").attr("disabled","disabled"); 
            }
                    
            function closeComPricing(){
                document.getElementById('loadingImg').style.display = "block";
                var cartId = "{!cartId}";
                    
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.SiteConfigureController.checkLiemsPriceStatus}',
                     cartId,
                     handleResult
                );   
                
            }
            
            function handleResult(result, event){
                if( event.status ){
                    if( result === 'Inprogress' ){
                        closeComPricing();
                    }
                    else{
                        location.reload();  
                    }
                }
            }
        
           function refreshPrices() {
               location.reload(); 
           }
            
            function getSelRadVal(theoptGrpVal,theIdVal,oSelectedRadio){
                //Uncheck all the radio buttons initially
               $(".IPType input[type='radio']").each(function(){
                    this.checked = false
                });
            }
            
            function parseAndCheckPortTypeRelatedValidation(cntr){
                
                var currIndexId = 'container'+parseInt(cntr);
                var currElementTr = document.getElementById(currIndexId);
                if( typeof currElementTr != 'undefined' ){
                    var innerTds = currElementTr.getElementsByTagName("td");
                    var selectElem = innerTds[1].getElementsByTagName("select");
                    if( typeof selectElem != 'undefined' ){
                        if( selectElem[0].value == 'Switched Ethernet' ){
                            return true;
                        } else {
                            return false;
                        }
                    }
                }
            
            }
            
            var isAppended = false;
            var inpPortType;
            var interfaceTypeIndex;
            var VLANLogicChannelIndex; 
          
            function checkinterface(){
                var valhtml=$(".changeinterface2").html();           
                if(valhtml!=null && valhtml!='undefined'){
                    $(".id123drop").find("select").addClass("changeinterface3");
                   
                }
                return;
            }
            
            function setTheBgColor(){
                document.getElementById("configaddedsitesNew").style.bgcolor='#f5f5f5';
            }
            
            function highlightTheRow(inpObj){
                inpObj.bgColor = "white";
            }
            
            var isReviewBtn;
            function errorMsgDisplay(){
                if($('.errorM3').text().length>0){
                    isReviewBtn=!$('#btnId').attr('disabled');
                    window.scrollTo(0, 0);
                    $("body").append('<div class="blockBackground">');
                    $("body").css('overflow','hidden');
                    document.getElementById("apltConfElisiteID").style.display="block";
                    $('.configureBtnSection').css("display","none");
                    $('.modal-dialog').css("z-index","1031");
                    $('.errorM3').appendTo('#apltConfElisiteID .modal-body');
                    $('.errorM3:eq(1)').html('');
                    $('body').on('scroll mousewheel touchmove', stopScrolling);
                }           
            }
            
            function stopScrolling (e) {
                e.preventDefault();
                e.stopPropagation();
                return false;
            }
            
            function closeFun(){
                $("body").css('overflow-y','auto');
                $('.errorM3').remove();
                $('.blockBackground').remove();
                $("#apltConfElisiteID").hide();
                if(isReviewBtn)
                    validateASEFormAndEnableApply();
                else
                   validateASEFormAndEnableApply();
    
                $('body').off('scroll mousewheel touchmove', stopScrolling);
                checkForEligibleSitesCount();
            }
        
       function managedRouterFunctionality(flag) {
           if( productName == 'AT&T Managed Internet Service' ){
               var checkArr=["Switched Ethernet","Tele Install","Onsite Install","--None--"];
               var isMngRouter = getFieldReference('1').checked || getFieldReference('0').checked;       
               var portSpeedTdId=portTypeIndex + 1;
               var selPSVal=parseInt($('#container'+portSpeedTdId+' option:selected').text(),10);
               var isSESelected=$('#container'+portTypeIndex+' option[value="'+checkArr[0]+'"]:selected').length;
               var instTypeTdId=$('.dropDownValue option[value="'+checkArr[1]+'"],option[value="'+checkArr[2]+'"]').closest('tr').attr('id');
        
               $('#'+instTypeTdId+' .dropDownValue').find('option').not(':first').hide();
               
               if(flag)
                   $('#'+instTypeTdId+' .dropDownValue option:eq(0)').prop('selected', true);
               
               if(isMngRouter){
                   if(isSESelected && selPSVal>100)
                       $('#'+instTypeTdId+' .dropDownValue option:eq(2)').show();
                   else
                       $('#'+instTypeTdId+' .dropDownValue').find('option').show();
               }
               else
                   $('#'+instTypeTdId+' .dropDownValue option:eq(1)').show();
        
            }
        }
        </script>
    <script>
            // Scripts for "AT&T Internet Access" flow only
            var sCheckedItem, sProductName = '{!custSiteQuoteIns.AT_T_Quote__r.Product__r.Name}';
            if("AT&T Internet Access" === sProductName){
                $("input:checkbox").on('click', function() {
                    var $box = $(this);
                    if ($box.is(":checked")) {
                        var group = "input[name*='checkdone1']";
                        $(group).prop("checked", false);
                        $box.prop("checked", true);
                        // Update the global variable with the checkbox value
                        sCheckedItem = $box.next().html();
                    } else {
                        $box.prop("checked", false);
                    }
                });
            }
            function selectCheckbox (){
                var counter =0;
                // Only run for "AT&T Internet Access" flow
                if("AT&T Internet Access" === sProductName){
                    var group = "input[name*='checkdone1']";
                    $(group).each(function(){
                        // Check if the next items value is equal to the selected one and check this
                        if($.trim($(this).next().html()) === sCheckedItem){
                            $(this).prop("checked",true);
                        }else if(counter == 0 && sCheckedItem == null){
                            $(this).prop("checked",true);
                        }else{
                            // Otherwise uncheck
                            $(this).prop("checked",false);
                        }
                        counter++;
                    });
                }
            }                                                               
        </script>

    <style type="text/css">
.selectedSiteHighlighted {
    background-color: #F5F5F5 !important;
}

.styled-select-small select {
    background: none repeat scroll 0% 0% transparent;
    padding: 5px;
    line-height: 26px;
    border: 0px none;
    border-radius: 0px;
    height: 35px;
    //width: 300px;
    cursor: pointer;
    -moz-appearance: none;
}

//
#configaddedsites {
    margin-top: 20px;
    background: #fff !important;
    height: 370px;
    overflow-y: auto;
    border: 1px solid #ddd;
}

#configaddedsites tr {
    border-bottom: 1px dashed #ddd;
}

#configaddedsites td {
    border: 0 !important;
}

#configaddedsites td:nth-child(odd) {
    display: inline;
}

//
#configaddedsites td:nth-child(even) {
    width: 100%;
    padding: 10px 20px;
}

#theTable1 td {
    border: none !important;
    padding: 15px;
}

@
-moz-document url-prefix () { . priceAligned {
    margin-top: -11px;
}

}
.monthlyprice {
    font-family: 'omnes_att_iimedium';
    background: #fff;
    border-radius: 4px;
    padding: 6px 12px;
    text-align: right;
    width: 100%;
    line-height: 1.42857143;
}

.noborders td {
    border: 0 !important;
}

.tooltipTrigger {
    cursor: pointer;
}

.CnfSiteTooltip {
    float: right;
}

.markCSS {
    background-color: #FFFFFF;
    color: black;
}

.disableClearForm {
    pointer-events: none;
    cursor: default;
    color: gray !important;
}

.usageDiv {
    Font-Family: omnes_att_iimedium;
    Font-Size: 16px;
    color: #b30a3c;
    Text-Align: left;
    position: absolute;
}

#errorMessageFlag {
    margin-bottom: 10px !important;
    padding-top: 10px;
}
/*Radhika : 12 Dec 2015 UBB Font change on on in and out region fix */
.uBBItalic {
    font-family: omnes_att_iilight_italic;
    font-size: 14px;
    color: #000000 !important;
    text-align: left;
    margin-left: 27px;
}

.uBBItalicDisable {
    font-family: omnes_att_iilight_italic;
    font-size: 14px;
    color: #a2a2a2 !important;
    text-align: left;
    margin-left: 25px;
}

.uBBLabel {
    font-family: omnes_light;
    font-size: 16px;
    color: #000000 !important;
    text-align: left;
    margin-right: 8px;
}

.uBBLabelDisable {
    font-family: omnes_light;
    font-size: 16px;
    color: #a2a2a2 !important;
    text-align: left;
    margin-right: 8px;
}

.uBBItalicDivIN {
    margin-bottom: 16px;
}

.uBBItalicDivOUT {
    margin-bottom: 0px;
}

/*Radhika : UBB Font change on on in and out region fix END*/
.dropDownValue {
    font-family: omnes_light !important;
    color: #000000;
    font-size: 16px;
    text-align: left;
    margin-top: 1% width:300px;
    height: 40px;
}

.styled-select-small {
    background-size: 35px 35px;
    moz-appearance: none;
    -webkit-appearance: none;
    height: 35px;
}

.bandwidthDiv {
    width: 300px;
    color: #4CA90C;
    font-family: omnes_att_iimedium;
    font-size: 16px;
    margin-top: 4%;
    margin-bottom: 3%;
    white-space: nowrap;
}

.labelsTextClass {
    font-family: omnes_att_iimedium;
    font-size: 16px;
    font-weight: normal;
    color: #000000;
    text-align: left;
}

.OverageDiv {
    font-family: omnes_light !important;
    font-size: 12px;
    margin-left: -3%;
    text-align: left;
    color: #000000;
}

.usageItalicHeader {
    margin-left: 8%;
    font-size: 16px;
    color: #000000;
    text-align: left;
    font-family: omnes_att_iilight_italic;
}

.tooltipSpace {
    margin-left: 2.1%;
}

.labelsTextClass {
    font-family: omnes_att_iimedium;
    font-size: 16px;
    font-weight: normal;
    color: #000000;
    text-align: left;
}

.glyphicon {
    cursor: pointer;
}

.arrowImageDim {
    height: 65px !important;
    width: 65px !important;
}

.scrollToTop {
    padding: 10px;
    text-align: center;
    font-weight: bold;
    color: #444;
    text-decoration: none;
    position: fixed;
    top: 80%;
    right: 30px;
    display: none; 
    background: url(url('!$Resource.scrollTop') no-repeat center; )
    no-repeat 0px 20px;
    width: 72px;
    height: 106px;
    z-index: 9999;
}

.scrollToTop:hover {
    text-decoration: none;
}

i.glyphicon span {
    display: none;
    position: absolute; //
    bottom: 25px;
    top: -35px; //
    left: 25px;
    left: 35px;
    width: 275px;
    padding: 10px;
    z-index: 100;
    background: #fff; //
    height: 90px;
    color: #000000;
    text-align: left; //
    text-shadow: rgba(0, 0, 0, 0.1) 1px 1px 1px;
    box-shadow: rgba(0, 0, 0, 0.1) 1px 1px 2px 1px;
    -moz-border-radius: 5px; /* this works only in camino/firefox */
    -webkit-border-radius: 5px; /* this is just for Safari */
    font-family: omnes_light !important;
    font-size: 13px !important;
}

i.glyphicon span:before {
    content: '';
    display: block;
    width: 0;
    height: 0;
    position: absolute;
    border-top: 15px solid transparent;
    border-bottom: 15px solid transparent;
    border-right: 15px solid white; //
    border-color: #ccc;
    left: -14px;
    top: 28px;
    filter: drop-shadow(rgba(0, 0, 0, 0.3) 0 2px 10px);
}

i:hover.glyphicon span {
    display: block;
}

h1.manage_content-header,div.tabbed_menu {
    margin-bottom: 20px !important;
    margin-top: 20px !important;
}

.navLinkConfig {
    
}

.modal-backdrop {
    background-color: #fff;
}

.createUserButtonDisable {
    -webkit-border-radius: 4px !important;
}

.priceText {
    height: 24px !important;
    text-align: right !important;
    width: 100% !important;
    margin-left: 20px !important;
    border: 1px solid #FFF !important;
    margin-top: -6px !important;
}
.deletedRow{
    background-color: #e6e6e6 !important;
    pointer-events:none;
}
</style>
    <apex:form id="configuresiteForm">
    <apex:pageMessages escape="true" id="errmsgModal"></apex:pageMessages>
        <div class="container p0">
            <apex:outputPanel id="headerContent">
                <h3 style="font-size: 32px !important; color: #666;">{!quoteObj.End_Customer__r.Name}</h3>
                <div class="row p0" style="margin: 0px; padding-bottom: 5px;">
                    <div class="col-xs-3 p0">
                        <label
                            style="margin: 10px 10px 0px 0px !important; font-weight: bold;"><apex:outputText value="Quote Name" /></label>
                        <apex:outputText value="{!proposalData.Apttus_Proposal__Proposal_Name__c}" />
                    </div>
                    <div class="col-xs-3 p0">
                        <label
                            style="margin: 10px 10px 0px 0px !important; font-weight: bold;"><apex:outputText value="Quote ID" /></label>
                        <apex:outputText value="{!proposalData.Name}" />
                    </div>
                    <div class="col-xs-4 p0">
                        <label
                            style="margin: 10px 10px 0px 0px !important; font-weight: bold;"><apex:outputText value="Product" /></label>
                        <apex:outputText value="{!proposalData.Product_New_Name__c}" />
                    </div>
                    <div class="col-xs-2 p0" style="text-align: right;">
                        <label
                            style="margin: 10px 10px 0px 0px !important; font-weight: bold;"><apex:outputText value="Term" /></label>
                        <apex:outputText value="{!proposalData.Apttus_Proposal__Payment_Term__c}" />
                    </div>
                </div>
                <hr class="blue_hr" />
                <div class="row m0 p0 ng-scope">
                    <div class="col-xs-12 m0 p0" style="margin-bottom: 20px;">
                        <p>Click anywhere in the site row to configure your product
                            for that site. You can apply the same configuration to multiple
                            sites. All sites must be configured to continue with the quote.</p>
                    </div>
                </div>
            </apex:outputPanel>
            <div class="col-xs-12 p0">
                <!-- <apex:outputPanel id="leftSectionContent"> -->
                <div class="col-xs-6 p0">
                    <div class="col-xs-12 p0" id="leftPanelContainer"
                        style="z-index: 1;">
                        <div style="float: right;">
                            <apex:commandButton id="addnewAddressBtn" value="{!$Label.Add_New_Address}"
                                oncomplete="openAddAddressPop();" action="{!GotoAddAddressPage}"
                                status="loading"
                                styleClass="{!IF(configureSitesFlag,'disableBtn','')} btn-primary" />
                        </div>
                        <div id="siteCountsDiv1"
                            style="color: orange; font-weight: bold; float: left;">{!noOfConfigedSites}
                            of {!TotalSitesCount} {!$Label.Sites_Configured}</div>
                        <apex:selectList id="optgrp"
                            styleClass="form-control styled-select-small"
                            style="width: 164px;margin-top:30px;" value="{!selectedFilter}"
                            size="1">
                            <apex:selectOptions value="{!FilterOptions}" />
                            <apex:actionSupport event="onchange"
                                action="{!handlefilterSites}" reRender="PageBlockSelectSite"
                                status="loading"
                                oncomplete="getSoftDeletedSites();activeFirstSite('true');setTheBgColor();makeTableActive();validateASEFormAndEnableApply();" />
                        </apex:selectList>
                        <br />
                        <div class="pull-right">
                            <apex:commandLink action="{!removeConfigureSiteTest}"
                                id="RemoveLink" value="{!$Label.Remove_Label}"
                                oncomplete="softDeleteSelectedSites();" reRender="RemoveLink"
                                status="loading" styleClass="RmvLink" />
                            <apex:actionFunction name="softDeletedSiteIDS"
                                action="{!removeConfigureSite}" status="loading"
                                rerender="reviewQuoteBtnSection" oncomplete="">
                                <apex:param assignTo="{!junctToSoftDelete}"
                                    name="junctToSoftDelete" value="" />
                            </apex:actionFunction>
                        </div>
                        <!-- end of filter-->
                        <apex:outputPanel id="configureBtnSection"
                            styleClass="configureBtnSection" rendered="{!configureSitesFlag}">
                            <div class="headerBlock">Select from eligible sites
                                highlighted below to apply configuration.</div>
                            <div class="btnBlock">
                                <apex:commandButton styleClass="configureBtn col-md-4 p0 fontForConfigureBtn"
                                    value="{!$Label.Apply_to_All_Eligible}"
                                    action="{!eligibleSitesApply}" rerender="configuresiteForm"
                                    oncomplete="closeComPricing();" status="loading">
                                    <apex:param assignTo="{!allEligibleSelected}"
                                        name="allEligibleSelected" value="true" />
                                </apex:commandButton>
                                <apex:commandButton styleClass="configureBtn col-md-5 p0 selectedEligibleSites disableBtn fontForConfigureBtn"
                                    style="margin: 0px 20px;"
                                    value="{!$Label.Apply_to_Selected_Eligible}"
                                    action="{!eligibleSitesApply}" rerender="configuresiteForm"
                                    oncomplete="closeComPricing();" status="loading" />
                                <apex:commandButton styleClass="configureBtn col-md-2 p0 fontForConfigureBtn"
                                    value="{!$Label.Cancel}" style="padding: 0 18px !important;"
                                    action="{!cancelConfigureSiteChanges}"
                                    rerender="configuresiteForm" status="loading"
                                    oncomplete="scrollToWindowPos();validateASEFormAndEnableApply();getSoftDeletedSites();" />
                            </div>
                        </apex:outputPanel>

                        <div
                            class="siteTrigger {!IF(configureSitesFlag,'resizeLeftPanel','leftPanelheight')}"
                            id="configaddedsitesNew">
                            <apex:pageBlock id="PageBlockSelectSite">
                                <apex:pageBlockTable value="{!listCustomerSiteMaster}" var="c"
                                    id="pbtable" styleClass="siteListPanel">
                                    <apex:column id="Column1"
                                        styleClass="rowLink  {!c.cellFilterSitesClass} siteListPanelSite {!IF(c.siteEnabled,'','highlightEligbleSites')}"
                                        style="border-left: 0px;">
                                        <apex:facet name="header">
                                            <apex:inputCheckbox id="selectAll"
                                                disabled="{!selectAllCheckBox}"
                                                onclick="javascript:selectAll(this);"
                                                styleClass="selectAllClass" style="margin-top: 3px;">
                                                <apex:outputText value="{!$Label.Select_All}"
                                                    style="font-weight: normal !important; color:#000000;" />
                                            </apex:inputCheckbox>
                                        </apex:facet>
                                        <div class="checkbox-inline" id="{!c.custSiteIns.Id}">
                                            <apex:inputCheckbox value="{!c.selected}" id="chk2"
                                                disabled="{!c.eligibleSFlag}" rendered="{!c.showSites}"
                                                styleClass="checkedSite "
                                                onclick="{!configureSitesFlag}?uncheckSiteOnEligibleFlag():uncheckSite(this)" />
                                            <div class="siteAddressInLeftPanel">
                                                <div
                                                    class="{!IF(configureSitesFlag,'','siteNameConfigured')}"
                                                    onclick="{!configureSitesFlag}?'':configureSite('{!c.custSiteIns.Id}')">
                                                    <apex:outputText value="{!c.custSiteIns.Site_Name__c}"
                                                        rendered="{!c.showSites}" />
                                                </div>
                                                <apex:outputText value="{!c.custSiteIns.Address_Line__c},"
                                                    rendered="{!c.showSites}" />
                                                <br />
                                                <apex:outputText value="{!c.custSiteIns.City__c}, {!c.custSiteIns.State__c} {!c.custSiteIns.Zip_Code__c}"
                                                    rendered="{!c.showSites}" />
                                            </div>
                                        </div>
                                        <apex:outputPanel rendered="{!c.showSites}">
                                            <div class="undoRemoveLnk" id="undo_{!c.custSiteIns.Id}">
                                                <a href="javascript:undoRemove('{!c.custSiteIns.Id}')">Undo
                                                    Remove</a>
                                            </div>
                                        </apex:outputPanel>
                                    </apex:column>
                                    <apex:column id="Column2"
                                        styleClass="rowLink {!c.cellFilterSitesClass} {!IF(c.siteEnabled,'','highlightEligbleSites')}">
                                        <apex:facet name="header">
                                            <apex:outputText value="{!$Label.Monthly_Label}"
                                                style="font-weight: normal !important;color:#000000;" />
                                        </apex:facet>
                                        <span id="tick{!c.custSiteIns.Id}"
                                            style="display: inline-block; color: #444 !important; float: right; padding: 0px 0 0 0;">
                                            <apex:outputPanel rendered="{!c.attCustomerSiteTotal != null && c.attCustomerSiteTotal>0 && c.showSites}">
                                                <apex:outputText value="${0,number,###,###,##0.00}">
                                                    <apex:param value="{!c.attCustomerSiteTotal}" />
                                                </apex:outputText>
                                            </apex:outputPanel>
                                        </span>
                                        <span id="process{!c.custSiteIns.Id}"
                                            style="padding: 10px; font-size: 25px; display: none;">
                                            <apex:image url="{!URLFOR($Resource.processIcon)}"
                                                style="width: 40px; height: 50px;padding-top: 15px;" />
                                        </span>
                                    </apex:column>
                                    <apex:column id="Column3"
                                        styleClass="rowLink {!c.cellFilterSitesClass} {!IF(c.siteEnabled,'','highlightEligbleSites')}">
                                        <apex:facet name="header">
                                            <apex:outputText value="{!$Label.OneTime_Label}"
                                                style="font-weight: normal !important;color:#000000;white-space: nowrap;" />
                                        </apex:facet>
                                        <span id="oneTimeTick{!c.custSiteIns.Id}"
                                            style="display: inline-block; color: #444 !important; float: right; padding: 0px 0 0 0;">
                                            <apex:outputPanel rendered="{!c.attCustomerSiteTotal != null && c.attCustomerSiteTotal>0 && c.showSites}">
                                                <apex:outputText styleClass="{!c.attCustomerSiteOneTime}"
                                                    value="${0,number,###,###,##0.00}">
                                                    <apex:param value="{!c.attCustomerSiteOneTime}" />
                                                </apex:outputText>
                                            </apex:outputPanel>
                                        </span>
                                        <span id="oneTimeProcess{!c.custSiteIns.Id}"
                                            style="padding: 10px; font-size: 25px; display: none;">
                                            <apex:image url="{!URLFOR($Resource.processIcon)}"
                                                style="width: 40px; height: 50px;padding-top: 15px; margin-left:5px;" />
                                        </span>
                                    </apex:column>
                                </apex:pageBlockTable>
                                <script>
                                    getSoftDeletedSites();
                                </script>
                            </apex:pageBlock>
                            <apex:actionFunction id="toggleConfigureSite"
                                name="toggleConfigureSite" action="{!togglesitesconfigpage}"
                                rerender="" oncomplete="" status="loading">
                                <apex:param assignTo="{!selectedSiteId}" name="siteid" value="" />
                            </apex:actionFunction>
                        </div>
                    </div>
                </div>
                <div class="col-xs-6" style="padding-right: 0px;">
                    <div
                        class="products-container col-xs-12 bglightgrey2 ng-scope" style="padding-right: 0px;">
                        <apex:outputText value="{!selectedSiteInfo.Site_Name__c}"
                            styleClass="{!selectedSiteInfo.Id}"></apex:outputText>
                        <br />
                        <apex:outputText value="{!selectedSiteInfo.Address_Line__c}, {!selectedSiteInfo.City__c}, {!selectedSiteInfo.State__c}" />
                        <div>
                            <apex:outputPanel styleClass="fiberCodelabelsTextClass fiberCodeSpanCls" rendered="{!IF(fiberCode= 'E' ,true,false)}">{!$Label.FIBER_LIT_EMUX}
                            </apex:outputPanel>
                            <apex:outputPanel styleClass="fiberCodelabelsTextClass fiberCodeSpanCls" rendered="{!IF(fiberCode='F',true,false)}">{!$Label.FIBER_LIT_TEXT}
                            </apex:outputPanel>
                            <apex:outputPanel rendered="{!IF(fiberCode= 'F' ,true,false )}" styleClass="tooltipSpace">
                                <span class="tooltipTrigger glyphicon glyphicon-info-sign" data-toggle="tooltip" rel="tooltip" data-placement="fiberCodeToolTipWithoutEMUX" title="{!$Label.fiberCodeWithoutEMUX}"></span>
                            </apex:outputPanel>
                            <apex:outputPanel rendered="{!IF(fiberCode= 'E' ,true,false )}" styleClass="tooltipSpace">
                                <span class="tooltipTrigger glyphicon glyphicon-info-sign" data-toggle="tooltip" rel="tooltip" data-placement="fiberCodeToolTipWithEMUX" title="{!$Label.fiberCodeWithEMUX}"></span>
                            </apex:outputPanel>
                        </div>
                        <div class="pull-right text-right">
                            <h5 style="margin-bottom: 18px;">
                                <a href="javascript:void(0);" onclick="handleClearUI()"
                                    class="{!IF(configureSitesFlag,'disableLink','')} clearForm"
                                    style="color: #4A6496; font-weight: bold;">Clear Form</a>
                            </h5>
                            <h5>
                                <strong>Price</strong>
                            </h5>
                        </div>
                        <div style="margin-bottom: 20px;">
                            <h3
                                style="margin-top: 11px; margin-bottom: 40px; white-space: nowrap;">{!proposalData.Product_New_Name__c}</h3>
                        </div>

                        <div class="modal fade" id="basicModal" tabindex="-1"
                            role="dialog" aria-labelledby="basicModal" aria-hidden="true"
                            data-backdrop="static" data-keyboard="false">
                            <div class="modal-dialog CNUM-modal-lg">
                                <div class="modal-content">
                                    <div class="CNUM-modal-body">
                                        <center
                                            style="font-size: 28px; margin-bottom: 25px; font-family: omnesatt_iiregular;">
                                            Selected Contract Number (CNUM) is not eligible <br />for
                                            this site. Click okay to select a different <br />CNUM or
                                            remove this site.
                                        </center>
                                        <div align="right">
                                            <button type="button" class="btn btn-default"
                                                style="width: 175px;"
                                                onclick="softDeleteCurrentSite();handleClearUI();">Remove Site</button>
                                            <button type="button" class="btn btn-primary"
                                                style="width: 175px;" data-dismiss="modal"
                                                onclick="handleClearUI();">Okay</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <apex:outputPanel id="ASEContentID">
                            <input type="hidden" id="hdnshowase" value="{!showASEOverlay}" />
                            <div class="ASEContent section">
                                <!-- <table> -->
                                    <apex:variable var="cntr" value="{!0}" />
                                    <apex:repeat value="{!dataWrap}" var="itemAttr">
                                        <div class="col-xs-12 p0">
                                            <div class="col-xs-8 p0">
                                                <div class="section col-md-12 p0" id="contractNum">
                                                    <div class="section-header">
                                                        <b class="labelsTextClass ">{!$ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label}</b>
                                                        <apex:outputPanel rendered="{!IF(contains($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label, 'CNUM')
                                                        || contains($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label, 'Service Type') 
                                                        || contains($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label, 'Class of Service (CoS) Type')                                                  
                                                        , true, false)}"
                                                            styleClass="tooltipSpace">
                                                            <span
                                                                class="tooltipTrigger glyphicon glyphicon-info-sign"
                                                                data-toggle="tooltip" rel="tooltip"
                                                                data-placement="right"
                                                                title="{!IF(contains($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label, 'CNUM'),$Label.ASE_CNUM_TT,'')} 
                                                                    {!IF(contains($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label, 'Service Type'),$Label.ASE_SERVICE_TT,'')} 
                                                                    {!IF(contains($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label, 'Class of Service (CoS) Type'),$Label.ASE_COSTYPE_TT,'')}"></span>
                                                        </apex:outputPanel>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-xs-12 p0">
                                            <div class="col-xs-8 p0">
                                                <apex:outputPanel rendered="{!IF(contains($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label, 'Port Speed')
                                                        , true, false)}">
                                                    <div class="styled-select-small form-control p0 adjust-select-large requiredDropdownField portSpeedCls">
                                                        <apex:inputfield rendered="true" id="dropdownBlocksPort"
                                                            styleClass="dropDownValue"
                                                            value="{!listAttrVal[itemAttr.attr]}"
                                                            onchange="filterDropdownValues('Port Speed',this);disableAllPrecedingField(this);validateASEFormAndEnableApply();" />
                                                    </div>
                                                    <script>
                                                        onloadVal = true;
                                                        filterDropdownValues('Port Speed','portSpeedCls');
                                                    </script>
                                                </apex:outputPanel> <!--  --> 
                                                
                                                <apex:outputPanel rendered="{!IF(contains($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label, 'Interface Type')
                                                        , true, false)}">
                                                    <div
                                                        class="styled-select-small form-control p0 adjust-select-large requiredDropdownField interfaceTypeCls">
                                                        <apex:inputfield rendered="true" id="dropdownBlocksInt"
                                                            styleClass="dropDownValue interfaceTypeCls1"
                                                            value="{!listAttrVal[itemAttr.attr]}"
                                                            onchange="disableAllPrecedingOnInterfaceChange(this);"  />
                                                    </div>
                                                </apex:outputPanel>
                                                 <!-- Class of Service dropdown --> <apex:outputPanel rendered="{!IF(($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label == 'Class of Service (CoS)')
                                                        , true, false)}">
                                                    <div
                                                        class="styled-select-small form-control p0 adjust-select-large requiredDropdownField classOfServiceDropDownCls">
                                                        <apex:inputfield rendered="true" id="dropdownBlocksCoS"
                                                            styleClass="dropDownValue"
                                                            value="{!listAttrVal[itemAttr.attr]}"
                                                            onchange="filterDropdownValues('{!$ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label}','classOfServiceDropDownCls');enableAllPrecedingField(this);validateASEFormAndEnableApply();" />
                                                    </div>
                                                    <script>
                                                        setTimeout(function(){updateClassOfService()},200);
                                                    </script>
                                                    <apex:outputPanel id="additionalConfigDetails"
                                                        styleClass="additionalConfigDetails col-md-12 p0">
                                                        <div class="section col-md-12 p0">
                                                            <b class="labelsTextClass ">Additional Configuration
                                                                Details</b>
                                                        </div>
                                                    </apex:outputPanel>
                                                </apex:outputPanel> <!-- CIR  --> <apex:outputPanel rendered="{!IF(contains($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label, 'Committed Information Rate (CIR)')
                                                        , true, false)}">
                                                    <div
                                                        class="styled-select-small form-control p0 adjust-select-large requiredDropdownField CIRCls">
                                                        <apex:inputfield rendered="true" id="dropdownBlocksCIR"
                                                            styleClass="dropDownValue"
                                                            value="{!listAttrVal[itemAttr.attr]}"
                                                            onchange="disableAllPrecedingField(this);filterDropdownValues('Committed Information Rate (CIR)',this);validateASEFormAndEnableApply();" />
                                                    </div>

                                                </apex:outputPanel> <apex:outputPanel rendered="{!IF($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label == 'Contract Number (CNUM)'                                                    
                                                        , true,false)}">
                                                    <div class="requiredDropdownField CNUMClass styled-select-small form-control p0 adjust-select-large">
                                                        <apex:selectList value="{!CNUMDropdownValue}"
                                                            id="CNUMFields"
                                                            styleClass="CNUMCls"
                                                            multiselect="false" size="1"
                                                            onchange="disableAllPrecedingField(this);validateASEFormAndEnableApply();showCNUMOverlay_ASEJS();">
                                                            <apex:selectOptions value="{!dropDownList}" />
                                                        </apex:selectList>
                                                        <apex:inputHidden id="CNUMFieldsHidden"
                                                            value="{!listAttrVal[itemAttr.attr]}" />
                                                    </div>
                                                    <apex:inputHidden id="promotionFlag" value="{!isPromotion}" />
                                                    <apex:inputHidden id="isEnableASEBasic"
                                                        value="{!enableASEBasic}" />
                                                    <apex:inputHidden id="isEnableASEBroadband"
                                                        value="{!enableASEBroadband}" />
                                                </apex:outputPanel> <apex:outputPanel id="serviceTypeRadioFields"
                                                    rendered="{!IF(contains($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label, 'Service Type')                                                    
                                                        , true,false)}">
                                                    <div class="section-content col-md-12 p0">
                                                        <apex:selectRadio value="{!serviceTypeRadioValue}"
                                                            styleClass="col-md-8 p0 requiredRadioButtonField alignServiceRadio"
                                                            onchange="disableAllPrecedingField(this);updateHiddenData(this,'serviceTypeRadioFields','serviceTypeRadioFieldsHidden');
                                                                filterDropdownValues('Service Type','portSpeedCls');validateASEFormAndEnableApply();">
                                                            <apex:selectOption itemLabel="ASE Basic"
                                                                itemValue="ASE Basic"
                                                                itemDisabled="{!IF(CNUMDropdownValue != '' && enableASEBasic == true,false,true)}" />
                                                            <apex:selectOption itemLabel="ASE Broadband"
                                                                itemValue="ASE Broadband"
                                                                itemDisabled="{!IF(CNUMDropdownValue != '' && enableASEBroadband == true,false,true)}" />
                                                        </apex:selectRadio>
                                                        <apex:inputField id="serviceTypeRadioFieldsHidden"
                                                            value="{!listAttrVal[itemAttr.attr]}"
                                                            style="display:none;" />
                                                        <span class="labelsTextClass tierSpanCls" style="{!IF(serviceTypeRadioValue == 'ASE Basic' ,'','display:none;')}">Tier
                                                            {!aseTierValue}</span>
                                                            <script>
                                                                setTimeout(function(){filterDropdownValues('Service Type','portSpeedCls')},200);
                                                            </script>
                                                    </div>
                                                </apex:outputPanel> <apex:outputPanel id="classOfServiceType"
                                                    rendered="{!IF(contains($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label, 'Class of Service (CoS) Type')                                                    
                                                        , true,false)}">
                                                    <div class="section-content col-md-12 p0">
                                                        <apex:selectRadio styleClass="col-md-7 p0 requiredRadioButtonField alignCosRadio" disabled="{!IF(CNUMDropdownValue == '',true,false)}"
                                                            value="{!CoSRadioValue}"
                                                            onchange="disableAllPrecedingField(this);updateHiddenData(this,'classOfServiceType','classOfServiceTypeHidden');validateASEFormAndEnableApply();">
                                                            <apex:selectOption itemLabel="Basic" itemValue="Basic" />
                                                            <apex:selectOption itemLabel="PPCoS" itemValue="PPCoS" itemDisabled="{!IF(isPPCoS == true && serviceTypeRadioValue != '' && serviceTypeRadioValue == 'ASE Basic',false,true)}"/>
                                                        </apex:selectRadio>
                                                        <apex:inputField id="classOfServiceTypeHidden"
                                                            value="{!listAttrVal[itemAttr.attr]}"
                                                            style="display:none;" />
                                                    </div>
                                                </apex:outputPanel> <apex:outputPanel id="networkType"
                                                    rendered="{!IF(contains($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label, 'Network Type'), true,false)}">
                                                    <div class="section-content col-md-12 p0">
                                                        <apex:selectRadio styleClass="p0 requiredRadioButtonField additionalBlock" disabled="{!IF(CNUMDropdownValue == '',true,false)}"
                                                            value="{!networkTypeRadioValue}"
                                                            onchange="updateHiddenData(this,'networkType','networkTypeHidden');validateASEFormAndEnableApply();">
                                                            <apex:selectOption itemLabel="Single End Customer"
                                                                itemValue="Single End Customer" />
                                                            <apex:selectOption itemLabel="Multi End Customer"
                                                                itemValue="Multi End Customer" />
                                                        </apex:selectRadio>
                                                        <apex:inputField id="networkTypeHidden"
                                                            value="{!listAttrVal[itemAttr.attr]}"
                                                            style="display:none;" />
                                                    </div>
                                                </apex:outputPanel> <apex:outputPanel id="lata"
                                                    rendered="{!IF(contains($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label, 'LATA'), true,false)}">
                                                    <div class="section-content col-md-12 p0">
                                                        <apex:selectRadio styleClass="p0 requiredRadioButtonField additionalBlock" disabled="{!IF(CNUMDropdownValue == '',true,false)}"
                                                            value="{!LATARadioValue}"
                                                            onchange="updateHiddenData(this,'lata','lataHidden');validateASEFormAndEnableApply();">
                                                            <apex:selectOption itemLabel="Inter LATA"
                                                                itemValue="Inter LATA" />
                                                            <apex:selectOption itemLabel="Intra LATA"
                                                                itemValue="Intra LATA" />
                                                        </apex:selectRadio>
                                                        <apex:inputField id="lataHidden"
                                                            value="{!listAttrVal[itemAttr.attr]}"
                                                            style="display:none;" />
                                                    </div>
                                                </apex:outputPanel> <apex:outputPanel id="configType"
                                                    rendered="{!IF(contains($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label, 'Config Type'), true,false)}" >
                                                    <div class="section-content col-md-12 p0">
                                                        <apex:selectRadio value="{!configTypeRadioValue}" disabled="{!IF(CNUMDropdownValue == '',true,false)}"
                                                            onchange="updateHiddenData(this,'configType','configTypeHidden');validateASEFormAndEnableApply();"
                                                            styleClass="p0 requiredRadioButtonField additionalBlock">
                                                            <apex:selectOption itemLabel="
                                                                Point To Point"
                                                                itemValue="Point To Point" />
                                                            <apex:selectOption itemLabel="Multi Point"
                                                                itemValue="Multi Point" />
                                                            <apex:selectOption itemLabel="Hub & Spoke"
                                                                itemValue="Hub & Spoke" />
                                                        </apex:selectRadio>
                                                        <apex:inputField id="configTypeHidden"
                                                            value="{!listAttrVal[itemAttr.attr]}"
                                                            style="display:none;" />
                                                    </div>
                                                </apex:outputPanel> <apex:outputPanel id="siteDesignation"
                                                    rendered="{!IF(contains($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label, 'Site Designation'), true,false)}">
                                                    <div class="section-content col-md-12 p0 siteDetailsBlk">
                                                        <apex:selectRadio styleClass="p0 additionalBlock {!IF(configTypeRadioValue != '' && configTypeRadioValue == 'Hub & Spoke','requiredRadioButtonField additionalBlock','')}"
                                                            value="{!siteDesignationRadioValue}" disabled="{!IF(CNUMDropdownValue == '',true,false)}"
                                                            onchange="updateHiddenData(this,'siteDesignation','siteDesignationHidden');validateASEFormAndEnableApply();">
                                                            <apex:selectOption itemLabel="Hub" itemValue="Hub"
                                                                itemDisabled="{!IF(configTypeRadioValue != '' && configTypeRadioValue != 'Hub & Spoke',false,true)}" />
                                                            <apex:selectOption itemLabel="Spoke" itemValue="Spoke"
                                                                itemDisabled="{!IF(configTypeRadioValue != '' && configTypeRadioValue != 'Hub & Spoke',false,true)}" />

                                                        </apex:selectRadio>
                                                        <apex:inputField id="siteDesignationHidden"
                                                            value="{!listAttrVal[itemAttr.attr]}"
                                                            style="display:none;" />
                                                    </div>
                                                </apex:outputPanel> 
                                                <apex:outputPanel id="portVLANBased">
                                                    <apex:outputPanel rendered="{!IF(contains($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label, 'Port/VLAN Based'), true,false)}">
                                                    <div class="section-content col-md-12 p0">
                                                        <apex:selectRadio styleClass="p0 requiredRadioButtonField portVLAN additionalBlock"
                                                            value="{!portVLANBasedRadioValue}" disabled="{!IF(CNUMDropdownValue == '',true,false)}"
                                                            onchange="updateHiddenData(this,'portVLANBased','portVLANBasedHidden');validateASEFormAndEnableApply();">
                                                                <apex:selectOption itemLabel="Port Based" itemValue="Port Based"
                                                                                   itemDisabled="{!IF(siteDesignationRadioValue == 'Hub',true,false)}"/>
                                                                <apex:selectOption itemLabel="VLAN Based" itemValue="VLAN Based"
                                                                                   itemDisabled="{!IF(siteDesignationRadioValue == 'Hub',true,false)}"/>
                                                        </apex:selectRadio>
                                                        <apex:inputField id="portVLANBasedHidden"
                                                            value="{!listAttrVal[itemAttr.attr]}"
                                                            style="display:none;" />
                                                    </div>
                                                    </apex:outputPanel>
                                                </apex:outputPanel> 
                                                <apex:outputPanel id="macAddresses"
                                                    rendered="{!IF(contains($ObjectType.Apttus_Config2__ProductAttributeValue__c.Fields[itemAttr.attr].label, 'MAC Addresses'), true,false)}">
                                                    <div class="section-content col-md-12 p0">
                                                        <apex:selectRadio value="{!macAddressesRadioValue}" disabled="{!IF(CNUMDropdownValue == '',true,false)}"
                                                            onchange="updateHiddenData(this,'macAddresses','macAddressesHidden');validateASEFormAndEnableApply();"
                                                            styleClass="p0 requiredRadioButtonField MACAddressesCls additionalBlock">
                                                            <apex:selectOption itemLabel="64" itemValue="64" />
                                                            <apex:selectOption itemLabel="250" itemValue="250" />
                                                            <apex:selectOption itemLabel="251 - 500"
                                                                itemValue="251 - 500" />
                                                        </apex:selectRadio>
                                                        <apex:inputField id="macAddressesHidden"
                                                            value="{!listAttrVal[itemAttr.attr]}"
                                                            style="display:none;" />
                                                    </div>
                                                    <apex:outputPanel >
                                                        <p class="onetime">One-Time Charges</p>
                                                        <p class="labelsTextClass">Not Applicable</p>
                                                    </apex:outputPanel>
                                                </apex:outputPanel>
                                            </div>
                                            <apex:outputText rendered="{!isPricingDataAvailable && itemAttr.isPricable}">

                                                <div style="" class="col-xs-4 p0 ">
                                                    <div class="pricingStyle">
                                                        <apex:outputText value="${0, number, ###,###,##0.00}">
                                                            <apex:param value="{!itemAttr.lineItemObj.Apttus_Config2__NetPrice__c}" />
                                                        </apex:outputText>
                                                    </div>
                                                </div>
                                            </apex:outputText>
                                        </div>
                                        <apex:variable var="cntr" value="{!cntr+1}" />
                                    </apex:repeat>
                            </div>
                        </apex:outputPanel>
                    </div>
                </div>
            </div>
            <apex:outputPanel id="footerContent">
                <div class="clear m-b-20 ng-scope"></div>
                <div class="row col-xs-12 p0 ng-scope" style="margin-left: 15px;">
                    <div class="col-xs-6 p0" style="float: right;">
                        <div class="col-xs-12" style="padding-left: 0;">
                            <div
                                style="border-top: 1px solid #ddd; margin-top: 30px; margin-bottom: 24px;"></div>
                            <div class="row" style="margin: 15px 0;">
                                <p style="font-family: omnesatt_iiregular; font-size: 18px;">Site
                                    Pricing Summary</p>
                            </div>

                            <div class="row" style="margin: 10px 0;">
                                <div class="col-xs-6 p0 text-left"
                                    style="font-family: omnes_att_iimedium; color: #000000;">
                                    Monthly Total</div>
                                <div class="col-xs-6 text-right p0">
                                    <apex:outputText value="${0, number, ###,###,##0.00}/mo"
                                        id="siteTot">
                                        <apex:param value="{!totalPerSite}" />
                                    </apex:outputText>
                                </div>
                            </div>

                            <div class="col-xs-6 p0 text-left"
                                style="font-family: omnes_att_iimedium; color: #000000;">
                                One-Time Total</div>
                            <div class="col-xs-6 text-right p0">
                                <apex:outputText value="${0, number, ###,###,##0.00}" id="otTot">
                                    <apex:param value="{!oneTimeFee}" />
                                </apex:outputText>
                            </div>
                            <apex:commandButton style="margin: 10px 0;"
                                id="applyPriceBtnASE" value="Apply and Get Price" styleClass="col-md-4 btn-primary pull-right"
                                rerender="configuresiteForm" action="{!initializePricingData}"
                                onclick="disableOnProcess('y');showPricingProcessIcon('{!selectedSiteId}','y');"
                                oncomplete="disableApplyConfigurationLink(false);scrollToWindowPos();showPricingProcessIcon('{!selectedSiteId}','n');disableOnProcess('n');
                                    callFilterMethodOnLoad('on');" />
                            <div class="col-xs-12 m-b-20 m-t-20 p0">
                                <div class="col-xs-11 p0" style="float: right;"> 
                                    <apex:commandLink action="{!eligibleSitesPop}"
                                        value="Apply Configuration To Eligible Sites"
                                        rerender="configuresiteForm"
                                        styleClass="addaddressTrigger pull-right font14 {!IF(configureSitesFlag,'disableLink','enableSiteLink')} p0"
                                        onclick="disableApplyConfigurationLink(true);"
                                        oncomplete="scrollToWindowPos();errorMsgDisplay();prepareAndInitializePortType();getSoftDeletedSites();"
                                        status="loading"></apex:commandLink>
                                </div>
                            </div>
                            <div class="clear"></div>
                            <div class="row"
                                style="margin: 0px 0px 20px; padding-bottom: 22px; border-bottom: 1px solid #ddd;">
                                <div class="pull-right">
                                    <table>
                                        <tbody>
                                            <tr>
                                                <td><apex:commandButton styleClass="btn paginationArrow {!IF(configureSitesFlag,'disableBtn','')}" id="prevSite1" value="<"
                                                        action="{!siteTraverseMethodPrevious}" reRender=""
                                                        oncomplete="" status="loading" /></td>
                                                <td style="vertical-align: middle;"><apex:commandLink id="prevSite" styleClass="enableSiteLink {!IF(configureSitesFlag,'disableLink','')}"
                                                        value=" Previous Site"
                                                        action="{!siteTraverseMethodPrevious}" reRender=""
                                                        oncomplete="" status="loading"
                                                        style="border-right: 1px solid #ddd;" /></td>&nbsp;&nbsp;
                                                <td style="vertical-align: middle;"><apex:commandLink id="nextSite" styleClass="enableSiteLink navLinkConfig {!IF(configureSitesFlag,'disableLink','')}"
                                                        value="Next Site " action="{!siteTraverseMethodNext}"
                                                        rendered="{!NOT(disableNext)}" reRender="" oncomplete=""
                                                        status="loading" /></td>
                                                <td><apex:commandButton styleClass="btn paginationArrow {!IF(configureSitesFlag,'disableBtn','')}" id="nextSite1" value=">"
                                                        action="{!siteTraverseMethodNext}"
                                                        rendered="{!NOT(disableNext)}" reRender="" oncomplete=""
                                                        status="loading" /></td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                        <apex:inputHidden id="ppcosFlag" value="{!isPPCoS}" />
                        <input type="hidden" id="hdnFieldIndices" value="{!fieldIndices}" />
                        <input type="hidden" id="hdnPortTypeIndex"
                            value="{!portTypeIndex}" /> <input type="hidden"
                            id="hdnHiCapIndex" value="{!HicapIndexInt}" /> <input
                            type="hidden" id="hdnHiCapFlexFlag" value="{!isHiCapFlex}" /> <input
                            type="hidden" id="isContinueEnabledHdn"
                            value="{!isContinueEnabled}" />

                        <apex:actionFunction id="af7" name="selectOptGrpAF"
                            action="{!selectedOptGrpQuery}" reRender="configuresiteForm"
                            status="loading" oncomplete="disableFirstOpt();selectCheckbox();">
                            <apex:param name="selectOptGrp" assignTo="{!selectOptGrp}"
                                value="" />
                            <apex:param name="selectOptGrpVal" assignTo="{!selectOptGrpVal}"
                                value="" />
                        </apex:actionFunction>
                        <apex:actionFunction id="af1" name="handleConfigureSitePage"
                            action="{!setupCartWithSelectedSites}"
                            reRender="configuresiteForm" status="loading"
                            oncomplete="activeFirstSite('false');">
                            <apex:param name="quoteId" value="" />
                        </apex:actionFunction>
                        <apex:actionFunction id="reConfigFuncId"
                            name="handleReviewQuoteCallBack"
                            action="{!setupCartWithSelectedSites}"
                            reRender="configuresiteForm" status="loading"
                            oncomplete="activeFirstSite('true');">
                            <apex:param name="quoteId" value="" />
                        </apex:actionFunction>
                        <apex:actionFunction id="applyEligibleConfigUI"
                            name="handleApplyEligibleConfigUI"
                            action="{!handleApplyEligibleConfigUI}"
                            reRender="configuresiteForm" status="loading"
                            oncomplete="activeFirstSite('true');">
                            <apex:param name="quoteId" value="" />
                            <apex:param name="cartId" value="" />
                            <apex:param name="siteId" value="" />
                        </apex:actionFunction>
                        <apex:actionFunction id="clearUI" name="handleClearUI"
                            action="{!clearFormASE}" reRender="PageBlockSelectSite,configuresiteForm"
                            status="loading" oncomplete="window.location.reload();">
                            <apex:param name="quoteId" value="" />
                        </apex:actionFunction>
                        <apex:actionFunction id="pageLoadOnClearForm" name="pageLoadOnClearForm"
                            action="{!pageLoadOnClearForm}" reRender="PageBlockSelectSite,configuresiteForm"
                            status="loading" >
                          </apex:actionFunction>
                        
                        <apex:actionFunction id="showASEOverlayID"
                            name="showCNUMOverlay_ASE" action="{!showCNUMOverlay}"
                            reRender="ASEContentID,promotionFlag,ppcosFlag,isEnableASEBasic,isEnableASEBroadband"
                            status="loading"
                            oncomplete="disableFieldsOnCNUMChange('on');" />
                            
                            <apex:actionFunction id="onCNUMChangeDiable"
                            name="onCNUMChangeDiable" action="{!pollingMethod}"
                            reRender="promotionFlag" oncomplete="DisplayCNUMOverlay();"
                            status="loading"
                             />
                             <apex:actionFunction id="onPageLoadPolling"
                            name="onPageLoadPolling" action="{!longPollingMethod}"
                            reRender="promotionFlag"
                            status="loading"
                             />
                            
                        <apex:actionFunction name="checkBasicBroadbandEnablement"
                            action="{!checkBasicBroadbandEnablement}" status="loading"
                            rerender="CNUMFields" oncomplete="">
                            <apex:param name="CNUMDropdownValue"
                                assignTo="{!CNUMDropdownValue}" value="" />
                        </apex:actionFunction>

                        <apex:actionFunction id="fetchUpdatedPrice"
                            name="doFetchUpdatedPrice" action="{!fetchUpdatedPriceOnLoad}"
                            rerender="configuresiteForm"
                            oncomplete="managedRouterFunctionality(false);scrollToWindowPos();makeTableActive();validateASEFormAndEnableApply();disableApplyConfigurationLink(false);" />
                        <apex:actionFunction name="checkForEligibleSitesCount"
                            action="{!checkForEligibleSitesCount}" status="loading"
                            reRender="reviewQuoteBtnSection" oncomplete=""/>

                        <apex:actionFunction name="selectVLANBasedOption" action="{!selectingVLANBasedOption}"
                                             status="loading" rerender="portVLANBased" oncomplete="validateASEFormAndEnableApply();">
                        </apex:actionFunction>
                        <apex:actionFunction name="clearPortVLANOption" action="{!clearPortVLANOption}"
                                             status="loading" rerender="portVLANBased" oncomplete="validateASEFormAndEnableApply();">
                        </apex:actionFunction>
                        
                        <p style="margin-bottom: 20px; font-family: omnesatt_iiregular; font-size: 18px;">Quote Pricing Summary 
                            <span
                                class="tooltipTrigger glyphicon glyphicon-info-sign"
                                data-toggle="tooltip" rel="tooltip" data-placement="right"
                                title="{!$Label.Quote_Pricing_Summary}"></span>
                        </p>
                        <div class="row" style="margin: 10px 0;">
                            <div class="col-xs-6 p0 text-left">
                                <div
                                    style="font-family: omnes_att_iimedium; font-size: 19px; color: #000000;">Monthly
                                    Total</div>
                            </div>
                            <div class="col-xs-6 text-right">
                                <apex:outputText value="${0, number, ###,###,##0.00}/mo"
                                    id="grandTot2" styleClass="font21"
                                    style="text-align: right; font-size: 19px; font-weight: bold;">
                                    <div style="display: block; text-align: right;">
                                        <apex:param value="{!totalPerCart}" />
                                    </div>
                                </apex:outputText>
                            </div>

                            <div class="col-xs-6 p0 text-left">
                                <h3
                                    style="font-family: omnes_att_iimedium; margin-top: 10px; font-size: 19px; color: #000000;">One-Time
                                    Total</h3>
                            </div>
                            <div class="col-xs-6 text-right">
                                <apex:outputText value="${0, number, ###,###,##0.00}"
                                    id="sumOneTime" styleClass="font21"
                                    style="text-align: right; font-size: 19px; font-weight: bold;">
                                    <h3
                                        style="display: block; text-align: right; margin-top: 10px;">
                                        <apex:param value="{!sumOneTimeFee}" />
                                    </h3>
                                </apex:outputText>
                            </div>
                            <div class="col-xs-12 p0" id="submitDiv">
                                <p
                                    style="font-family: omnes_light !important; font-size: 0.8em; margin-top: 2%;">All
                                    prices shown are pre-tax.</p>
                            </div>
                            <div class='col-xs-12' style="margin-top: 2%;">
                                <apex:outputPanel styleClass="OverageDiv"
                                    rendered="{!IF(isUBBinCart == true &&isPricingDataAvailable == true,true,false)}">
                                    <apex:outputText >* Overage billing may apply.</apex:outputText>
                                </apex:outputPanel>
                            </div>
                        </div>
                    </div>
                    <div class="row m0">
                        <div id="panelFooter" class="col-xs-12"></div>
                    </div>
                    <div style="margin-left: 115%; margin-left; margin-top: -82%;">
                        <a href="#" class="scrollToTop arrowImageDim"> <apex:image value="{!($Resource.TopArrow)}" styleClass="arrowImageDim" /></a>
                    </div>
                </div>
                <div id="footerHRDiv" class="col-xs-12 m-t-20 m-b-20 p0">
                    <hr class="blue_hr" />
                </div>
                <apex:outputPanel id="reviewQuoteBtnSection">
                    <div class="col-xs-12 p0" id='submitDiv1'>
                        <apex:commandButton styleClass="col-md-2 btn-primary pull-right nextToReview {!IF(isContinueEnabled,'','createUserButtonDisable')} {!IF(configureSitesFlag,'disableBtn','')}"
                            id="btnId" status="loading" action="{!finalizeCart}"
                            value="Next: Review Quote" style=""
                            disabled="{!!isContinueEnabled}"></apex:commandButton>
                        <apex:commandButton styleClass="col-md-2 pull-right btn-primary {!IF(configureSitesFlag,'disableBtn','')}"
                            id="btnId2" action="{!SaveandExit}" status="loading"
                            value="Save and Exit" style="margin-right:10px;"></apex:commandButton>
                    </div>
                </apex:outputPanel>
            </apex:outputPanel>
        </div>       
    </apex:form>

    <!-- Modal for CAN'T REMOVE ALL SITES starts -->

    <div class="modal fade" id="requireOneSite" tabindex="-1" role="dialog"
        aria-hidden="true" data-keyboard="false" data-backdrop="static">
        <div class="modal-dialog requireOneSite">
            <div class="modal-content requireOneSite">
                <div class="modal-body requireOneSite">
                    <div id="closeBtn">
                        <button type="button" class="close" data-dismiss="modal"
                            aria-hidden="true">
                            <span aria-hidden="true">&times;</span><span class="sr-only">Close</span>
                        </button>
                    </div>
                    <p class="removeSelectedModal">The quote must have at least one
                        site to proceed.</p>

                    <div id="okayBtn">
                        <button type="button" class="btn btn-primary okay"
                            data-dismiss="modal" onclick="unselectSitesOnOkay();"
                            styleClass="selectAllClass">Okay</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        function undoRemove(id) {
            var quoteId = "{!quoteId}";
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.SiteConfigureController.undoSoftDelete}',
                id,quoteId,
                function(){
                    totalNumberOfSitesSoftDeleted = totalNumberOfSitesSoftDeleted - 1;
                    var undoRow = $('tbody').find("#undo_"+id).closest('tr');
                    undoRow.find(".checkedSite").removeAttr("disabled"); 
                    undoRow.children().removeClass('deletedRow').addClass('active');
                    undoRow.find(".undoRemoveLnk").css("display", "none");
                    undoRow.find(".siteAddressInLeftPanel").css("width", "100%");
                    checkForEligibleSitesCount();
                }
            );
        }
        function unselectSitesOnOkay() {
            $('.selectAllClass').prop('checked', false);
            $('.checkedSite:checked').prop('checked', false);
            $(".RmvLink").removeClass("enableLink");
        } 
    </script>

    <script>
        
        function softDeleteSelectedSites() {
            var selectedSiteIDArray = [];
            var totalSites = 0;
            if(typeof {!TotalSitesCount} != 'undefined' && {!TotalSitesCount} != null){
                totalSites = {!TotalSitesCount};
            }
            if ($(".checkedSite:checked").length + totalNumberOfSitesSoftDeleted < totalSites) {               
                $(".checkedSite").each(function () {
                    var selectedID;
                    if ($(this).is(":checked")) {
                        selectedID = $(this).parent().attr('id');
                        totalNumberOfSitesSoftDeleted = totalNumberOfSitesSoftDeleted + 1;
                        selectedSiteIDArray.push(selectedID);
                        selectedSiteIDString = selectedSiteIDArray.join(',');
                    }
                });
                $(".checkedSite:checked").attr("disabled", "true");
                $(".checkedSite:checked").closest('tr').children().removeClass('active').addClass('deletedRow');
                $(".checkedSite:checked").closest('tr').find(".siteAddressInLeftPanel").css("width", "190px");
                $(".checkedSite:checked").closest('tr').find(".undoRemoveLnk").css("display", "block").css("pointer-events", "all");
                $(".checkedSite").prop("checked", false);
                $(".RmvLink").removeClass("enableLink");
                softDeletedSiteIDS(selectedSiteIDString);
            }else{
                $('#requireOneSite').modal('show');
            }
        }
        
        function showCNUMOverlay_ASEJS() {
            showCNUMOverlay_ASE();
        }
        
        function DisplayCNUMOverlay() {
            var showASEOverlayJS = document.getElementById("hdnshowase").value;
            if (showASEOverlayJS != 'undefined' && showASEOverlayJS == 'true') {
                $('#basicModal').modal('show');
            }else{                            
                updateHiddenData($('.CNUMClass select'),'CNUMFields','CNUMFieldsHidden');
            }
        }
        
        function softDeleteCurrentSite() {
            var removeSiteId = $('.selectedSiteHighlighted div:first').attr('id');
            $('#basicModal').modal('hide');
            $(".selectedSiteHighlighted").attr("disabled", "true");
            $(".selectedSiteHighlighted").closest('tr').children().removeClass('active').addClass('deletedRow');;
            $(".selectedSiteHighlighted").closest('tr').find(".siteAddressInLeftPanel").css("width", "190px");
            $(".selectedSiteHighlighted").closest('tr').find(".undoRemoveLnk").css("display", "block").css("pointer-events", "all");
            softDeletedSiteIDS(removeSiteId);
        }
    </script>

    <div class="waitingSearchDiv"
        style="background-color: #fbfbfb; height: 100%; opacity: 0.65; width: 100%; position: fixed; z-index: 999999; display: none; top: 0; left: 0;"
        id="loadingImg">
        <div class="waitingHolder"
            style="top: 400px; left: 600px; width: 91px; position: fixed;">
            <img class="waitingImage" src="{!$Resource.LoadingImage}"
                title="Please Wait" />
        </div>
    </div>

    <div class="modal-dialog" id="apltConfElisiteID"
        style="display: none; margin: 17%; position: absolute; top: 0;">
        <div class="modal-content">
            <div class="modal-header">
                <button class="close" data-dismiss="modal" type="button"
                    onclick="closeFun();">
                    <span aria-hidden="true">x</span><span class="sr-only">Close</span>
                </button>
                <h4 class="m-t-0">Apply Configuration to Eligible Sites</h4>
            </div>
            <apex:form styleClass="form-horizontal" id="form1">
                <div class="modal-body">
                    <div class="row">
                        <div class="col-xs-12">
                            
                        </div>
                    </div>
                </div>
            </apex:form>
        </div>
    </div>

    <!-- table ends -->
    <div class="modal waitingSearchDiv" id="remotingScroll"
        style="display: none; background-color: #fbfbfb; height: 40%; opacity: 0.65; width: 40%; position: absolute; z-index: 1">
        <div class="waitingHolder"
            style="top: 200px; left: 700px; width: 91px; position: fixed;">
            <img class="waitingImage" src="{!$Resource.LoadingImage}"
                title="Please Wait" />
        </div>
    </div>

    <script>
        var productName = '{!proposalData.product_name__c}';
        
        function enableShowHideUBBDDL(inputObj){
            sitePanelInsideScroll = $("#configaddedsitesNew").scrollTop();
            enableShowHideUBBDDLAjax(inputObj.checked);
        }
        
        function scrollSitesTableInsideListToPreviousView(){        
            $("#configaddedsitesNew").scrollTop(sitePanelInsideScroll);     
        } 
        
        function checkUnCkeckHiCapFlex(){
            var hiCap = document.getElementById("hdnHiCapFlexFlag").value;
            if( productName == 'AT&T Managed Internet Service' ||  productName == 'AT&T Virtual Private Network' ){
                var trElemId = 'container'+parseInt(hiCapFlexIndex);
                
                var currElementTr = document.getElementById(trElemId);
                if( typeof currElementTr != 'undefined' ){
                    
                    var innerTds = currElementTr.getElementsByTagName("td");
                    var selectElem = innerTds[1].getElementsByTagName("input");
                    if( typeof selectElem[0] != 'undefined' ){
                        if( hiCap == 'true' ){
                            selectElem[0].checked = true;
                        }else{
                            selectElem[0].checked = false;;
                        }
                    }
                }
            }
        }

        function disableOnProcess(cmd){
        
            var prevElem = document.getElementById("{!$Component.configuresiteForm.prevSite}");
            var nextElem = document.getElementById("{!$Component.configuresiteForm.nextSite}");
            var saveExit = document.getElementById('{!$Component.configuresiteForm.btnId2}');
            var applyBtn = document.getElementById('{!$Component.configuresiteForm.applyPriceBtnASE}');
            var prevSite1 = document.getElementById("{!$Component.configuresiteForm.prevSite1}");
            var nextSite1 = document.getElementById("{!$Component.configuresiteForm.nextSite1}");            
            var reviewQuoteBtn = document.getElementById('{!$Component.configuresiteForm.btnId}');
            var addnewAddressBtn = document.getElementById('{!$Component.configuresiteForm.addnewAddressBtn}');
            
            if( cmd == 'y' ){
                prevElem.className+=' disableLink';
                nextElem.className+=' disableLink';     
                saveExit.disabled=true;
                applyBtn.disabled=true;
                prevSite1.disabled = true;
                nextSite1.disabled = true;                
                reviewQuoteBtn.disabled=true;
                addnewAddressBtn.disabled=true;
                applyBtn.value='Processing...';
                $('.clearForm, .addaddressTrigger').addClass('disableClearForm');
                $('.dropDownValue').attr('disabled','disabled');            
                $.each("{!selectDropdown}".split(","),function(i,v){
                    $('#container'+v+' select').attr('disabled','disabled');
                });
            }else{
                applyBtn.disabled=true;
                applyBtn.className+=' createUserButtonDisable';
            }
        }
        
        function disableCmdBtn(cmd){
            var arItemsToDisable = [];
            var pbTableElem = document.getElementById("{!$Component.configuresiteForm.PageBlockSelectSite.pbtable}");
            var prevElem = document.getElementById("{!$Component.configuresiteForm.prevSite}");
            var nextElem = document.getElementById("{!$Component.configuresiteForm.nextSite}");
            var arCmdBtn = pbTableElem.getElementsByTagName("input");
            for( var i = 0; i < arCmdBtn.length; i++ ){
                if( arCmdBtn[i].id.indexOf( "cmdBtn" ) != -1 ){
                    arItemsToDisable.push( arCmdBtn[i] );
                }
            }
            for( var i = 0; i < arItemsToDisable.length; i++ ){
                if( cmd == 'y' ){
                    arItemsToDisable[i].disabled = true;
                    $('.navLinkConfig').addClass('disableClearForm');
                    $('.btn').addClass('disableClearForm');
                }else{
                    arItemsToDisable[i].disabled = false;
                    $('.navLinkConfig').removeClass('disableClearForm');
                    $('.btn').removeClass('disableClearForm');
                }
            } 
        }

        function disableThisApplyBtn(inpObj){
          
            inpObj.disabled = true;
            inpObj.value = 'Processing...';
            document.getElementById('{!$Component.configuresiteForm.btnId2}').disabled = true;
            $('.clearForm').addClass('disableClearForm');
            $('.addaddressTrigger').addClass('disableClearForm');
           
            changeinterfaceonapplyandget();
            if(inpObj != null){$(inpObj).attr('disabled',true)};
        }
        
        function enableSaveAndExit(){
            document.getElementById('{!$Component.configuresiteForm.btnId2}').disabled = false;
            $('.clearForm').removeClass('disableClearForm'); 
            $('.addaddressTrigger').removeClass('disableClearForm');
        }
        
        function selectAll(obj){
        
            if($(obj).is(":checked")){
                $('.checkedSite').prop('checked', true);
                $(".RmvLink").addClass("enableLink");
                $(".selectedEligibleSites").removeClass('disableBtn'); 
            }
            else{
                $('.checkedSite').prop('checked', false);
                $(".RmvLink").removeClass("enableLink");
                $(".selectedEligibleSites").addClass('disableBtn');      
            }
        }
        
        var checkboxFlag = false;
        function uncheckSite(obj){
            checkboxFlag=true;
            if ($(".checkedSite").length == $(".checkedSite:checked").length) {
                $('.selectAllClass').prop('checked', true);
                $(".RmvLink").addClass("enableLink");            
             }
            else {
                $('.selectAllClass').prop('checked', false);
                if ($(".checkedSite:checked").length>0) {
                    $(".RmvLink").addClass("enableLink");                 
                }
                else{
                    $(".RmvLink").removeClass("enableLink");                 
                }
             } 
        }
        
        function uncheckSiteOnEligibleFlag(){
            checkboxFlag=true;
            if ($(".checkedSite").length == $(".checkedSite:checked").length) {
                $('.selectAllClass').prop('checked', true);
                $(".selectedEligibleSites").removeClass('disableBtn');            
             }
            else {
                $('.selectAllClass').prop('checked', false);
                if ($(".checkedSite:checked").length>0) {
                    $(".selectedEligibleSites").removeClass('disableBtn');                  
                }
                else{
                    $(".selectedEligibleSites").addClass('disableBtn');                  
                }
             }     
        }
        
        function configureSite(siteId){
            if (!checkboxFlag) {
                toggleConfigureSite(siteId);
            }
            else{
                checkboxFlag = false;
            }
        }
        function scrollToWindowPos(){
        
            $(window).scrollTop(scrollPos);
            var leftPanelWidth=$("#leftPanelContainer").outerWidth();
            var headerHeight=$('#top_nav_bar').height();
            footerOffSet=$('#panelFooter').offset().top;
            leftPanelHeight=$("#leftPanelContainer").height();
            scrollPos=$(window).scrollTop()+headerHeight; 
            leftPanelBottomOffset= scrollPos + leftPanelHeight;
            panelPosition=footerOffSet-leftPanelHeight-leftPanelOffSet; 
            
            if(leftPanelBottomOffset >= footerOffSet)
                $("#leftPanelContainer").css({"position":"absolute","top":panelPosition+'px'});
            else
                $("#leftPanelContainer").css({'position':'fixed','top':headerHeight+'px','width':leftPanelWidth}); 
        }
        function fixedSiteTablePanel(){
            
            var leftPanelWidth=$("#leftPanelContainer").outerWidth();
            var headerHeight=$('#top_nav_bar').height();
            footerOffSet=$('#panelFooter').offset().top;
            leftPanelHeight=$("#leftPanelContainer").height();
            scrollPos=$(window).scrollTop()+headerHeight; 
            leftPanelBottomOffset= scrollPos + leftPanelHeight;
            panelPosition=footerOffSet-leftPanelHeight-leftPanelOffSet; 
            
            $(window).scroll(function(){            
                scrollPos=$(window).scrollTop()+headerHeight; 
                leftPanelBottomOffset= scrollPos + leftPanelHeight; 
                panelPosition=footerOffSet-leftPanelHeight-leftPanelOffSet;                                               
                if(scrollPos >= leftPanelOffSet){
                    $("#leftPanelContainer").css({'position':'fixed','top':headerHeight+'px','width':leftPanelWidth});                    
                }else
                    $("#leftPanelContainer").css({"position":"relative","top":"0px"});
                
                if(leftPanelBottomOffset >= footerOffSet){
                       $("#leftPanelContainer").css({"position":"absolute","top":panelPosition+'px'});
                }
                if ($(this).scrollTop() > 100) {
                    $('.scrollToTop').fadeIn();
                }else {
                    $('.scrollToTop').fadeOut();
                }   
            });        
        }
        
        function validateASEFormAndEnableApply(){
            
            var applyBtn = $('[id$=applyPriceBtnASE]');
            var enableApply = true;
            var configTypeVal = $('[id$=configType] input:checked').val();
            if(configTypeVal == 'Hub & Spoke' && configTypeVal !='undefined'){
                $('[id$=siteDesignation] table').addClass('requiredRadioButtonField');
                $('[id$=siteDesignation] input').removeAttr('disabled');
            }else{
                $('[id$=siteDesignation] table').removeClass('requiredRadioButtonField');
                $('[id$=siteDesignation] input').attr('disabled','true');
            }
            var requiredFileds = $('.requiredDropdownField select');
            requiredFileds.each(function () {
                if($(this).val() != null && ($(this).val().length ==0 || ($(this).val()).startsWith('_')) && enableApply){
                    enableApply = false;
                }
            });
            
            if(enableApply){
                var requiredFiledsRadio = $(".requiredRadioButtonField");
                requiredFiledsRadio.each(function () {
                    var checked = $(this).find('input:radio:checked').is(':checked');  
                    if(!checked && enableApply){
                        enableApply = false;
                    }
                });
            }
            if(enableApply){
                applyBtn.removeAttr('disabled');
            }
            else{
                applyBtn.attr('disabled','true');
            }
        }
        
        var scrollPos;
        var ipFlexErrMsg=false;
        var footerOffSet=0;
        var leftPanelOffSet=0;
        var panelPosition,leftPanelHeight,leftPanelBottomOffset;
        $(document).ready(function () { 
            onloadVal = true;
            disableApplyConfigurationLink(false);
            managedRouterFunctionality(false);
            leftPanelOffSet=$("#leftPanelContainer").offset().top;
            $("body").tooltip({ selector: '[rel=tooltip]' });                        
            var $sidePanel   = $("#{!$Component.configuresiteForm.PageBlockSelectSite}");
            
            $('.scrollToTop').click(function(){
                $('html, body').animate({scrollTop : 0},500);
                return false;
            }); 
            
            $('#configaddedsitesNew tbody tr td').addClass('active');
            var leftPanelRowLength = $(".siteListPanel tbody").children('tr').length;
            
            setTimeout(function(){ validateASEFormAndEnableApply(); }, 50);

            setTimeout(function(){ 
                doFetchUpdatedPriceJS();
            }, 50);
            
            if (document.getElementById("RemoveLink")) {
                document.getElementById("RemoveLink").disabled=true;
            }
            fixedSiteTablePanel();
            disableFirstOpt();
            var sitePanelInsideScroll = 0;
            var CNUMClsVal = $('.CNUMCls').val();
            if(CNUMClsVal == 'undefined' || CNUMClsVal == null || CNUMClsVal ==''){
                setTimeout(function(){
                    $('.requiredDropdownField select').attr('disabled',true);
                    $('.CNUMCls' ).removeAttr('disabled');
                    $('.requiredRadioButtonField, .additionalBlock').find('input:radio').attr('disabled',true);
                },5000);
            }
            else{
                onPageLoadPolling();
                setTimeout(function(){
                    callFilterMethodOnLoad('off');
                },3000);
            }

            setTimeout(function(){
                $('body').css({'pointer-events':'all',"opacity":"1"});
                $('.configuresiteLoading').css('display','none');
            },7000);
                        
            var serviceTypeVal = $('[id$=serviceTypeRadioFields] input:checked').val();
            if(typeof serviceTypeVal != 'undefined' && serviceTypeVal != null && serviceTypeVal == 'ASE Basic'){
                $('.tierSpanCls').show();
            }
            else{
                $('.tierSpanCls').hide();
            }
            $('.main_nav_link').on('click', function(){        
                setTimeout(function(){   
                    leftPanelOffSet=$("#leftPanelContainer").offset().top;    
                    if($('.active_top').length>0){      
                        footerOffSet = $('#panelFooter').offset().top+50;       
                    }else{                                
                        footerOffSet = $('#panelFooter').offset().top;      
                    }       
                },500);     
            });                     
        });
    
        function doFetchUpdatedPriceJS(){
            doFetchUpdatedPrice();        
        }

        function disableFirstOpt() {   
            $('#configSites select').each(function(){
                $(this).children('option:first-child').attr('disabled', 'false');
            });
            $('#configaddedsitesNew tbody tr td a').on('click', function(){
                highlightRowId = $(this).attr('class');            
                $('#configaddedsitesNew tbody tr td a.'+highlightRowId).parent('td').parent('tr').addClass('active');
            });
        }
        
        function showPricingProcessIcon(siteId,cmd) {
            if( cmd == 'y' ){
                $('#tick'+siteId+',#oneTimeTick'+siteId).hide();
                $('#process'+siteId+',#oneTimeProcess'+siteId).show();
            }else{
                $('#tick'+siteId+',#oneTimeTick'+siteId).show();
                $('#process'+siteId+',#oneTimeProcess'+siteId).hide();
            }
        }
        
        function hidePricingProcessIcon(siteId) {
            var elemIdDollar = 'tick'+siteId;
            var elemIdProcess = 'process'+siteId;
            var elemIdOneTimeDollar = 'oneTimeTick'+siteId;
            var elemIdOneTimeProcess = 'oneTimeProcess'+siteId;
            
            var elemDollarObj = document.getElementById(elemIdDollar);
            var elemProcessObj = document.getElementById(elemIdProcess);
            var elemOneTimeDollarObj = document.getElementById(elemIdOneTimeDollar);
            var elemOneTimeProcessObj = document.getElementById(elemIdOneTimeProcess);
            
            elemDollarObj.style.display = 'block';
            elemProcessObj.style.display = 'none';
            elemOneTimeDollarObj.style.display = 'block';
            elemOneTimeProcessObj.style.display = 'none';
        }
    
        function makeTableActive(){
            $('#configaddedsitesNew tbody tr td').addClass('active');
        }

        function getIndexOfTheOption( elem, token ){
            for( var i = 0; i < elem.options.length; i++ ){
                if( elem.options[i].innerHTML == token ){
                    return i;
                }
            }
            return -1;
        }                
        
        function callFilterMethodOnLoad(flag){
            if(flag=='on'){onPageLoadPolling();}
            onloadVal = true;
            var portSpeedVal = $('.portSpeedCls select').val();
            var CIRVal = $('.CIRCls select').val();
            var classOfServiceDropDownVal = $('.classOfServiceDropDownCls select').val();
            var CNUMClsVal = $('.CNUMCls').val();
            var serviceTypeVal = $('[id$=serviceTypeRadioFields] input:checked').val();
            var selectedVal = $('[id$=classOfServiceType] input:checked').val();
            if(CNUMClsVal != 'undefined' && CNUMClsVal != null && CNUMClsVal !=''){
                var configTypeVal = $('[id$=configType] input:checked').val();
                if(configTypeVal == 'Hub & Spoke' && configTypeVal !='undefined'){
                    $('[id$=siteDesignation] table').addClass('requiredRadioButtonField');
                    $('[id$=siteDesignation] input').removeAttr('disabled');
                }else{
                    $('[id$=siteDesignation] table').removeClass('requiredRadioButtonField');
                    $('[id$=siteDesignation] input').attr('disabled','true');
                }
                setTimeout(function(){ filterDropdownValues('Service Type','portSpeedCls');},100);
                
                setTimeout(function(){ 
                    setTimeout(function(){ onloadVal = true;filterDropdownValues('Port Speed','portSpeedCls');},400);
                    if(serviceTypeVal != null && serviceTypeVal == 'ASE Broadband'){
                        onloadVal = true;
                        var cosList = ['Broadband Basic'];
                        addAndRemoveList(cosList, 'classOfServiceDropDownCls');
                    }
                    else if(selectedVal != null && selectedVal == 'Basic' && serviceTypeVal != null && serviceTypeVal == 'ASE Basic'){
                        var cosList = ['Non-Critical High','Business Critical - Medium','Real Time'];
                        onloadVal=true;
                        addAndRemoveList(cosList, 'classOfServiceDropDownCls');
                    }
                    $('.classOfServiceDropDownCls select').val(classOfServiceDropDownVal);
                    if(typeof serviceTypeVal != 'undefined' && serviceTypeVal != null && serviceTypeVal != '' && serviceTypeVal == 'ASE Basic'){
                        $('.tierSpanCls').show();
                    }
                    else{
                        $('.tierSpanCls').hide();
                    }
                    if(serviceTypeVal != 'undefined' && serviceTypeVal != null && serviceTypeVal != ''){
                        if (serviceTypeVal == 'ASE Broadband') {
                            $('[id$=macAddresses] input:radio[value=64]').removeAttr('disabled').prop('checked', 'checked').trigger('change');
                            $('[id$=macAddresses] input:radio[value=250]').attr('disabled', 'true').attr('checked', false);
                            $('[id$=macAddresses] input:radio:nth(2)').attr('disabled', 'true').attr('checked', false);
                        } else if (serviceTypeVal == 'ASE Basic') {
                            $('[id$=macAddresses] input:radio[value=250]').removeAttr('disabled');
                            $('[id$=macAddresses] input:radio:nth(2)').removeAttr('disabled');
                            $('[id$=macAddresses] input:radio[value=64]').attr('disabled','true').attr('checked', false).trigger('change');
                        } else {
                            $('[id$=macAddresses] input:radio[value=64]').attr('disabled', 'true').attr('checked', false);
                            $('[id$=macAddresses] input:radio[value=250]').attr('disabled', 'true').attr('checked', false);
                            $('[id$=macAddresses] input:radio:nth(2)').attr('disabled', 'true').attr('checked', false);
                        }
                    }  
                    disableOnProcess('n');                  
                },2000); 
            }
            else if(CNUMClsVal == 'undefined' || CNUMClsVal == null || CNUMClsVal ==''){
                disableFieldsOnCNUMChange('off');
            } 
        }
        
        function disableFieldsOnCNUMChange(enableASE){
            if(enableASE=='on'){onCNUMChangeDiable();}
            setTimeout(function(){
                var requiredFileds = $('.requiredDropdownField select, .requiredRadioButtonField');
                    requiredFileds.each(function () {
                        if($(this).is('select')){
                            var isCNUM =$(this).is($('.CNUMCls' ));
                            if(isCNUM == false){
                            
                                if($(this).val().length==0 || $(this).val().startsWith('_')){
                                    $(this).attr('disabled',true);
                                }
                                
                            }
                            else if(isCNUM == true){
                                $('[id$=serviceTypeRadioFields] input:radio').prop('checked',false);
                                $('.tierSpanCls').hide();
                                
                            }
                        }
                        else{
                            var checked = $(this).find('input:radio:checked').is(':checked');
                            
                            if(!checked){
                                $(this).find('input:radio').attr('disabled',true);
                            }
                            
                        }
                    }); 
                    if(enableASE=='on'){
                        var showASEOverlayJS = document.getElementById("hdnshowase").value;
                        if (showASEOverlayJS != 'undefined' && showASEOverlayJS == 'false') {
                        var isEnableASEBasic = $('[id$=isEnableASEBasic]').val();
                        var isEnableASEBroadband = $('[id$=isEnableASEBroadband]').val();
                        if(isEnableASEBasic == "true" && isEnableASEBroadband != "true"){
                            $('[id$=serviceTypeRadioFields] input:radio[value="ASE Basic"]').removeAttr('disabled');
                            $('[id$=serviceTypeRadioFields] input:radio[value="ASE Basic"]').prop('checked',true);
                            $('[id$=serviceTypeRadioFields] input:radio[value="ASE Basic"]').trigger('change');
                        }
                        else if(isEnableASEBroadband == "true" && isEnableASEBasic != "true"){
                            $('[id$=serviceTypeRadioFields] input:radio[value="ASE Broadband"]').removeAttr('disabled');
                            $('[id$=serviceTypeRadioFields] input:radio[value="ASE Broadband"]').prop('checked',true);
                            $('[id$=serviceTypeRadioFields] input:radio[value="ASE Broadband"]').trigger('change');
                        }
                        else if(isEnableASEBroadband == "true" && isEnableASEBasic == "true"){
                            $('[id$=serviceTypeRadioFields] input:radio[value="ASE Basic"]').removeAttr('disabled');
                            $('[id$=serviceTypeRadioFields] input:radio[value="ASE Broadband"]').removeAttr('disabled');
                        }
                    }
                    }
            },500);
        }

        function enableAllPrecedingField(element){
            if($(element).val() != null && $(element).val() != '' && $(element).val().length>0){
                var requiredFileds = $('.additionalBlock').find('input:radio');
                requiredFileds.attr('checked',false);
                requiredFileds.removeAttr('disabled');
                requiredFileds.trigger('change');
            }
            else if($(element).val() ==  'undefined' || $(element).val() == null || $(element).val() == ''){
                var requiredFileds = $('.additionalBlock').find('input:radio');
                requiredFileds.attr('checked',false);
                requiredFileds.attr('disabled',true);
                requiredFileds.trigger('change');
            }
            var classOfServiceDropDownVal = $('.classOfServiceDropDownCls select').val();
            var serviceTypeVal = $('[id$=serviceTypeRadioFields] input:checked').val();
            if (serviceTypeVal != 'undefined' && serviceTypeVal != null && serviceTypeVal != '' && (classOfServiceDropDownVal != 'undefined' && !classOfServiceDropDownVal.startsWith('_') && classOfServiceDropDownVal.length>0)){
                if (serviceTypeVal == 'ASE Broadband') {
                    $('[id$=macAddresses] input:radio[value=64]').removeAttr('disabled').prop('checked', 'checked').trigger('change');
                    $('[id$=macAddressesHidden]').trigger('change');
                    $('[id$=macAddresses] input:radio[value=250]').attr('disabled', 'true').attr('checked', false);
                    $('[id$=macAddresses] input:radio:nth(2)').attr('disabled', 'true').attr('checked', false);
                } else if (serviceTypeVal == 'ASE Basic') {
                    $('[id$=macAddresses] input:radio[value=250]').removeAttr('disabled');
                    $('[id$=macAddresses] input:radio:nth(2)').removeAttr('disabled');
                    $('[id$=macAddresses] input:radio[value=64]').attr('disabled','true').attr('checked', false).trigger('change');
                } else {
                    $('[id$=macAddresses] input:radio[value=64]').attr('disabled', 'true').attr('checked', false);
                    $('[id$=macAddresses] input:radio[value=250]').attr('disabled', 'true').attr('checked', false);
                    $('[id$=macAddresses] input:radio:nth(2)').attr('disabled', 'true').attr('checked', false);
                    $('[id$=macAddressesHidden]').trigger('change');
                }
            }
        }
        
        function disableAllPrecedingOnInterfaceChange(element){
            var CIRVal = $('.CIRCls select').val();
            var classOfServiceDropDownClsVal = $('.classOfServiceDropDownCls select').val();
            if($(element) == 'undefined' || $(element).val() == null || $(element).val() == '' || $(element).val().startsWith('_') || $(element).val().length==0){
                var requiredFileds = $('.additionalBlock').find('input:radio');
                requiredFileds.attr('checked',false);
                requiredFileds.attr('disabled', true);
                requiredFileds.trigger('change');
             }
             else if($(element) != 'undefined' && $(element).val() != null && $(element).val() != '' && !$(element).val().startsWith('_') && $(element).val().length>0){
                if(classOfServiceDropDownClsVal != 'undefined' && classOfServiceDropDownClsVal != null && !classOfServiceDropDownClsVal.startsWith('_') && classOfServiceDropDownClsVal != '' && classOfServiceDropDownClsVal != ''){
                    $('.classOfServiceDropDownCls select').trigger('change');
                }
             }
             setTimeout(function(){validateASEFormAndEnableApply();},100);
        }
        
        function disableAllPrecedingField(element) {
            var currentVal = $(element).val();
            var clearField = false;
            var skipNextElement = false;
            var requiredFileds = $('.requiredDropdownField select, .requiredRadioButtonField');
            requiredFileds.each(function() {
                var isCurrent = false;
                if (!($(this).is('select'))) {
                    var radioChecked = $(this).find('input:radio:checked');
                    if ($(element).is(radioChecked)) {
                        isCurrent = true;
                    }
                }
                if ($(this).is($(element)) || isCurrent) {
                    if ($(this).is('select')) {
                        if ($(this).val().length > 0 || !($(this).val().startsWith('_'))) {
                            skipNextElement = true;
                            return;
                        } else {
                            clearField = true;
                            return;
                        }
                    } else {
                        skipNextElement = true;
                        return;
                    }
                } else {
                    if (skipNextElement == true) {
                        clearField = true;
                        skipNextElement = false;
                        if ($(this).is('select')) {
                            $(this).val($(this).find('option:first').val());
                            $(this).removeAttr('disabled');
                        } else {
                            $(this).find('input:radio').attr('checked', false);
                            $(this).find('input:radio').removeAttr('disabled');
                            $(this).trigger('change');
                        }
                        return;
                    }
                    if (clearField == true) {
                        if ($(this).is('select')) {
                            $(this).val($(this).find('option:first').val());
                            $(this).attr('disabled', 'true');
                        } else {
                            $(this).find('input:radio').attr('checked', false);
                            $(this).find('input:radio').attr('disabled', 'true');
                            $(this).trigger('change');
                        }
                    }
                }
            });
            var siteDesignationVal = $('[id$=siteDesignation] input:checked').val();
            var portVLANBasedVal = $('[id$=portVLANBased] input:checked').val();
            var serviceTypeRadioFieldsVal = $('[id$=serviceTypeRadioFields] input:checked').val();
        }

        $('.close').on('click',function(){
            $('.blockBackground').remove();
        });
        
        //returns the value of the slect list element 
        //Parmater should be the index or the container counter of the Field
        function getFieldReference(elemIndex){
            var trElemId = 'container'+parseInt(elemIndex); 
            var currElementTr = document.getElementById(trElemId);
            if( typeof currElementTr != 'undefined' ){
                var innerTds = currElementTr.getElementsByTagName("td");
                var selectElem = innerTds[1].getElementsByTagName("input");
                if( typeof selectElem[0] != 'undefined' ){
                    return selectElem[0];
                }
            }
        }

        $('body').popover({ selector: '[data-popover]', trigger: 'click hover', placement: 'right', delay: {show: 50, hide: 2000}});
      
    </script>

    <!-- this fix is specific to the tooltip/popover -->
    <script>        
        var originalLeave = $.fn.popover.Constructor.prototype.leave;
        $.fn.popover.Constructor.prototype.leave = function(obj){
            var self = obj instanceof this.constructor ?
                obj : $(obj.currentTarget)[this.type](this.getDelegateOptions()).data('bs.' + this.type)
            var container, timeout;
            
            originalLeave.call(this, obj);siteListPanel
            
            if(obj.currentTarget) {
                container = $(obj.currentTarget).siblings('.popover')
                timeout = self.timeout;
                container.one('mouseenter', function(){
                    clearTimeout(timeout);
                    container.one('mouseleave', function(){
                        $.fn.popover.Constructor.prototype.leave.call(self, self);
                    });
                })
            }
        };
        
        function disableApplyConfigurationLink(flag){
            var ASEProduct = '{!isASE}';
            if(flag){
                $('.addaddressTrigger').addClass('disableLink');
                $('.addaddressTrigger').removeClass('enableSiteLink');
            }
            else{
                $('.addaddressTrigger').removeClass('disableLink');
                $('.addaddressTrigger').addClass('enableSiteLink');
            }
        }
    </script>
</apex:page>