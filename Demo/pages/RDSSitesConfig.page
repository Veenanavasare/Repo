<apex:page controller="RDSAVPNController" cache="true" sidebar="false" showChat="false" showHeader="false" standardStylesheets="false" applyBodyTag="false" applyHtmlTag="false" docType="html-5.0" id="test">
    <apex:includeScript value="{!URLFOR($Resource.RDSInputValidationsJS)}" />
    <apex:includeScript value="{!URLFOR($Resource.RDS_FieldValidationJS)}"/>
    <apex:includeScript value="{!URLFOR($Resource.RDS_ErrorMsgDisplayJS)}" />
 
    <style>
        .tooltip-inner{max-width: 260px;}
        .scrollToTop{
            width:75px; 
            height:100px;
            padding:10px; 
            text-align:center; 
            font-weight: bold;
            color: #444;
            position:fixed;
            bottom: 55px;
            right:40px;
            z-index:9999;
            background: url('{!$Resource.TopArrow}') no-repeat 0px 20px;
            display:none;
        }
        .has-error{border-color: #a94442 !important;}
        .has-error .form-control {border-color: #a94442 !important;}
        .tooltipTrigger {cursor: pointer;}
        .tooltip > .tooltip-inner {
            background-color: #fff;
            color: #000;
            text-align:left;
            box-shadow: 0 0 5px 5px rgba(0, 0, 0, 0.2);
        }
    
        .naviagtionOrangeLink p:first-child {float: right;}
        #customerDetailsTable tr td {border: 0px;}
        #customerDetailsTable tr td.first-cell {padding: 8px 8px 8px 0;}        
        #customerDetailsTable tr td.last-cell {padding: 8px 0 8px 8px;}   
        .naviagtionOrangeLink p {margin-bottom: 5px;}
        .ui-widget-header {
            border: 1px solid cornflowerblue !important;
            background: cornflowerblue !important;
            color: Black;
            font-weight: bold;
        }
        .message.errorM3 { 
            margin-top: 0;
            color: #cc0000;
            margin-bottom: 20px;
        }
        .errorText {        
            color: #A94442;
            font-size: 14px;
            width: 225px;
            float:left;
        }
        #customerDetailsTable tr td {border: 0px;}
        
        .darkDiv {
            background: #E6E6E6;
            margin: 10px 0;
            padding: 10px 20px;
            font-family: omnesatt_iiregular !important;
        }
        
        .darkDiv label {font-family: omnesatt_iiregular !important;}
        
        .omesregular {font-family: omnesatt_iiregular !important;}
        
        .omesmedium {font-family: omnes_att_iimedium;}
        
        #finalSites {
            //max-height: 448px;
            overflow-y: auto;
            background: #fff;
            border: 1px solid #ddd;
            margin-top:30px;
        }
        
        .dashborder {border-bottom: 1px dashed #ddd;}
        
        .requiredInput,
        .requiredInput:focus {
            border-left-width: medium !important;
            border-left-color: #FF0000 !important;
            border-left: 2px solid #ddd !important;
        }
        
        #progressbar {height: 20px;}
        .activeSite {background-color: #f5f5f5;}
        .styled-select-small select {
            -moz-appearance: none;
        }
        .vpnName_error{
            width: 300px !important;
            display: inline-block;
        }
        .vpnName{text-transform: uppercase;}
        #manage_content {margin-top:-30px;} 
    </style>
    <script>
        function reInitiateToolTip(){
           $("body").tooltip({ selector: '[rel=tooltip]' });
           $(".tooltipTrigger").tooltip();        
         }
    </script>
    <div class="m-t-20">
        <apex:form id="vpnHeaderBlock">
            <a href="#" class="scrollToTop"></a>
            <apex:inputHidden value="{!ciMD5Error}" id="ciError"/>
            <table id="customerDetailsTable" class="table" style="width:100%">
                <tr>
                    <td class="first-cell" colspan="4"><h3>{!quoteObj[0].End_Customer__r.Name}</h3></td>
                </tr>
                <tr>
                    <td class="first-cell"><strong>Quote Name</strong> {!quoteObj[0].Apttus_Proposal__Proposal_Name__c}</td>
                    <td><strong>Quote ID</strong> {!quoteObj[0].Name}</td>
                    <td><strong>Product</strong> {!quoteObj[0].Product__r.name}</td>
                    <td align="right" class="last-cell"><strong>Term</strong> {!quoteObj[0].Apttus_Proposal__Payment_Term__c}</td>
                </tr>
            </table>
            
            <hr class="blue_hr" />
            
            <div id="dispCIMsgId" style="position:relative;bottom:10px;color:#a94442;"></div>
            <apex:outputPanel id="vpnPanel" rendered="{!IF((AVPNRDSPageNumber !='Page3' && AVPNRDSPageNumber !='Page4'),true,false)}">
                <div class="p0" style="height:auto !important;" id="vpnBlock">
                    <h3 class="f-s-larger">VPN Name and Connectivity</h3>
                    <div class="col-xs-6 p0">
                        <div style="padding:0px 2px;line-height:18px;">
                            <span>Create a name for your AT&amp;T Virtual Private Network (VPN). The VPN name must be in ALL CAPS, alphanumeric, maximum of 26 characters and the only special character allowed is an _ (underscore). Currently only Any-to Any VPN Connectivity Policy is supported</span>
                        </div>
                    </div>  
                    <div class="col-xs-3" style=" margin-left: 5px; width: 296px; ">
                        <div>
                            <label class="f-s-larger omesregular">VPN Name</label><span class="tooltipTrigger glyphicon glyphicon-question-sign m-l-10" style="font-size: 20px !important;" data-toggle="tooltip" data-placement="right" title="The VPN name must be in ALL CAPS, alphanumeric, maximum of 26 characters and the only special character allowed is an _ (underscore)."></span>
                        </div>
                        <div>
                            <apex:inputText value="{!vpnname}" styleClass="form-control vpnName requiredInputField" style="height: 25px; margin-top: 10px;" id="vpnname12" />
                        </div>
                    </div>
                    <div class="col-xs-3" style=" padding-right: 0px;width: 278px; ">
                        <div>
                            <label class="f-s-larger omesregular">VPN Connection Policy</label>
                        </div>
                        <div class="add_state_input_div">
                            <div class="add_site_location_adjust">
                                <div>
                                    <apex:inputText styleClass="" html-placeholder="Any-To-Any" style="height: 25px; margin-top: 10px;" disabled="true"/>
                                    <!--  <apex:outputText value="Any-To-Any" />-->
                                </div>
                            </div>
                        </div>
                    </div>
                    <hr class="blue_hr" />                
                </div>            
            </apex:outputPanel>
        </apex:form>
        <br />
        <div class="col-xs-12 col-md-12 m-t-20 p0">
            <div class="col-xs-3 pull-left row" id="leftPanelContainer" style="z-index:1;">
                <h3 style="margin-top:0px">Site List</h3>
                <apex:form id="leftPanelContainerForm">
                    <div id="siteCountsDiv1" style="color: orange; font-weight: bold;float:left;margin-top: 5px;padding-bottom:5px;" class="f-s-larger">{!noOfConfigedSites} of {!TotalSitesCount} Sites Completed</div>
                    <div class="styled-select-small adjust-select-small" style="margin-top:16px;width:100%;">
                        <apex:selectList id="optgrp" styleClass="form-control" style="width: 100%;margin-top:-4px;" value="{!selectedFilter}" size="1" rendered="true" onchange="handlefilterSites()">
                            <apex:selectOptions value="{!FilterOptions}"/>
                        </apex:selectList>
                    </div>
                    <div id="finalSites" style="max-height: 552px;">
                        <apex:repeat value="{!listCustomerSiteMaster}" var="item">
                            <div class="panel-heading p10 omesmedium dashborder {!IF(item.custSiteIns.Id == siteselected,'activeSite','')}">
                                <table>
                                    <tr>
                                        <td style="width:210px;font-size: 16px;">
                                            <apex:commandLink value="{!item.custSiteIns.Site_Name__c}" onclick="validateRequiredFields1();getSiteId('{!item.custSiteIns.Id}');return false;">
                                                <div style="color: #777; border-bottom: 0 !important;">{!item.custSiteIns.Address_Line__c}, {!item.custSiteIns.City__c}, {!item.custSiteIns.State__c} {!item.custSiteIns.Zip_Code__c}</div>
                                            </apex:commandLink>
                                        </td>
                                        <td style="vertical-align:middle;">
                                            <apex:outputPanel rendered="{!IF(item.custSiteIns.RDS_Submitted__c == true && item.custSiteIns.IsStaticRDS__c == false ,true,false)}">
                                                <apex:image url="{!URLFOR($Resource.legendicons,'icon_circle_check.png')}" style="width: 25px; height: 25px;margin-top: 5px;margin-left:2px;" />
                                            </apex:outputPanel>
                                            
                                            <apex:outputPanel rendered="{!IF(item.custSiteIns.IsStaticRDS__c == true ,true,false)}">
                                                <apex:image url="{!URLFOR($Resource.legendicons_blue,'staticicon.png')}" style="width: 25px; height: 25px;margin-top: 5px;margin-left:2px;" />
                                            </apex:outputPanel>
                                        </td>
                                    </tr>
                                </table>
                            </div>
                        </apex:repeat>
                        <script type="text/javascript">
                        function GetURLParameterReconfig(sParam) {
                            var sPageURL = window.location.search.substring(1);
                            var sURLVariables = sPageURL.split('&');
                            for (var i = 0; i < sURLVariables.length; i++) {
                                var sParameterName = sURLVariables[i].split('=');
                                if (sParameterName[0] == sParam) {
                                    return sParameterName[1];
                                }
                            }
                        }
                        
                        function highlightReconfiguredSite(){                 
                            var winURL=window.location.href;
                            if(winURL.indexOf("siteid=") < 0){
                                document.getElementById("rdsPagePanel").style.display="none";
                                
                                
                                if(winURL.indexOf("quoteid=") < 0){
                                    winURL=winURL.replace(/&.*&/, '&')+ '?quoteid='+"{!ATTquoteid}"+ '&siteid='+"{!siteselected}";
                                }
                                else{
                                    winURL=winURL.replace(/&.*&/, '&')+ '&siteid='+"{!siteselected}";
                                }
                                window.location.href=winURL;
                            }
                        }
                        </script>
                    </div>
                    <apex:actionFunction id="filterSites" name="handlefilterSites" action="{!handlefilterSites}" reRender="leftPanelContainerForm" status="loading" oncomplete="addLeftPanelScroll();validateRequiredFields1();leftPanelFloat();">
                        <apex:param name="quoteId" value="" />
                    </apex:actionFunction>
                    
                </apex:form>
            </div>
            <div class="col-xs-9 ng-scope pull-right" id="rdsPagePanel" style="position:relative;padding-right:0px">
                <apex:outputPanel id="pagecontainer">
                    <apex:outputPanel >
                        <div class="panel-title col-xs-12 p0">
                            <apex:outputPanel id="pagecontainerIPflex" rendered="true">
                                <h3 style="margin-top:0px"><apex:outputLabel id="PageHeaderCount" styleclass="omesregular">Site Information - page {!pageIpflex} of {!pageCounter}</apex:outputLabel></h3>
                            </apex:outputPanel>
                        </div>
                    </apex:outputPanel>
                    
                    <apex:outputPanel id="changepage">
                        <apex:outputPanel rendered="{!IF(AVPNRDSPageNumber=='Page1',true,false)}">
                            <apex:include pageName="RDS_page1_siteInfo" />
                        </apex:outputPanel>
                        
                        <apex:outputPanel rendered="{!IF(AVPNRDSPageNumber=='Page2',true,false)}" >
                            <apex:include pageName="RDS_page3_vlanConfig"/>
                        </apex:outputPanel>
                        
                        <apex:outputPanel rendered="{!IF(AVPNRDSPageNumber=='Page3',true,false)}" >
                            <apex:include pageName="RDS_page4_ipflex"/>
                        </apex:outputPanel>
                        
                        <apex:outputPanel rendered="{!IF(AVPNRDSPageNumber=='Page4',true,false)}" >
                            <apex:include pageName="RDS_page5_ipflex"/>
                        </apex:outputPanel>
                        
                    </apex:outputPanel>
                </apex:outputPanel>
                <apex:form >
                    <apex:outputLabel id="CheckValidIPAddressId" value="{!IpaddressesList}" styleClass="ipVlauesSelector" style="display:none;"/>
                    <apex:outputLabel id="CheckValidIPAddressIdStr" value="{!IpaddressesStrBck}" styleClass="ipVlauesSelectorStr" style="display:none;"/>
                    <apex:inputHidden id="page2PanelNumber" value="{!panelNumber}"   />
                    <apex:actionFunction name="CheckValidIPAddress" action="{!UpdateConfigureIpAddressList}" reRender="CheckValidIPAddressId,CheckValidIPAddressIdStr" oncomplete="updateIPs();" status="loading">
                        <apex:param name="Ip_UiKey" value="" assignTo="{!Ip_UiKey}"/>
                        <apex:param name="ValidIpAddress" value="" assignTo="{!ValidIpAddress}"/>
                    </apex:actionFunction>
                    <apex:actionFunction name="removeIpAddressFromList" action="{!removeIpAddressFromList}" reRender="CheckValidIPAddressId,CheckValidIPAddressIdStr" oncomplete="updateIPs();" status="loading">
                        <apex:param name="Ip_UiKey" value="" assignTo="{!Ip_UiKey}"/>
                        <apex:param name="ValidIpAddress" value="" assignTo="{!ValidIpAddress}"/>
                    </apex:actionFunction>
                </apex:form>
            </div>
        </div>
    </div>
    <style type="text/css">
        .section-dividerHr{
            width:100%;
            clear:both;
            margin:20px 0 35px 0;
            float:left;
            border-bottom:1px solid #d3d3d3;
        }
        .sectionHeader-primary{
            font-size:22px;
        }
        .sectionHeader-secondary{
            font-weight:bold;
        }
        .m-b-25{
            margin-bottom:25px;
        }
        .m-b-10{
            margin-bottom:10px;
        }
        .m-t-10{
            margin-top:10px;
        }
        .m-r-3P{
            margin-right:3%;
        }
        .m-b-15{
            margin-bottom:15px;
        }
        .addressFields li{
            width:31%;
            display: inline-block;
        }
        .radioFields label{
            font-family: omnesatt_iiregular;
            margin: 0 25px 0 0;
        }
        .radioFields input{
            /* margin: 0 10px 0 0 !important; */
        } 
        
        .radioFields .errorText{
            //margin-top: -10px !important;
        }
        .errorText{
            color:#cf2a2a !important;
            font-weight:bold;
            float:left
        }
        .orangeText{
            color: #ea7400 !important;
            font-family: omnes_att_iimedium;
        }
        .naviagtionOrangeLink{
            float:right;
            margin-top: 25px;
        }
        .naviagtionOrangeLink p{
            margin-bottom:5px;
        }
        .naviagtionOrangeLink p:first-child{
            float:right;
        }        
        .linkToNavigate{
            float: right;
            color: #0568ae !important;
            font-family: omnes_att_iimedium;
            font-weight: bold; 
        }
        .pageNavigationBtnSection{
            margin:40px 0 10px 0;
            float:right;
        }
        .pageNavigationBtnSection li{
            display:inline;
            border:1px solid #939393;
            border-right:none;
            cursor:pointer;
            padding: 5px 25px;
            background-color: rgb(210,210,210);
            color: #000; 
            font-family: omnes_att_iimedium;
            margin-left: -5px;
        }
        .pageNavigationBtnSection li:first-child{
        
        border-radius:6px 0 0 6px;
            margin-right: -5px;
        }
        .pageNavigationBtnSection li:last-child{
            border-right:1px solid #939393;
            border-radius:0 6px 6px 0;
            margin-left: -5px;
        }
        .pageNavigationBtnSection li:last-child .inCompletePage {
            border-color:#red;
        }        
        .pageNavigationBtnSection .completedPage{
            background-color: #fff !important;
            color: #0568ae !important;
            padding: 5px 20px 5px 39px !important;
            margin-right: 0px;
        } 
        .pageNavigationBtnSection .inCompletePage{
            background-color: #fff !important;
            color: red !important;
            border-color:red !important;
            margin-left: -5px;
        }
        .pageNavigationBtnSection .currentPage{
            background-color: #0568ae !important;
            color: #fff !important;
            border-color: #939393 !important;
            margin-left: -5px;
        }
        .statusImgSuccess{
            background-image: url("{!URLFOR($Resource.legendicons,'icon_circle_check.png')}");
            background-size: 25px 25px;
            background-repeat: no-repeat;
            background-position: 14% 50%;
            margin-left: -5px;   
            margin-right: -3px;         
        }        
        .dividerHr{clear:both;}
        .blue_hr{
            width:100%;
            float:left;
        }
        .scrollToTop{
            width:75px; 
            height:100px;
            padding:10px; 
            text-align:center; 
            font-weight: bold;
            color: #444;
            position:fixed;
            bottom: 55px;
            right:40px;
            z-index:9999;
            background: url('{!$Resource.TopArrow}') no-repeat 0px 20px;
        }
        .tooltip.right .tooltip-arrow{
            border-right-color:#fff !important;
        }
        .tooltip.bottom .tooltip-arrow{
            border-bottom-color:#fff !important;
        }
        .errorFieldBorderColor{
            border-color:#a94442 !important;
            height:34px !important;
        }
        #BottomMainDIV{
            margin-left:auto;
            margin-right:auto;
            height:auto; 
            width:auto;
        }
        #inner1{
            float:right; 
        }
        #inner2{
            clear: right;
            float:right; 
        } 
    </style>
    <apex:form >
        <div class="col-xs-12 pull-right p0" id="pagePanel" style="padding-right: 0px;">
            <apex:outputPanel id="BottomSectionAVPNRDS" rendered="{!IF(VlanChannels==true || isIPFlexEnabled==true, true, false)}" >
                <div id="BottomMainDIV">
                    <div id="inner1">
                        <ul class="pageNavigationBtnSection">   
                            <apex:repeat id="pageNo" value="{!RDSVPNPagination}" var="item" rendered="{!IF(VlanChannels==true || isIPFlexEnabled==true, true, false)}">
                                <li id="{!item.pageId}" onclick="triggerMandatoryFeilds();querypagenum(this);isSubmitEnable('PageChanged')" oncomplete ="checkLastPage()">{!item.pageNo}</li>
                            </apex:repeat>
                        </ul>
                        <apex:actionFunction name="pagenavigate" action="{!pageNavigate}" status="loading" rerender="pagecontainer,changepage,leftPanelContainerForm,pagePanel,vpnPanel,vpnHeaderBlock" oncomplete="window.scrollTo(0, 0);checkPageCompletion();">
                            <apex:param assignTo="{!AVPNRDSPageNumber}" name="AVPNRDSPageNumber" value="" />
                        </apex:actionFunction>
                    </div>
                    <div id="inner2">
                        <apex:outputPanel styleClass="pull-right orangeText naviagtionOrangeLink errorTextForIncompleteFields" style="display:none;">
                            <p>You will not be able to submit the RDS until all required fields are completed for all sites;</p> 
                            <p>however, you can proceed now to another page and come back to complete the blank fields.</p> 
                            <a href="javascript:void(0)" onclick="navigateOnLinkIPFlex(forceProceedObj);" class="linkToNavigate">Click here to proceed</a>
                        </apex:outputPanel>
                    </div>
                </div>
            </apex:outputPanel> 
                <hr class="blue_hr" style="margin-bottom: 40px; margin-top: 35px;" id="panelFooter"/>
                <apex:outputPanel id="saveAndExit">
                    <div id="mainId" class="pull-right">                            
                    <apex:commandButton value="Save & Exit" styleClass="btn btn-primary" style="width: 175px !important;padding: 7px 20px !important;background:#FFFFFF !important; color:#595959 !important;border: 1px solid #595959 !important; margin-right:20px; font-family:omnes_att_iimedium !important;Font-Size:16px ! important;" onclick="saveAndExit(); return false;"/>
                    <apex:commandButton id="saveBtnId1" styleClass="btn btn-primary m0 rdsSubmit {!IF(SubmitButtonLabel == 'Submit','disabled','')}" style="font-size:16px; !important; padding-top:6px;width:175px !important;font-family:omnes_att_iimedium !important;" value="{!SubmitButtonLabel}" onclick="SubmitRDSAVPN(); return false;" />
                </div>
            </apex:outputPanel> 
        </div>
    </apex:form>
    
    <script type="text/javascript">
    
    function checkPageCompletion(){
        checkLastPage();
        setTimeout(function(){
            isSubmitEnable('Ready');
        }, 2000);
    }
    
    function onFieldChange(flag){
        $(".requiredField, .requiredInputField").on({
            "keyup blur change": function () {
                isSubmitEnable("keyup");
            }
        });
    }   
    
    //onFieldChange("Main Page Onload");
    Visualforce.remoting.timeout = 120000;
    var siteIdVar = '{!siteselected}';
    var pagecount ='{!pagecounter}';
    var currentpagenumber='';
    var isLastPage = 'false';
    
    function checkLastPage(){
        var currentPageObj = $('.currentPage');
        if(currentPageObj != null && currentPageObj.prop('id') != null){
            currentpagenumber  = currentPageObj.prop('id');
        }
        
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.RDSAVPNController.querypageCompleted}',
            quoteId,siteIdVar,pagecount,
            function(result, event) {
                if(result=='true'){
                    isLastPage = 'true';
                }else{
                    isLastPage = 'false';
                }   
            }
        ); 
    }
    
    function isSubmitEnable(flag){
        setTimeout(function() {
            if('{!SubmitButtonLabel}'=='Submit') {                
                $('.rdsSubmit').addClass('disabled');
                validateRequiredFields1();
                console.log('isLastPage '+isLastPage+' rdsFlag=='+rdsFlag+' errorflagavpn=='+errorflagavpn+$('.errorText').length+'*****'+$(".errorStyle").length);
                if(isLastPage==='true' && rdsFlag === 'true' && errorflagavpn && $('.errorText').length===0 && $(".errorStyle").length ===0 && page2AccordActive == false){
                    $('.rdsSubmit').removeClass('disabled').prop("disabled", false); 
                }else {
                    $('.rdsSubmit').addClass('disabled').prop("disabled", true); 
                }
            } else {
                $('.rdsSubmit').removeClass('disabled').prop("disabled", false); 
            }
        }, 1000);
    }
    
    function SubmitRDSAVPN (){
        validateRequiredFields1();
        var vpnNameStr = '';
        if($('.vpnName') && $('.vpnName').val() != null){
            vpnNameStr = $('.vpnName').val();
        }
        SubmitRDS(rdsFlag.toString(), vpnNameStr.toString());
    }
    
    function showErrorBlock(){
        var issitecomplete;
        issitecomplete = validateRequiredFields1();
        if(errorflagavpn == false){     
            $(".errorTextForIncompleteFields").show();
        }
        else{   
            $(".errorTextForIncompleteFields").hide();
        }
    }
    
    function triggerMandatoryFeilds(){
        var requiredFileds = $(".requiredField");
        requiredFileds.each(function () {
            if($(this).val().length ==0){
                $(this).trigger('keyup');
            }   
        });
        requiredFileds = $(".requiredInputField");
        requiredFileds.each(function () {
            if($(this).val().length ==0){
                $(this).trigger('keyup');
            }   
        });
    }
    
    var siteId = '{!siteselected}';
    var quoteId = '{!quoteid}';
    var varResult ;
    var forceProceed=false;
    var forceProceedObj;
    var navigateTo;
    
    function querypagenum(e) {
        navigateTo = e.id;
        forceProceedObj = e;
        errorflagavpn = true;
        pageName = e.id;
        var currentPage = '';
        $('.errorTextForIncompleteFields').hide();
        rdsFlag='false';
        var currentPageObj = $('.currentPage');
        
        if(currentPageObj != null && currentPageObj.prop('id') != null){
            currentPage = currentPageObj.prop('id');
        }
        if(currentPage != null && (currentPage == 'Page3' || currentPage == 'Page4')){
            requiredFieldValidation();
        }
        
        if(currentPage != null && currentPage == 'Page4'){
                    reachPlanBlocksValidationOnNav();
                    //check files uploaded 
            uploadedFileNames();
        }
        validateRequiredFields1();
        if(!forceProceed){
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.RDSAVPNController.queryPageCurrentSite}',
                siteId, quoteId, 
                function(result, event) {
                    varResult = result;
                    
                    
                }
            );
        }else{
            varResult = currentPage;
        }
        
        if(varResult == null || varResult == undefined){
            varResult = currentPage;
        }
        
        if(forceProceedObj != null && forceProceed){
            pageName = $(forceProceedObj).prop('id'); 
            
        }
        
        if(rdsFlag=='true' || forceProceed){
            pageName=forceProceedObj.id;
            var vpnNameStr = '';
            if($('.vpnName') && $('.vpnName').val() != null){
                vpnNameStr = $('.vpnName').val();
            }
            saveRdsAvpnData(rdsFlag.toString(), vpnNameStr.toString());
        }else{
            $('.errorTextForIncompleteFields').show();
            forceProceedObj = e;
        }
        forceProceed=false;
    } 
    
    function navigateOnLinkIPFlex(e){
        forceProceed=true;
        pageName=forceProceedObj.id;
        $(forceProceedObj).trigger('click');
    }
    
    function reachPlanBlocksValidationOnNav(){
        var firstFlagTrue = "{!portableNumbersOnExistingIPFlexPlan}";
        if($(".IPFlexibleReachPlan") != null && $(".IPFlexibleReachPlan input:checked") != null && $(".IPFlexibleReachPlan input:checked").val()=='Yes')
        {
            firstFlagTrue = 'true';
        }
        var isError = true;
        if(firstFlagTrue == 'true'){
            $('.reachPlanBlocks').each(function() {
                        var currentElement = $(this);
                        var value = currentElement.val();
                        if(value != null && value !='' && value.length > 0 )
                        {
                            isError = false;
                            currentElement.keyup();
                        }
                        if(!isError)
                            return false;
            }); 
                if(isError){
                    rdsFlag='true';
                    var inputObj = $('.blockOne');
                    if(inputObj != null){
                        $(".blockOne_error").remove();
                        var parentElement = inputObj.parent();
                        inputObj.addClass('requiredInputField');
                        parentElement.addClass("has-error").append("<p class='errorText blockOne_error'> Cannot be blank.</p>");
                        inputObj.focus();
                    }
                }   
            }
    }
    function uploadedFileNames(){
        var portTypeObj = $('.port_Type');
        
        if(portTypeObj != null && typeof portTypeObj != "undefined" && portTypeObj.val() != null && (portTypeObj.val() == 'Full' || portTypeObj.val() == 'Partial')){
            if($( ".uploadedFileList li" ) != null && $(".uploadedFileList li").length == 0){
                $(".CSR-form-errors").text("One uploaded file is required.").show();
                $("#CSR_Upload_btn").addClass('button-disabled');
            }
            else{
                $(".CSR-form-errors").hide();
                $(".CSR-form-errors").text('');
            }
        }
        
        if(Object.keys(PortTNObject).length === 2){
            $(".portingTNSectionError").text("One uploaded file is required.").show();
            $("#TN_Upload_btn").addClass('button-disabled');
        }
        else{
            $(".portingTNSectionError").hide();
            $(".portingTNSectionError").text('');
        }
    }
    
    function checkCIError(){
        var errorMsgCI = $('[id$=ciError]').val();         
        var ciErrMsg = document.getElementById("dispCIMsgId");
        if(errorMsgCI != ''){    
            ciErrMsg.innerHTML = '<h style="color:red;font-weight:bold;">'+errorMsgCI+'</h>';
            $('html, body').animate({
                scrollTop: $('#customerDetailsTable').offset().top
            },1000);
            
            var md5v4 = $('[id$=pwdv4]').val();
            var md5v4re = $('[id$=pwdv4conf]').val();
            if((md5v4!='') || (md5v4!=null)){
                $('[id$=pwdv4]').val('');
                $('[id$=pwdv4conf]').val('');
            }
            
            var md5v6 = $('[id$=pwdv6]').val();
            var md5v6re = $('[id$=pwdv6conf]').val();
            if((md5v6!='') || (md5v6!=null)){
                $('[id$=pwdv4]').val('');
                $('[id$=pwdv4conf]').val('');
            }
        }else{
            ciErrMsg.innerHTML="";
        }
    } 
    
    var pageName;
    function pageNavigation(e,pageNo,flag){
        if(e != null ){
            if(flag == null){
                flag= false;
            }
            pageName = e.id;
            if((pageName == null || pageName == '' )&& forceProceedObj !=  null){
                pageName = forceProceedObj.id;
            }
            checkPageFilled(varResult);
            
            var issitecomplete;
            issitecomplete = validateRequiredFields1();
            
            if(pageName != null)document.getElementById(pageName).className = 'currentPage';
            if(varResult != null && varResult != '' && forceProceed){
                pageName = varResult;
            }
            var ciErrorMsg = jQuery('[id$=ciError]').val();
            
            if(pageNo != null && pageNo =='Page1' && ciErrorMsg != null && ciErrorMsg.length>0){
                checkCIError();
                querypagenum(jQuery('#Page1'));
                checkPageFilled(varResult);
                rdsFlag ='false';
                pagenavigate('Page1');              
            }else{                   
                pagenavigate(pageName);                    
            }
            pageName = e.id;
        }
        forceProceed = false;
    };
    
    function saveAndExit(){
        validateRequiredFields1();
        var vpnNameStr = '';
        if($('.vpnName') && $('.vpnName').val() != null){
            vpnNameStr = $('.vpnName').val();
        }            
        saveandclose(vpnNameStr.toString());
    }
    
    </script>     
    <script type="text/javascript">
    var page2AccordActive = false;
    var $ = jQuery.noConflict();
    var uniqueIPVals =  [];
    var prevSClassName = '';
    var prevSValue = '';
    var progressbar = $("#progressbar"),
        progressLabel = $(".progress-label");
    
    function updateIPs(){
        var str='{!IpaddressesList}';//$('.ipVlauesSelector').text();
        str=str.replace(' ','');
        str=str.replace(/^\s+|\s+$/gm,'')
        str=str.replace('[','');
        str=str.replace(']','');
        var find = ' ';
        var re = new RegExp(find, 'g');
        str = str.replace(re, '');
        uniqueIPVals = str.split(',');
    }
    
    var attHolidays = {!Holidays};
    var attHolidaysLength = attHolidays.length;    
    function holidays(date) {
        for (i = 0; i < attHolidaysLength; i++) {
            if (date.getMonth() == attHolidays[i][0] - 1 && date.getDate() == attHolidays[i][1] && date.getFullYear() == attHolidays[i][2]) {
                return [false, '', attHolidays[i][3]];
            }
        }
        return [true, ''];
    }
    
    function noWeekendsOrHolidays(date) {
        var noWeekend = j$.datepicker.noWeekends(date);
        if (noWeekend[0]) {
            return holidays(date);
        } else {
            return noWeekend;
        }
    }

    progressbar.progressbar({
        value: {!OverallCompletion},
        change: function () {
            progressLabel.text(progressbar.progressbar("value") + "%");
        }
    });
    
    // Function to initialize the VPN field validations
    function initializeVPNValidation() {
        $(".inputVPNName").on({
            "keyup": function () {
                validateVPN('inputVPNName');
            },
            "blur": function () {
                validateVPN('inputVPNName');
            }
        });
    }
    
    function initializeSelectFieldValidations() {
        $(".VPNConnectionPolicySelector").on({
            "onchange": function () {
                validateSelectOptions('VPNConnectionPolicySelector');   
                validateSelectOptions1('hubNspokeSelector');
            },
            "blur": function () {
                validateSelectOptions('VPNConnectionPolicySelector');
                validateSelectOptions1('hubNspokeSelector');
            }
        });
    }
    
    function addLeftPanelScroll(){
        var tableHeight=0;
        var leftPanelRowLength = $("#finalSites tbody").children('tr').length;
        
        if(leftPanelRowLength != null && leftPanelRowLength>8){
            for(var i=0; i<8; i++){
                tableHeight = tableHeight +$("#finalSites").children('div.panel-heading').eq(i).outerHeight();
            }
            $('#finalSites').css('max-height',tableHeight);   
        }
    }
    
    function leftPanelFloat(){
        //scroll site panel-heading
        var leftPanelHeight=$("#leftPanelContainer").height();
        var headerHeight=$('#top_nav_bar').height();
        if($('.active_top').length>0){      
            var footerOffSet = $('#panelFooter').offset().top+50;       
        }else{                                
            var footerOffSet = $('#panelFooter').offset().top;      
        }
        var panelPosition=footerOffSet-leftPanelHeight-leftPanelOffSet;
        
        var leftPanelBottomOffset;
        scrollPos=$(window).scrollTop()+headerHeight; 
        leftPanelBottomOffset= scrollPos + leftPanelHeight;  
        if(scrollPos >= leftPanelOffSet){
            
            $("#leftPanelContainer").css({'position':'fixed','top':headerHeight+'px','width':leftPanelWidth-0.5});                         
        }else{
            
            $("#leftPanelContainer").css({"position":"relative","top":"0px"});
        }
        if(leftPanelBottomOffset >= footerOffSet){
            $("#leftPanelContainer").css({"position":"absolute","top":panelPosition+'px'});
        }//end of scroll
    }
    
    var goToSiteId='';
    function getSiteId(siteId){
        goToSiteId=siteId;
        var vpnNameStr = '';
        if($('.vpnName') && $('.vpnName').val() != null){
            vpnNameStr = $('.vpnName').val();
        }
        passSite(goToSiteId.toString(),rdsFlag.toString(), vpnNameStr.toString());                    
    } 
    
    // Initialize the field validations on document.ready
    var leftPanelOffSet;
    var leftPanelWidth;
    var pageNme = "{!AVPNRDSPageNumber}";
    var page2Visited;
    var page3Visited;
    var page4Visited;
    var submitCount=0;
    $(document).ready(function () {
        setTimeout(function() {
            checkLastPage();    
        },2000);
        
        if(pageCounter>1){
            checkPageFilled('');
            addcurrentpage();
        }
        initializeVPNValidation();
        initializeSelectFieldValidations();
        removeDashLine();           
        addLeftPanelScroll();
        
        //scroll site panel-heading
        leftPanelOffSet=$("#leftPanelContainer").offset().top;
        leftPanelWidth=$("#leftPanelContainer").outerWidth();
        var leftPanelHeight;
        var headerHeight;
        var footerOffSet;
        var panelPosition;
        var leftPanelHeight;
        var headerHeight;
        var panelPosition;
        
        var leftPanelBottomOffset;
        $(window).scroll(function(){
            leftPanelHeight=$("#leftPanelContainer").height();
            headerHeight=$('#top_nav_bar').height(); 
            footerOffSet = $('#panelFooter').offset().top;
            panelPosition=footerOffSet-leftPanelHeight-leftPanelOffSet;
            
            scrollPos=$(window).scrollTop()+headerHeight; 
            leftPanelBottomOffset= scrollPos + leftPanelHeight;                        
            if(scrollPos >= leftPanelOffSet){
                
                $("#leftPanelContainer").css({'position':'fixed','top':headerHeight+'px','width':leftPanelWidth-0.5});                    
            }else{
                
                $("#leftPanelContainer").css({"position":"relative","top":"0px"});
            }
            
            if(leftPanelBottomOffset >= footerOffSet){
                
                $("#leftPanelContainer").css({"position":"absolute","top":panelPosition+'px'});
            }  
            
            if ($(this).scrollTop() > 50) {
                $('.scrollToTop').fadeIn();
            } else {
                $('.scrollToTop').fadeOut();
            }                        
        });
        
        //end of scroll

        $('.main_nav_link').on('click', function(){     
            setTimeout(function(){      
                leftPanelOffSet=$("#leftPanelContainer").offset().top;
                if($('.active_top').length>0){      
                    footerOffSet = $('#panelFooter').offset().top+50;       
                }else{       
                    footerOffSet = $('#panelFooter').offset().top;      
                }       
            },500);
        });
            
        CharLimit_Note('.noteExceptionClass', 50);
        $(".noteExceptionClass").on('input propertychange', function() {
            CharLimit_Note(this, 50);
        });
        
        CharLimit('.myTextareaClass', 68);
        $(".myTextareaClass").on('input propertychange', function() {
            CharLimit(this, 68);
        });
        validateRequiredFields1();
        setTimeout(function() {
            isSubmitEnable("Ready");
        }, 2000);
        //document.getElementById(pageNme).className = 'currentPage';
        
        //Click event to scroll to top
        $('.scrollToTop').click(function(){
            $('html, body').animate({scrollTop : 0},300);
            return false;
        });  
    });
    
    function CharLimit(input, maxChar) {
        
        var len ;
        if($(input) != null && $(input).val() != null){
            len = $(input).val().length;
        }
        
        if (len > maxChar) {
            $(input).val($(input).val().substring(0, maxChar));
            $('.additionalInfoMsg').html(0 + ' characters remaining');
        }
        else{
            $('.additionalInfoMsg').html(maxChar - len + ' characters remaining');
        }
        if((maxChar - len)==maxChar){
            $('.additionalInfoMsg').css('display','block');
        }
        else{
            $('.additionalInfoMsg').css('display','block');
        }
        if($(input) != null && $(input).val() != null) {
            $('.additionalInfo').trigger('keyup');
        }
    }
    
    function CharLimit_Note(input, maxChar) {
        
        var len ;
        if($(input) != null && $(input).val() != null){
            len = $(input).val().length;
        }
        
        if (len > maxChar) {
            $(input).val($(input).val().substring(0, maxChar));
            $('.additionalInfoMsg1').html(0 + ' characters remaining');
        }
        else{
            $('.additionalInfoMsg1').html(maxChar - len + ' characters remaining');
        }
        if((maxChar - len)==maxChar){
            $('.additionalInfoMsg1').css('display','block');
        }
        else{
            $('.additionalInfoMsg1').css('display','block');
        }
    }
    
    function removeDashLine(){
        var siteAddressDiv = $("#finalSites").find(".panel-heading:last");
        siteAddressDiv.removeClass("panel-heading p10 omesmedium dashborder");
        siteAddressDiv.addClass("panel-heading p10 omesmedium");
    }
    
    function addcurrentpage(){
        var currentsiteid = '{!AVPNRDSPageNumber}';
        document.getElementById(currentsiteid).className = 'currentPage';
    }
    
    function updateVPNConnectionPolicyAcross(){
        
        updateVPNConnectionPolicyPg3();
    }   
    function onchangeVal(chage) {
        var chaVal = chage.value;
        validateRequiredFields1();
        
        var arrRequiredFields = $(".requiredInputField"),
            boolIsNumberValid = true,
            boolIsValid = true,
                    oAddCustomerButton = $('.btnSave, .btnContinue');
        if (boolIsValid && boolIsNumberValid) {
            // Add customer button enabled
            if (oAddCustomerButton[0]) {
                oAddCustomerButton.parent().removeClass("btn-complete-parent-disabled");
                oAddCustomerButton.removeClass("disabled");
                oAddCustomerButton.removeAttr("disabled");
            }
        } else {
            // Add customer button disabled
            if (oAddCustomerButton[0]) {
                oAddCustomerButton.parent().addClass("btn-complete-parent-disabled");
                oAddCustomerButton.addClass("disabled");
                oAddCustomerButton.attr("disabled", "disabled");
            }
        }
        
    }  
    
    function validateSelectOptions1(sClassName) {
        var boolIsValid = true,
            oField = $("." + sClassName),
            sValue = "",
            sErrorMessage,
            oParent = oField.parent().parent();
        if (oField[0]) {
            sValue = oField.val();
            if ("" === sValue) {
                boolIsValid = false;
                sErrorMessage = "Required Input!";
            }
            if (oParent[0]) {
                
                $('.' + sClassName.replace(/\s/g, "_").replace(/["'()]/g, "") + "_error").remove();
                if (!boolIsValid) {
                    oParent.addClass("has-error").append("<p style='margin-top:10px;' class='errorText " + sClassName.replace(/\s/g, "_").replace(/["'()]/g, "") + "_error'>" + sErrorMessage + "</p>");
                } else {
                    oParent.removeClass("has-error");
                }
            }
        }
        validateRequiredFields1();
    }
    
    var rdsFlag='false';
    var errorflagavpn;
    function validateRequiredFields1() {
        errorflagavpn = true;
            $('.btnSave, .btnContinue').addClass('disabled');
        // Iterate through all fields and check if there are any invalid entries. If yes, then return false    
        var arrRequiredFields = $(".requiredInputField"),
            boolIsNumberValid = true,
            boolIsValid = true,
            oAddCustomerButton = $('.rdsSubmit');
        arrRequiredFields.each(function () {
            oRequiredField = $(this);
            if (oRequiredField[0]) {
                if (0 === oRequiredField.val().length) {
                    boolIsValid = false;
                    errorflagavpn = false;
                    return false;
                }
            }
        });
        
        if(boolIsValid){
            arrRequiredFields = $(".requiredField"),
                boolIsNumberValid = true,
                boolIsValid = true,
                oAddCustomerButton = $('.btnSave, .btnContinue');
            arrRequiredFields.each(function () {
                oRequiredField = $(this);
                if (oRequiredField[0]) {
                    if (0 === oRequiredField.val().length) {
                        boolIsValid = false;
                        errorflagavpn = false;
                        return false;
                    }
                }
            });
        }
        
        // If there is any error message present, do not enable the button
        if (0 < $(".errorText").length || 0 < $(".errorStyle").length) {
            if(!($(".errorText").parent().find('.requiredField').length == 0 && $(".errorText").parent().find('.requiredInputField').length == 0)){
                boolIsNumberValid = false;
            }
        }
        
        if(boolIsNumberValid){
            var formErrorObj = $(".form-errors");
            if(typeof formErrorObj != 'undefined' && formErrorObj != null && formErrorObj.text() != null && formErrorObj.text().length>0){
                boolIsNumberValid = false;
            }
        }
        
        //validate page5 radio buttons
        var currentPageObj = $('.currentPage');
        var currentPage = '';
        if(currentPageObj != null && currentPageObj.prop('id') != null){
            currentPage = currentPageObj.prop('id');
        }
        
        if(currentPage != null && currentPage == 'Page4'){
            var page5RadioButtons = ['IPFlexibleReachPlan','includeFaxNumber', 'listingForPhoneInfo'];
            j$.each(page5RadioButtons, function( index, value ){
                if($('.'+value) != undefined && $('.'+value)){
                    var radioVal = $('.'+value+' input:radio:checked').val();
                    if((radioVal == 'undefined' || radioVal == null) && boolIsValid == true){
                        boolIsValid = false;                                    
                    }
                    if(value == 'listingForPhoneInfo' && boolIsValid==true && (radioVal != 'undefined' && radioVal != null && radioVal == 'true')){
                        radioVal = $('.listed_Address input:radio:checked').val();
                        if((radioVal == 'undefined' || radioVal == null) && boolIsValid == true){
                            boolIsValid = false;
                        }
                    }
                }
            }); 
            var portNumVal = $('.IPFlexibleReachPlan input:radio:checked').val();
            if((typeof portNumVal != undefined && portNumVal != null && portNumVal == "Yes") && Object.keys(PortTNObject).length === 2){
                boolIsValid = false;
            }
        }
        
        //check Vlan value
        if($('.vlanChSelectClass') != undefined && $('.vlanChSelectClass')){
            var vlanCount = $('.vlanChSelectClass').val();
            if(vlanCount != null && vlanCount != ''){
                var vlanCountInt = parseInt(vlanCount);
                
                for(var i=1; i<=vlanCountInt; i++){
                    var oRequiredFieldCust = $('#vlanStatus-'+i);
                    if(oRequiredFieldCust.val() == undefined || oRequiredFieldCust.val() == ''){
                        boolIsValid = false;
                        break;
                    }else if(oRequiredFieldCust.val() != undefined && oRequiredFieldCust !=null && oRequiredFieldCust.val()=='Incomplete'){
                        boolIsValid = false;
                        break;
                    }                                                       
                }
            }
        }
        
        if (boolIsValid && boolIsNumberValid) {
            if (oAddCustomerButton[0] && '{!SubmitButtonLabel}'=='Submit' && isLastPage == 'true') {
                oAddCustomerButton.parent().removeClass("btn-complete-parent-disabled");
                oAddCustomerButton.removeClass("disabled");
                oAddCustomerButton.removeAttr("disabled");
            }
            rdsFlag = 'true';
        } else {
            if (oAddCustomerButton[0] && '{!SubmitButtonLabel}'=='Submit') {
                oAddCustomerButton.parent().addClass("btn-complete-parent-disabled");
                oAddCustomerButton.addClass("disabled");
                oAddCustomerButton.attr("disabled", "disabled");
            }
            rdsFlag = 'false';
            errorflagavpn = true;
        }
    }      
    updateIPs();
    
    var pageCounter = {!pageCounter};
    if(pageCounter == null){pageCounter = 0;}
    
    function updatePageButtonStatus(pageName,flag,visited){
        if(flag =='true' && visited == 'true'){
            document.getElementById(pageName).className = 'completedPage statusImgSuccess';
        }else{
            if(visited == 'true'){
                document.getElementById(pageName).className = 'inCompletePage';
            }
        }
    }
    
    function checkPageFilled(varResult) {
        submitCount = 0;
        var page1completed = '{!page1completed}';
        var page2completed = '{!page2completed}';
        var page3completed = '{!page3completed}';
        var page4completed = '{!page4completed}';
        page2Visited =' false';
        page3Visited = 'false';
        page4Visited = 'false';
        var cuurentPage =navigateTo;
        var latestFlags;
        
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.RDSAVPNController.queryPageCurrentSiteAfter}',
            siteId, quoteId, 
            function(result, event) {
                latestFlags = result;
                if(latestFlags != null && latestFlags != ''){
                    if(latestFlags != null){
                        var splitMainArr= latestFlags.split('-');
                        if(splitMainArr.length>=2){
                            var splitCompletedArr= splitMainArr[0].split(':');
                            if(splitCompletedArr.length>=4){
                                page1completed = splitCompletedArr[0];
                                page2completed = splitCompletedArr[1];                                     
                                page3completed = splitCompletedArr[2];
                                page4completed = splitCompletedArr[3];
                            }
                            
                            if(splitMainArr.length>=2){
                                var splitVisitedArr= splitMainArr[1].split(':');
                                page2Visited = splitVisitedArr[0];
                                page3Visited = splitVisitedArr[1];
                                page4Visited = splitVisitedArr[2];
                            }
                        }
                    }

                    switch(pageCounter){
                        case 2: updatePageButtonStatus('Page1',page1completed,'true');
                            updatePageButtonStatus('Page2',page2completed,page2Visited);
                            if(page1completed == 'true') submitCount = submitCount+1;
                            if(page2completed == 'true') submitCount = submitCount+1;
                            break;
                        case 3: updatePageButtonStatus('Page1',page1completed,'true');
                            updatePageButtonStatus('Page3',page3completed,page3Visited);
                            updatePageButtonStatus('Page4',page4completed,page4Visited);
                            if(page1completed == 'true') submitCount = submitCount+1;
                            if(page3completed == 'true') submitCount = submitCount+1;
                            if(page4completed == 'true') submitCount = submitCount+1;
                            break;
                        case 4: updatePageButtonStatus('Page1',page1completed,'true');
                            updatePageButtonStatus('Page2',page2completed,page2Visited);
                            updatePageButtonStatus('Page3',page3completed,page3Visited);
                            updatePageButtonStatus('Page4',page4completed,page4Visited);
                            if(page1completed == 'true') submitCount = submitCount+1;
                            if(page2completed == 'true') submitCount = submitCount+1;
                            if(page3completed == 'true') submitCount = submitCount+1;
                            if(page4completed == 'true') submitCount = submitCount+1;
                            break;
                    }
                    if(cuurentPage != null && cuurentPage != undefined && cuurentPage != ''){
                        document.getElementById(cuurentPage).className = 'currentPage';
                    }else{
                        cuurentPage = '{!AVPNRDSPageNumber}';
                        document.getElementById(cuurentPage).className = 'currentPage';
                    }
                }
            }
        );
        if(forceProceedObj != null && forceProceed){
            pageName = $(forceProceedObj).prop('id'); 
        }
    }
    </script>
    <script>
    highlightReconfiguredSite();
    setTimeout(function(){
        var arrRequiredFields = $(".requiredInputField");
        arrRequiredFields.each(function () {
            var oRequiredField = $(this);
            if(arrRequiredFields.length > 1){
                arrRequiredFields.each(function () {
                    var oRequiredField = $(this);
                    if (oRequiredField[0]) {
                        if (0 < oRequiredField.val().length){
                            oRequiredField.keyup();
                        }
                    }
                });
            }
        });
        
    },100);
    validateRequiredFields1();
    
    </script>
</apex:page>